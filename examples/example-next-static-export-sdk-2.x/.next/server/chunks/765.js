exports.id=765,exports.ids=[765],exports.modules={7599:()=>{},502:()=>{},833:(e,t,i)=>{Promise.resolve().then(i.t.bind(i,9127,23)),Promise.resolve().then(i.t.bind(i,9915,23)),Promise.resolve().then(i.t.bind(i,1391,23)),Promise.resolve().then(i.t.bind(i,9342,23)),Promise.resolve().then(i.t.bind(i,3370,23)),Promise.resolve().then(i.t.bind(i,4734,23)),Promise.resolve().then(i.t.bind(i,6869,23))},3985:(e,t,i)=>{Promise.resolve().then(i.t.bind(i,2931,23)),Promise.resolve().then(i.t.bind(i,2559,23)),Promise.resolve().then(i.t.bind(i,7987,23)),Promise.resolve().then(i.t.bind(i,4082,23)),Promise.resolve().then(i.t.bind(i,246,23)),Promise.resolve().then(i.t.bind(i,3058,23)),Promise.resolve().then(i.t.bind(i,3457,23))},4177:(e,t,i)=>{Promise.resolve().then(i.t.bind(i,4566,23))},3505:(e,t,i)=>{Promise.resolve().then(i.t.bind(i,4170,23))},9143:(e,t,i)=>{"use strict";let r;i.d(t,{x:()=>tw});let a={centimeter:"CENTIMETERS",centimeters:"CENTIMETERS",cm:"CENTIMETERS",meter:"METERS",meters:"METERS",m:"METERS",kilometer:"KILOMETERS",kilometers:"KILOMETERS",km:"KILOMETERS",inch:"INCHES",inches:"INCHES",foot:"FEET",feet:"FEET",yard:"YARDS",yards:"YARDS",mile:"MILES",miles:"MILES",nautical_mile:"NAUTICAL_MILES",nauticalMile:"NAUTICAL_MILES","nautical miles":"NAUTICAL_MILES"},n={sec:"SECONDS",seconds:"SECONDS",min:"MINUTES",minute:"MINUTES",minutes:"MINUTES",hr:"HOURS",hrs:"HOURS",hour:"HOURS",hours:"HOURS",day:"DAYS",days:"DAYS",wk:"WEEKS",week:"WEEKS",weeks:"WEEKS",mos:"MONTHS",month:"MONTHS",months:"MONTHS",yr:"YEARS",year:"YEARS",years:"YEARS"},o={...n,quarter:"QUARTERS",quarters:"QUARTERS"},s={ms:"MILLISECONDS",milliseconds:"MILLISECONDS",...n};class c extends Error{constructor(e,t,i,r,a,n){super(e),this.message=e,this.errorName=t,this.errorCode=i,this.statusCode=r,this.errorInstanceId=a,this.parameters=n}}class l extends c{constructor(e,t,i){super(e,t),this.originalError=i}}class p extends Error{constructor(e){super("Validation Error"),this.validation=e}}let u={name:"__EXPERIMENTAL__NOT_SUPPORTED_YET__createMediaReference"},y={name:"__EXPERIMENTAL__NOT_SUPPORTED_YET__fetchOneByRid"},d={name:"__EXPERIMENTAL__NOT_SUPPORTED_YET__getBulkLinks"};var f=i(3016),m=i(3868),b=i(5892);async function h(e,t){return(0,b.t)(e,"/bulk-links","PUT",t)}async function g(e,t,i){return(0,b.t)(e,"/ontology/ontology/bulkLoadEntities","POST",i)}async function w(e,t){return(0,b.t)(e,"/ontology/linkTypesForObjectTypes","POST",t)}async function j(e,t){return(0,b.t)(e,"/ontology/ontology/ontologies/load/all","POST",t)}var T=i(8325);function v(e,t){return{type:e,[e]:t}}function O({baseUrl:e,fetch:t,tokenProvider:i},r){return{baseUrl:e,servicePath:r,fetchFn:t,tokenProvider:i}}function N(e){return e.results}function k(e,{pageToken:t}){return t?{...e,pageToken:t}:void 0}async function*S(e,t,i,r){let a=r;for(;a;){let r=await e(a);for(let e of t(r))yield e;a=i(a,r)}}function E(e=new Map,t){function i(t,i){return e.set(t,i),i}return{get:function(r){let a=e.get(r);return void 0===a&&void 0!==t?i(r,t(r)):a},set:i,remove:function(t){return e.delete(t)}}}function $(e,t,i=E){let r=i("weak"===e?new WeakMap:new Map),a=i("weak"===e?new WeakMap:new Map),n={getOrUndefined:function(e){return r.get(e)},get:async function(e){return r.get(e)??a.get(e)??n.set(e,t(e))},set:async function(e,t){try{let i=await a.set(e,t);return r.set(e,i),a.remove(e),i}catch(t){throw a.remove(e),t}}};return n}async function A(e,t){return(r??=await j(e,{})).ontologies[t]||(0,T.A)(!1),r.ontologies[t].currentOntologyVersion}let M=e=>$("strong",e).get;class P{#e;#t;#i;constructor(e){this.forObjectByRid=M(async e=>Promise.resolve({getPropertyMapping:this.#r.bind(this,e),getLinkMapping:this.#a.bind(this,e),getRid:()=>e,getApiName:async()=>(await this.#n(e)).apiName})),this.forObjectByApiName=M(async e=>{let t=await this.#e.ontologyProvider.getObjectDefinition(e);return this.forObjectByRid(t.rid)}),this.#r=M(async e=>(function(e){1!==e.primaryKeys.length&&(0,T.A)(!1);let t=e.primaryKeys[0],i=Object.values(e.propertyTypes).find(e=>e.rid===t);if(!i)throw Error(`Could not find PK property by rid: ${t}`);let r=Object.fromEntries(Object.values(e.propertyTypes).map(e=>[e.id,e.apiName])),a=Object.fromEntries(Object.values(e.propertyTypes).map(e=>[e.apiName,e.id]));return{apiName:e.apiName,id:e.id,propertyIdToApiNameMapping:r,propertyApiNameToIdMapping:a,pk:{rid:t,apiName:i.apiName,type:i.type}}})(await this.#n(e))),this.#a=M(async e=>{let t=await w(this.#t,{includeObjectTypesWithoutSearchableDatasources:!0,loadRedacted:!1,objectTypeBranches:{},objectTypeVersions:{[e]:await this.ontologyVersion("")}});t.linkTypes[e]||(0,T.A)(!1);let i={};for(let r of t.linkTypes[e]){let t=({apiName:e},t,a)=>{e&&(i[e]={apiName:e,directedLinkTypeRid:{linkTypeRid:r.rid,linkSide:t},otherObjectType:a})};if("oneToMany"===r.definition.type){let{oneToMany:{objectTypeRidManySide:i,manyToOneLinkMetadata:a,objectTypeRidOneSide:n,oneToManyLinkMetadata:o}}=r.definition;i===e&&t(a,"TARGET",n),n===e&&t(o,"SOURCE",i)}else if("manyToMany"===r.definition.type){let{manyToMany:{objectTypeRidA:i,objectTypeAToBLinkMetadata:a,objectTypeRidB:n,objectTypeBToALinkMetadata:o}}=r.definition;i===e&&t(a,"SOURCE",n),n===e&&t(o,"TARGET",i)}}return i}),this.#n=M(async e=>{this.#i?.debug(`getConjureObjectType(${e})`);let t={datasourceTypes:[],objectTypes:[{identifier:{type:"objectTypeRid",objectTypeRid:e},versionReference:{type:"ontologyVersion",ontologyVersion:await this.ontologyVersion("")}}],linkTypes:[],sharedPropertyTypes:[],interfaceTypes:[],typeGroups:[],loadRedacted:!1,includeObjectTypeCount:void 0,includeObjectTypesWithoutSearchableDatasources:!0,includeEntityMetadata:void 0,actionTypes:[],includeTypeGroupEntitiesCount:void 0,entityMetadata:void 0},i=await g(this.#t,void 0,t);return i.objectTypes[0]?.objectType||(0,T.A)(!1),i.objectTypes[0].objectType}),this.ontologyVersion=M(async()=>A(this.#t,await this.#e.ontologyRid)),this.#e=e,this.#t=O(e,"ontology-metadata/api"),this.#e.ontologyProvider.getObjectDefinition,this.#i=this.#e.logger?.child({mcc:!0})}#r;#a;#n}let R=$("weak",e=>Promise.resolve(new P(e))).get;function C(e){if("type"in e&&"objectLocatorV2"!==e.type)throw Error("We do not support looking up object by rid");let t=Object.entries(e.objectLocatorV2.objectPrimaryKey);if(1!==t.length)throw Error("Unable to support this request due to multiple pks");return{objectTypeRid:e.objectLocatorV2.objectTypeRid,pkValue:t[0][1][t[0][1].type]}}function _(e=fetch,t){return async function(i,r){return r?e(i,{...r,headers:await t(new Headers(r.headers))}):e(i,{headers:await t(new Headers)})}}var I=i(4546);let D=(e,t)=>({...e,fetch:_(e.fetch,i=>(i.set("X-OSDK-Request-Context",JSON.stringify(e.requestContext)),t.osdkMetadata&&i.set("Fetch-User-Agent",t.osdkMetadata.extraUserAgent),i))}),x=(e,t)=>({...e,requestContext:{...e.requestContext,...t(e.requestContext)}});function L(e){return"object"==typeof e&&"name"in e&&"data"in e&&e.data instanceof Blob}function K(e){let t=e.lastIndexOf(".");return -1===t?[void 0,e]:[e.slice(0,t),e.slice(t+1)]}function U(e,t){if("$and"in e)return{type:"and",value:e.$and.map(e=>U(e,t))};if("$or"in e)return{type:"or",value:e.$or.map(e=>U(e,t))};if("$not"in e)return{type:"not",value:U(e.$not,t)};let i=Object.entries(e);return 1===i.length?F(i[0],t):{type:"and",value:i.map(e=>F(e,t))}}function B(e,t,i,r){return{type:"$within"===t?"withinBoundingBox":"intersectsBoundingBox",...null!=i&&{propertyIdentifier:i},field:r,value:{topLeft:{type:"Point",coordinates:[e[0],e[3]]},bottomRight:{type:"Point",coordinates:[e[2],e[1]]}}}}function W(e,t,i,r){return{type:t,...null!=i&&{propertyIdentifier:i},field:r,value:{type:"Polygon",coordinates:e}}}function F([e,t],i,r){null!=t||(0,T.A)(!1);let n=null!=r?{type:"structField",...r,propertyApiName:V(r.propertyApiName,i)}:void 0,o=null==r?V(e,i):void 0;if("string"==typeof t||"number"==typeof t||"boolean"==typeof t)return{type:"eq",...null!=n&&{propertyIdentifier:n},field:o,value:t};let s=Object.keys(t),c=s.some(e=>e.startsWith("$"));if(c&&1!==s.length&&(0,T.A)(!1),!c){1!==Object.entries(t).length&&(0,T.A)(!1);let r=s[0];return F(Object.entries(t)[0],i,{propertyApiName:e,structFieldApiName:r})}let l=s[0];if(null!=t[l]||(0,T.A)(!1),"$ne"===l)return{type:"not",value:{type:"eq",...null!=n&&{propertyIdentifier:n},field:o,value:t[l]}};if("$within"===l){let i=t[l];return Array.isArray(i)?B(i,l,n,o):"$bbox"in i&&null!=i.$bbox?B(i.$bbox,l,n,o):"$distance"in i&&"$of"in i&&null!=i.$distance&&null!=i.$of?{type:"withinDistanceOf",...null!=n&&{propertyIdentifier:n},field:o,value:{center:Array.isArray(i.$of)?{type:"Point",coordinates:i.$of}:i.$of,distance:{value:i.$distance[0],unit:a[i.$distance[1]]}}}:W("$polygon"in i?i.$polygon:i.coordinates,"withinPolygon",n,e)}if("$intersects"===l){let e=t[l];return Array.isArray(e)?B(e,l,n,o):"$bbox"in e&&null!=e.$bbox?B(e.$bbox,l,n,o):W("$polygon"in e?e.$polygon:e.coordinates,"intersectsPolygon",n,o)}return"$containsAllTerms"===l||"$containsAnyTerm"===l?{type:l.substring(1),...null!=n&&{propertyIdentifier:n},field:o,value:"string"==typeof t[l]?t[l]:t[l].term,fuzzy:"string"!=typeof t[l]&&(t[l].fuzzySearch??!1)}:{type:l.substring(1),...null!=n&&{propertyIdentifier:n},field:o,value:t[l]}}function V(e,t){if("interface"===t.type){let[i]=K(t.apiName),[r,a]=K(e);return null==r&&null!=i?`${i}.${a}`:e}return e}function q(e){return e.metrics.reduce((e,t)=>{let i=t.name.split(".");if("count"===i[0])return e;2!==i.length&&(0,T.A)(!1);let r=i[0],a=i[1];return r in e||(e[r]={}),e[r][a]=t.value,e},{})}let z=e=>"asc"===e?"ASC":"desc"===e?"DESC":void 0;function G(e){return"interface"===e.type?{type:"interfaceBase",interfaceType:e.apiName}:{type:"base",objectType:e.apiName}}async function Y(e,t,i=G(t),r){G(t);let a={aggregation:Object.entries(r.$select).flatMap(([e,t])=>{if("$count"===e)return{type:"count",name:"count",direction:z(t)};let i=e.lastIndexOf(":"),r=e.slice(0,i),a=e.slice(i+1);return[{type:a,name:`${r}.${a}`,direction:z(t),field:r}]}),groupBy:[],where:void 0};if(r.$groupBy){var n;a.groupBy=(n=r.$groupBy)?Object.entries(n).flatMap(([e,t])=>"exact"===t?[{type:t,field:e}]:"$exactWithLimit"in t?[{type:"exact",field:e,maxGroupCount:t.$exactWithLimit}]:"$fixedWidth"in t?[{type:"fixedWidth",field:e,fixedWidth:t.$fixedWidth}]:"$ranges"in t?[{type:"ranges",field:e,ranges:t.$ranges.map(e=>({startValue:e[0],endValue:e[1]}))}]:"$duration"in t?[{type:"duration",field:e,value:t.$duration[0],unit:o[t.$duration[1]]}]:[]):[]}let s=await f.GB.aggregate(D(e,t),await e.ontologyRid,{objectSet:i,groupBy:a.groupBy,aggregation:a.aggregation});return r.$groupBy?s.data.map(e=>({$group:e.group,...H(e),...q(e)})):(1!==s.data.length&&(0,T.A)(!1),{...H(s.data[0]),...q(s.data[0])})}function H(e){for(let t of e.metrics)if("count"===t.name)return{$count:t.value}}async function J(e,t,i,r){if(i.$__UNSTABLE_useOldInterfaceApis){let a=await f.Y7.search(D(e,t),await e.ontologyRid,t.apiName,ee(i,{augmentedProperties:{},augmentedSharedPropertyTypes:{},otherInterfaceTypes:[],selectedObjectTypes:[],selectedSharedPropertyTypes:i.$select??[],where:function e(t,i,r){if("base"===t.type||"interfaceBase"===t.type){if("base"===t.type&&t.objectType!==i)throw Error(`Expected objectSet.objectType to be ${i}, but got ${t.objectType}`);if("interfaceBase"===t.type&&t.interfaceType!==i)throw Error(`Expected objectSet.objectType to be ${i}, but got ${t.interfaceType}`);return r}if("filter"===t.type)return e(t.objectSet,i,null==r?t.where:{type:"and",value:[r,t.where]});throw Error(`Unsupported objectSet type: ${t.type}`)}(r,t.apiName)}),{preview:!0});return a.data=await e.objectFactory(e,a.data,t.apiName,!i.$includeRid),a}let a=await f.GB.loadMultipleObjectTypes(D(e,t),await e.ontologyRid,ee(i,{objectSet:r,select:i?.$select??[],excludeRid:!i?.$includeRid}),{preview:!0});return Promise.resolve({data:await e.objectFactory2(e,a.data,t.apiName,!i.$includeRid,i.$select,!1,a.interfaceToObjectTypeMappings),nextPageToken:a.nextPageToken,totalCount:a.totalCount})}async function Q(e,t,i,r={}){return"interface"===t.type?await J(e,t,r,i):await et(e,t,r,i)}async function X(e,t,i,r={}){try{return{value:await Q(e,t,i,r)}}catch(e){return{error:e}}}async function Z(e,t,i,r=G(t)){return Q(e,t,r,i)}function ee(e,t){return e?.$nextPageToken&&(t.pageToken=e.$nextPageToken),e?.$pageSize!=null&&(t.pageSize=e.$pageSize),e?.$orderBy!=null&&(t.orderBy={fields:Object.entries(e.$orderBy).map(([e,t])=>({field:e,direction:t}))}),t}async function et(e,t,i,r){let a=await f.GB.load(D(e,t),await e.ontologyRid,ee(i,{objectSet:r,select:i?.$select??[],excludeRid:!i?.$includeRid}));return Promise.resolve({data:await e.objectFactory(e,a.data,void 0,void 0,i.$select),nextPageToken:a.nextPageToken,totalCount:a.totalCount})}async function ei(e,t,i,r){let a=await Z(e,t,{...i,$pageSize:1},r);if(1!==a.data.length||null!=a.nextPageToken)throw new c(`Expected a single result but got ${a.data.length} instead${null!=a.nextPageToken?" with nextPageToken set":""}`);return a.data[0]}async function er(e,t,i,r){try{return{value:await ei(e,t,i,r)}}catch(e){return{error:e}}}let ea=new Set(["base","filter","intersect","reference","searchAround","static","subtract","union"]);function en(e){return null!=e&&"object"==typeof e&&ea.has(e.type)}var eo=i(5755);function es(){}function ec({onChange:e=es,onError:t=es,onOutOfDate:i=es,onSuccessfulSubscription:r=es}){return{onChange:e,onError:t,onOutOfDate:i,onSuccessfulSubscription:r}}function el(e){return null!=e.isReady}function ep(e){return"done"===e.status||"error"===e.status}class eu{static #o=new WeakMap;static getInstance(e){let t=eu.#o.get(e.clientCacheKey);return null==t&&(t=new eu(e),eu.#o.set(e.clientCacheKey,t)),t}#s;#c;#e;#i;#l;#p;#u;#y;constructor(e,{minimumReconnectDelayMs:t=5e3}={}){this.#c=0,this.#l=new Map,this.#p=new Map,this.#u=new Set,this.#d=()=>{this.#f()},this.#m=async e=>{let t=JSON.parse(e.data.toString());switch(t.type){case"objectSetChanged":return void this.#b(t);case"refreshObjectSet":return void this.#h(t);case"subscribeResponses":return void this.#g(t);case"subscriptionClosed":return void this.#w(t);default:(0,T.A)(!1)}},this.#b=async e=>{let t=this.#p.get(e.id);if(null==t)return;let i=e.updates.filter(e=>"object"===e.type),r=e.updates.filter(e=>"reference"===e.type);for(let e of(await Promise.all(r.map(async e=>{let i=(await this.#e.objectFactory2(this.#e,[{__apiName:e.objectType,__primaryKey:null!=t.primaryKeyPropertyName?e.primaryKey[t.primaryKeyPropertyName]:void 0,...e.primaryKey,[e.property]:e.value}],t.interfaceApiName,!1,void 0,!1,await this.#j(e.objectType,t.interfaceApiName)))[0]??void 0;return null!=i?{object:i,state:"ADDED_OR_UPDATED"}:void 0}))))if(null!=e)try{t.listener.onChange?.(e)}catch(e){this.#i?.error(e,"Error in onChange callback"),this.#T(t,!1,e)}for(let e of(await Promise.all(i.map(async e=>{for(let i of Object.keys(e.object).filter(e=>t.requestedReferenceProperties.includes(e)))delete e.object[i];let i=(await this.#e.objectFactory2(this.#e,[e.object],t.interfaceApiName,!1,void 0,!1,await this.#j(e.object.__apiName,t.interfaceApiName)))[0]??void 0;return null!=i?{object:i,state:e.state}:void 0}))))if(null!=e)try{t.listener.onChange?.(e)}catch(e){this.#i?.error(e,"Error in onChange callback"),this.#T(t,!1,e)}},this.#h=e=>{let t=this.#p.get(e.id);t||(0,T.A)(!1);try{t.listener.onOutOfDate()}catch(e){this.#i?.error(e,"Error in onOutOfDate callback"),this.#T(t,!1,e)}},this.#g=e=>{let{id:t,responses:i}=e,r=this.#l.get(t);r||(0,T.A)(!1),this.#l.delete(t);for(let e=0;e<i.length;e++){let t=r[e],a=i[e];switch(a.type){case"error":this.#T(t,!0,a.errors),this.#v(t,"error");break;case"qos":this.#O();break;case"success":let n="expired"===t.status||"reconnecting"===t.status;t.status="subscribed",t.subscriptionId!==a.id&&(this.#p.delete(t.subscriptionId),t.subscriptionId=a.id,this.#p.set(t.subscriptionId,t));try{n?t.listener.onOutOfDate():t.listener.onSuccessfulSubscription()}catch(e){this.#i?.error(e,"Error in onOutOfDate or onSuccessfulSubscription callback"),this.#T(t,!1,e)}break;default:this.#T(t,!0,a)}}},this.#N=e=>{this.#O()},this.#O=()=>{if(this.#s&&(this.#s.removeEventListener("open",this.#d),this.#s.removeEventListener("message",this.#m),this.#s.removeEventListener("close",this.#N),this.#s.readyState!==eo.CLOSING&&this.#s.readyState!==eo.CLOSED&&this.#s.close(),this.#s=void 0),this.#p.size>0){for(let e of this.#p.values())"subscribed"===e.status&&(e.status="reconnecting");this.#k()}},this.#T=(e,t,i)=>{try{e.listener.onError({subscriptionClosed:t,error:i})}catch(r){console.error("Error encountered in an onError callback for an OSDK subscription",r),console.error("This onError call was triggered by an error in another callback",i),console.error("The subscription has been closed.",i),t||(this.#i?.error(i,"Error in onError callback"),this.#v(e,"error"),this.#T(e,!0,r))}},this.MINIMUM_RECONNECT_DELAY_MS=t,this.#e=e,this.#i=e.logger?.child({},{msgPrefix:"<OSW> "}),e.baseUrl.startsWith("https://")||e.baseUrl.startsWith("http://")||(0,T.A)(!1)}async subscribe(e,t,i,r=[]){let a="object"===e.type?await this.#e.ontologyProvider.getObjectDefinition(e.apiName):await this.#e.ontologyProvider.getInterfaceDefinition(e.apiName),n=[],o=[];0===r.length&&(r=Object.keys(a.properties)),n=r.filter(e=>"geotimeSeriesReference"!==a.properties[e].type),o=r.filter(e=>"geotimeSeriesReference"===a.properties[e].type);let s={listener:ec(i),objectSet:t,primaryKeyPropertyName:"interface"===a.type?void 0:a.primaryKeyApiName,requestedProperties:n,requestedReferenceProperties:o,status:"preparing",subscriptionId:`TMP-${ed()}}`,interfaceApiName:"object"===a.type?void 0:a.apiName};return this.#p.set(s.subscriptionId,s),this.#S(s),()=>{this.#v(s)}}async #S(e){try{if(await this.#k(),ep(e))return;e.isReady=!0,this.#s?.readyState===eo.OPEN&&this.#f()}catch(t){this.#i?.error(t,"Error in #initiateSubscribe"),this.#T(e,!0,t)}}#f(){let e=[...this.#p.values()].filter(el),t=ed();this.#l.set(t,e);let i={id:t,requests:e.map(({objectSet:e,requestedProperties:t,requestedReferenceProperties:i,interfaceApiName:r})=>({objectSet:e,propertySet:t,referenceSet:i}))};this.#s?.send(JSON.stringify(i))}#v(e,t="done"){ep(e)||(e.status=t,e.listener=ec({}),this.#p.delete(e.subscriptionId),this.#u.add(e.subscriptionId),this.#f(),this.#y&&clearTimeout(this.#y),this.#y=setTimeout(()=>{this.#y=void 0,0===this.#p.size&&this.#O()},15e3))}async #k(){if(null==this.#s){let{baseUrl:e,tokenProvider:t}=this.#e,i=function(e,t){let i=new URL(e),r=new URL(`api/v2/ontologySubscriptions/ontologies/${t}/streamSubscriptions`,i);return r.protocol=r.protocol.replace("https","wss"),r}(e,await this.#e.ontologyRid),r=await t();if(null==this.#s){let e=(this.#c??0)+this.MINIMUM_RECONNECT_DELAY_MS;e>Date.now()&&await new Promise(t=>{setTimeout(t,e-Date.now())}),this.#c=Date.now(),null==this.#s&&(this.#s=new eo(i,[`Bearer-${r}`]),this.#s.addEventListener("close",this.#N),this.#s.addEventListener("message",this.#m),this.#s.addEventListener("open",this.#d))}if(this.#s.readyState===eo.CONNECTING){let e=this.#s;return new Promise((t,i)=>{function r(){e.removeEventListener("open",a),e.removeEventListener("error",n),e.removeEventListener("close",r)}function a(){r(),t()}function n(e){r(),i(e)}e.addEventListener("open",a),e.addEventListener("error",n),e.addEventListener("close",r)})}}}#d;#m;#b;async #j(e,t){if(null==t)return{};let i=(await this.#e.ontologyProvider.getObjectDefinition(e)).interfaceMap;return{[t]:{[e]:i[t]}}}#h;#g;#w(e){let t=this.#p.get(e.id);null==t&&this.#u.has(e.id)||(t||(0,T.A)(!1),this.#T(t,!0,e.cause),this.#v(t,"error"))}#N;#O;#T}let ey=0;function ed(){return`00000000-0000-0000-0000-${(ey++).toString().padStart(12,"0")}`}function ef(e){return"object"===e.type}function em(e){return null!=e&&"object"==typeof e&&en(eh.get(e))}function eb(e){return eh.get(e)}let eh=new WeakMap;function eg(e,t,i=G(e)){let r={aggregate:Y.bind(globalThis,x(t,()=>({finalMethodCall:"aggregate"})),e,i),fetchPage:Q.bind(globalThis,x(t,()=>({finalMethodCall:"fetchPage"})),e,i),fetchPageWithErrors:X.bind(globalThis,x(t,()=>({finalMethodCall:"fetchPageWithErrors"})),e,i),where:r=>t.objectSetFactory(e,t,{type:"filter",objectSet:i,where:U(r,e)}),pivotTo:function(r){return t.objectSetFactory(e,t,{type:"searchAround",objectSet:i,link:r})},union:(...r)=>t.objectSetFactory(e,t,{type:"union",objectSets:[i,...r.map(e=>eh.get(e))]}),intersect:(...r)=>t.objectSetFactory(e,t,{type:"intersect",objectSets:[i,...r.map(e=>eh.get(e))]}),subtract:(...r)=>t.objectSetFactory(e,t,{type:"subtract",objectSets:[i,...r.map(e=>eh.get(e))]}),asyncIter:async function*(r){let a;do{let n=await Q(x(t,()=>({finalMethodCall:"asyncIter"})),e,i,{...r,$nextPageToken:a});for(let e of(a=n.nextPageToken,n.data))yield e}while(null!=a)},fetchOne:ef(e)?async(r,a)=>await ei(x(t,()=>({finalMethodCall:"fetchOne"})),e,a,await ew(t,e,i,r)):void 0,fetchOneWithErrors:ef(e)?async(r,a)=>await er(x(t,()=>({finalMethodCall:"fetchOneWithErrors"})),e,a,await ew(t,e,i,r)):void 0,subscribe:(r,a)=>{let n=eu.getInstance(t).subscribe(e,i,r,a?.properties);return{unsubscribe:async()=>(await n)()}},withProperties:r=>{let a=new Map,n={};for(let t of Object.keys(r)){let i=r[t](function e(t,i,r){return{pivotTo:a=>e(t,{type:"searchAround",objectSet:i,link:a},r),where:a=>e(t,{type:"filter",objectSet:i,where:U(a,t)},r),aggregate:(e,t)=>{let a;let n=e.split(":");2===n.length||"$count"===n[0]||(0,T.A)(!1);let[o,s]=n;switch(s){case"sum":case"avg":case"min":case"max":case"exactDistinct":case"approximateDistinct":a={type:s,selectedPropertyApiName:o};break;case"approximatePercentile":a={type:"approximatePercentile",selectedPropertyApiName:o,approximatePercentile:t?.percentile??.5};break;case"collectSet":case"collectList":a={type:s,selectedPropertyApiName:o,limit:t?.limit??100};break;case void 0:if("$count"===o){a={type:"count"};break}default:(0,T.A)(!1)}let c={type:{}};return r.set(c,{type:"selection",objectSet:i,operation:a}),c},selectProperty:e=>{let t={type:{}};return r.set(t,{type:"selection",objectSet:i,operation:{type:"get",selectedPropertyApiName:e}}),t}}}(e,{type:"methodInput"},a));n[t]=a.get(i)}return t.objectSetFactory(e,t,{type:"withProperties",derivedProperties:n,objectSet:i})},$objectSetInternals:{def:e}};return eh.set(r,i),r}async function ew(e,t,i,r){return{type:"filter",objectSet:i,where:{type:"eq",field:(await e.ontologyProvider.getObjectDefinition(t.apiName)).primaryKeyApiName,value:r}}}async function ej(e,t){if(null==e)return e;if(Array.isArray(e)||e instanceof Set)return Promise.all(Array.from(e,async e=>await ej(e,t)));if(L(e)){let i=await f.Tr.upload(t,e.data,{filename:e.name});return await ej(i.rid,t)}if("object"==typeof e&&e instanceof Blob&&"name"in e){let i=await f.Tr.upload(t,e,{filename:e.name});return await ej(i.rid,t)}return e&&"object"==typeof e&&"string"==typeof e.__apiName&&null!=e.__primaryKey?await ej(e.__primaryKey,t):e&&"object"==typeof e&&"string"==typeof e.$apiName&&null!=e.$primaryKey?await ej(e.$primaryKey,t):en(e)?e:em(e)?eb(e):"object"==typeof e&&"string"==typeof e.mimeType&&"reference"in e&&"object"==typeof e.reference&&"mediaSetViewItem"===e.reference.type&&"mediaSetViewItem"in e.reference&&"object"==typeof e.reference.mediaSetViewItem&&"string"==typeof e.reference.mediaSetViewItem.mediaSetRid&&"string"==typeof e.reference.mediaSetViewItem.mediaSetViewRid&&"string"==typeof e.reference.mediaSetViewItem.mediaItemRid?e:null!=e&&"object"==typeof e&&"$objectType"in e&&"$primaryKey"in e?{objectTypeApiName:e.$objectType,primaryKeyValue:e.$primaryKey}:"object"==typeof e?Object.entries(e).reduce(async(e,[i,r])=>{let a=await e;return a[i]=await ej(r,t),a},Promise.resolve({})):e}async function eT(e,t,i,r={}){let a=D(x(e,()=>({finalMethodCall:"applyAction"})),t);if(Array.isArray(i)){let n=await f.En.applyBatch(a,await e.ontologyRid,t.apiName,{requests:i?await eO(i,e):[],options:{returnEdits:r?.$returnEdits?"ALL":"NONE"}}),o=n.edits;return r?.$returnEdits?o?.type==="edits"?eN(n):o:void 0}{let n=await f.En.apply(a,await e.ontologyRid,t.apiName,{parameters:await ev(i,e),options:{mode:r?.$validateOnly?"VALIDATE_ONLY":"VALIDATE_AND_EXECUTE",returnEdits:r?.$returnEdits?"ALL":"NONE"}});if(r?.$validateOnly)return n.validation;if(n.validation?.result==="INVALID")throw new p(n.validation);let o=n.edits;return r?.$returnEdits?o?.type==="edits"?eN(n):o:void 0}}async function ev(e,t){if(null==e)return{};let i={};for(let[r,a]of Object.entries(e))i[r]=await ej(a,t);return i}async function eO(e,t){return await Promise.all(e.map(async e=>({parameters:await ev(e,t)})))}function eN(e){let t=e?.edits;if(t?.type==="edits"){let e={type:t.type,deletedLinksCount:t.deletedLinksCount,deletedObjectsCount:t.deletedObjectsCount,addedLinks:[],addedObjects:[],modifiedObjects:[],editedObjectTypes:[]},i=new Set;for(let r of t.edits)"addLink"===r.type?(e.addedLinks.push({linkTypeApiNameAtoB:r.linkTypeApiNameAtoB,linkTypeApiNameBtoA:r.linkTypeApiNameBtoA,aSideObject:r.aSideObject,bSideObject:r.bSideObject}),i.add(r.aSideObject.objectType),i.add(r.bSideObject.objectType)):"addObject"===r.type?(e.addedObjects.push({objectType:r.objectType,primaryKey:r.primaryKey}),i.add(r.objectType)):"modifyObject"===r.type?(e.modifiedObjects.push({objectType:r.objectType,primaryKey:r.primaryKey}),i.add(r.objectType)):(0,T.A)(!1);return e.editedObjectTypes=[...i],e}}let ek=Symbol("additionalContext");Symbol("ErrorMessage");let eS=new Uint8Array([123,34,100,97,116,97,34,58,91]);async function*eE(e){let t=new TextDecoder("utf-8"),i=!1,r=[],a=0;for await(let n of e){let e=0;for(!i&&(i=!0,function(e,t){if(e.length<t.length)return!1;for(let i=0;i<t.length;i++)if(e[i]!==t[i])return!1;return!0}(n,eS)&&(e=eS.length));e<n.length;e++){for(;0===a&&123!==n[e]&&e<n.length;)e++;let i=e;for(;i<n.length;i++){let o=n[i];if(123===o)a++;else if(125===o&&0==--a){yield function(e,t,i){let r="";for(let i of t)r+=e.decode(i,{stream:!0});return JSON.parse(r+=e.decode(i))}(t,r,n.subarray(e,i+1)),r=[],e=i;break}}if(i===n.length){r.push(n.subarray(e));break}}}}async function*e$(e){let t=await e.read();for(;!t.done;)yield t.value,t=await e.read()}function eA(e){return"$startTime"in e||"$endTime"in e?{type:"absolute",startTime:e.$startTime,endTime:e.$endTime}:e.$before?{type:"relative",startTime:{when:"BEFORE",value:e.$before,unit:s[e.$unit]}}:{type:"relative",endTime:{when:"AFTER",value:e.$after,unit:s[e.$unit]}}}async function*eM(e){for await(let t of eE(e$(e.body?.getReader())))yield{time:t.time,value:t.value}}class eP{#E;#e;constructor(e,t,i,r,a){this.#e=e,this.#E=[t,i,r],null!=a&&(this.lastFetchedValue=a)}async getLatestValue(){let e=f.FK.getLatestValue(this.#e,await this.#e.ontologyRid,...this.#E);return e.then(e=>this.lastFetchedValue=e,e=>void console.error(e)),e}async getAllValues(e){let t=[];for await(let i of this.asyncIterValues(e))t.push(i);return t}async *asyncIterValues(e){for await(let t of eM(await f.FK.streamValues(this.#e,await this.#e.ontologyRid,...this.#E,e?{range:eA(e)}:{})))yield t}}class eR{#E;#e;constructor(e){let{client:t,objectApiName:i,primaryKey:r,propertyName:a}=e;this.#e=t,this.#E=[i,r,a]}async fetchContents(){return f.NG.getMediaContent(this.#e,await this.#e.ontologyRid,...this.#E,{preview:!0})}async fetchMetadata(){let e=await f.NG.getMediaMetadata(this.#e,await this.#e.ontologyRid,...this.#E,{preview:!0});return{path:e.path,sizeBytes:Number(e.sizeBytes),mediaType:e.mediaType}}}class eC{#E;#e;constructor(e,t,i,r){this.#e=e,this.#E=[t,i,r]}async getFirstPoint(){return f.MB.getFirstPoint(this.#e,await this.#e.ontologyRid,...this.#E)}async getLastPoint(){return f.MB.getLastPoint(this.#e,await this.#e.ontologyRid,...this.#E)}async getAllPoints(e){let t=[];for await(let i of this.asyncIterPoints(e))t.push(i);return t}async *asyncIterPoints(e){for await(let t of eM(await f.MB.streamPoints(this.#e,await this.#e.ontologyRid,...this.#E,e?{range:eA(e)}:{})))yield t}}function e_(e,t){return{rid:t,fetchContents:async()=>f.Tr.read(e,t),async fetchMetadata(){let i=await f.Tr.get(e,t);return{...i,sizeBytes:Number(i.sizeBytes)}}}}let eI=Symbol("InterfaceDefinitions"),eD=Symbol("Underlying Object"),ex=Symbol("ObjectDefinition"),eL=Symbol("InterfaceDefinition"),eK=Symbol("ClientRef"),eU=E(new WeakMap,function(e){return function(t){let i;if("string"==typeof t){if(t===e.apiName)return this[eD];if(e.interfaceMap?.[t]==null)throw Error(`Object does not implement interface '${t}'.`);i=t}else{if(t.apiName===e.apiName)return this[eD];if("object"===t.type)throw Error(`'${t.apiName}' is not an interface nor is it '${e.apiName}', which is the object type.`);i=t.apiName}let r=e[eI][i];if(!r)throw Error(`Object does not implement interface '${i}'.`);let a=this[eD],n=eB.get(a).get(i)?.deref();if(n)return n;let o=function(e,t){let[i]=K(t.apiName);return Object.freeze(Object.defineProperties({},{[eD]:{value:e},$apiName:{value:t.apiName,enumerable:!0},$as:{value:e.$as,enumerable:!1},$objectType:{value:e.$objectType,enumerable:"$objectType"in e},$primaryKey:{value:e.$primaryKey,enumerable:"$primaryKey"in e},$title:{value:e.$title,enumerable:"$title"in e},$rid:{value:e.$rid,enumerable:"$rid"in e},[eL]:{value:t},...Object.fromEntries(Object.keys(t.properties).map(r=>{let a=e[ex],[n,o]=K(r),s=a.interfaceMap[t.apiName][r];return[n===i?o:r,{enumerable:s in e,value:e[s]}]}))}))}(a,r.def);return eB.get(a).set(i,new WeakRef(o)),o}}).get,eB=E(new WeakMap,()=>new Map),eW=new Set(["attachment","geotimeSeriesReference","mediaReference","numericTimeseries","stringTimeseries","sensorTimeseries"]),eF={$as:{get:function(){return eU(this[ex])}},$link:{get:function(){return function(e){let t=e[eK],i=e[ex],r=e[eD];return Object.freeze(Object.fromEntries(Object.keys(i.links).map(e=>{let a=i.links[e],n=t.objectSetFactory(i,t).where({[i.primaryKeyApiName]:r.$primaryKey}).pivotTo(e);return[e,a.multiplicity?n:{fetchOne:e=>ei(t,i,e??{},eb(n)),fetchOneWithErrors:e=>er(t,i,e??{},eb(n))}]})))}(this)}},$clone:{value:function(e){let t=this[eD],i=this[ex];if(null==e)return eV(this[eK],i,{...t});if(i.primaryKeyApiName in e&&t[i.primaryKeyApiName]!==e[i.primaryKeyApiName])throw Error(`Cannot update ${i.apiName} object with differing primary key values `);i.titleProperty in e&&!("$title"in e)&&(e.$title=e[i.titleProperty]);let r={...this[eD],...e};return eV(this[eK],this[ex],r)}}};function eV(e,t,i){for(let r of(Object.defineProperties(i,{[eD]:{enumerable:!1,value:i},[ex]:{value:t,enumerable:!1},[eK]:{value:e,enumerable:!1},...eF}),Object.keys(i)))r in t.properties&&"string"==typeof t.properties[r].type&&eW.has(t.properties[r].type)&&(i[r]=function(e,t,i,r){let a=i[r],n=t.properties[r];return"attachment"===n.type?Array.isArray(a)?a.map(t=>e_(e,t.rid)):e_(e,a.rid):"numericTimeseries"===n.type||"stringTimeseries"===n.type||"sensorTimeseries"===n.type?new eC(e,t.apiName,i[t.primaryKeyApiName],r):"geotimeSeriesReference"===n.type?new eP(e,t.apiName,i[t.primaryKeyApiName],r,"geotimeSeriesValue"===a.type?{time:a.timestamp,value:{type:"Point",coordinates:a.position}}:void 0):"mediaReference"===n.type?new eR({client:e,objectApiName:t.apiName,primaryKey:i[t.primaryKeyApiName],propertyName:r}):void 0}(e,t,i,r));return Object.freeze(i)}async function eq(e,t,i,r=!1,a,n=!1){e.logger?.debug("START convertWireToOsdkObjects()"),eH(t,r);let o=i?await e.ontologyProvider.getInterfaceDefinition(i):void 0,s=o?a??Object.keys(o.properties):void 0,c=[];for(let r of t){let t;let l=await e.ontologyProvider.getObjectDefinition(r.$apiName);l||(0,T.A)(!1);let p=!0;if(o&&s?(eY(l,o.apiName,e),p&&=eG(e,o,r,s),function(e,t,i){let r={};for(let[a,n]of Object.entries(e.interfaceMap[t]))if(a in i){let e=i[a];delete i[a],void 0!==e&&(r[n]=e)}Object.assign(i,r),e.primaryKeyApiName in i||(i[e.primaryKeyApiName]=i.$primaryKey)}(l,o.apiName,r),t=function(e,t,i){return i.map(i=>e.interfaceMap[t][i])}(l,o.apiName,s)):t=a??Object.keys(l.properties),p&&=eG(e,l,r,t),"throw"!==n||p){if("drop"===n&&!p)continue}else throw Error("Unable to safely convert objects as some non nullable properties are null");let u=eV(e,l,r);i&&(u=u.$as(i)),c.push(u)}return e.logger?.debug("END convertWireToOsdkObjects()"),c}async function ez(e,t,i,r=!1,a,n=!1,o={}){e.logger?.debug("START convertWireToOsdkObjects2()"),eH(t,r);let s=[];for(let r of t){let t;let c=await e.ontologyProvider.getObjectDefinition(r.$apiName);c||(0,T.A)(!1);let l=i?o[i][r.$apiName]:void 0,p=i&&l?a?Object.keys(l).filter(e=>{a?.includes(l[e])}):[...Object.values(l),c.primaryKeyApiName]:void 0,u=!0;if(i&&p?(eY(c,i,e),t=p):t=a??Object.keys(c.properties),u&&=eG(e,c,r,t),"throw"!==n||u){if("drop"===n&&!u)continue}else throw Error("Unable to safely convert objects as some non nullable properties are null");let y=eV(e,c,r);i&&(y=y.$as(i)),s.push(y)}return e.logger?.debug("END convertWireToOsdkObjects2()"),s}function eG(e,t,i,r){for(let e of r)if(e in t.properties&&!1===t.properties[e].nullable&&null==i[e])return!1;return!0}function eY(e,t,i){if(e.interfaceMap?.[t]==null){let e="Interfaces are only supported 'as views' but your metadata object is missing the correct information. This suggests your interfaces have not been migrated to the newer version yet and you cannot use this version of the SDK.";throw i.logger?i.logger.warn(e):console.error(`WARNING! ${e}`),Error(e)}}function eH(e,t){for(let i of e)t&&delete i.__rid,i.__rid&&(i.$rid=i.__rid,delete i.__rid),i.$apiName??=i.__apiName,i.$objectType=i.$apiName,i.$primaryKey??=i.__primaryKey,i.$title??=i.__title,delete i.__apiName,delete i.__primaryKey,delete i.__title}async function eJ(e,t){return function(e){let t=function(e){let t=new Set,i=new Set;for(let r of e.operations)switch(r.type){case"createObject":t.add(r.objectTypeApiName);break;case"modifyObject":i.add(r.objectTypeApiName)}return{addedObjects:t,modifiedObjects:i}}(e);return{type:"action",apiName:e.apiName,parameters:Object.fromEntries(Object.entries(e.parameters).map(([e,t])=>[e,{multiplicity:"array"===t.dataType.type,type:function e(t){switch(t.type){case"string":case"boolean":case"attachment":case"double":case"integer":case"long":case"timestamp":case"mediaReference":case"marking":case"objectType":return t.type;case"date":return"datetime";case"objectSet":return{type:"objectSet",objectSet:t.objectTypeApiName};case"object":return{type:"object",object:t.objectTypeApiName};case"array":return e(t.subType);case"interfaceObject":return{type:"interface",interface:t.interfaceTypeApiName};case"struct":return{type:"struct",struct:t.fields.reduce((t,i)=>(t[i.name]=e(i.fieldType),t),{})};default:throw Error(`Unsupported action parameter type: ${JSON.stringify(t)}`)}}("array"===t.dataType.type?t.dataType.subType:t.dataType),nullable:!t.required,description:t.description}])),displayName:e.displayName,description:e.description,modifiedEntities:function(e,t){let i={};for(let t of e)i[t]={created:!0,modified:!1};for(let e of t)i[e]?i[e].modified=!0:i[e]={created:!1,modified:!0};return i}(t.addedObjects,t.modifiedObjects),rid:e.rid,status:e.status}}(await f.UL.get(e,await e.ontologyRid,t))}function eQ(e,t=!0,i){let r=function e(t,i){switch(t.type){case"integer":case"string":case"byte":case"decimal":case"double":case"float":case"long":case"short":case"boolean":case"attachment":case"geopoint":case"geoshape":case"timestamp":case"marking":case"geotimeSeriesReference":case"mediaReference":return t.type;case"date":return"datetime";case"array":return e(t.subType);case"timeseries":if(t.itemType?.type==="string")return"stringTimeseries";if(t.itemType?.type==="double")return"numericTimeseries";return"sensorTimeseries";case"struct":return t.structFieldTypes.reduce((t,i)=>(t[i.apiName]=e(i.dataType),t),{});case"cipherText":case"vector":i?.info(`${JSON.stringify(t.type)} is not a supported propertyType`);return;default:i?.info(`${JSON.stringify(t)} is not a supported propertyType`);return}}(e.dataType,i);if(null!=r)switch(e.dataType.type){case"integer":case"string":case"byte":case"decimal":case"double":case"float":case"long":case"short":case"boolean":case"date":case"attachment":case"mediaReference":case"geopoint":case"geoshape":case"timestamp":case"timeseries":case"marking":case"geotimeSeriesReference":case"struct":return{displayName:e.displayName,multiplicity:!1,description:e.description,type:r,nullable:null==e.nullable?t:e.nullable};case"array":return{displayName:e.displayName,multiplicity:!0,description:e.description,type:r,nullable:!0};case"cipherText":case"vector":i?.info(`${JSON.stringify(e.dataType.type)} is not a supported dataType`);return;default:e.dataType,i?.info(`${JSON.stringify(e.dataType)} is not a supported dataType`);return}}let eX=["blueprint"];async function eZ(e,t){let i=function(e,t,i){if(void 0===e.objectType.properties[e.objectType.primaryKey])throw Error(`Primary key ${e.objectType.primaryKey} not found in ${e.objectType.apiName}`);if(null==e.implementsInterfaces2&&null!=e.implementsInterfaces)throw Error("Your ontology.json file is missing the implementsInterfaces2 field. Please regenerate it.");let r=e.implementsInterfaces2?Object.fromEntries(Object.entries(e.implementsInterfaces2).map(([e,t])=>[e,t.properties])):{};return{type:"object",apiName:e.objectType.apiName,description:e.objectType.description,primaryKeyApiName:e.objectType.primaryKey,primaryKeyType:function(e){switch(e.dataType.type){case"integer":case"double":case"string":case"boolean":case"byte":case"long":case"short":return e.dataType.type;case"date":return"datetime";case"timestamp":return"timestamp";case"geopoint":case"geoshape":case"decimal":case"attachment":case"timeseries":case"array":case"marking":case"float":case"geotimeSeriesReference":case"mediaReference":case"struct":case"cipherText":case"vector":throw Error(`Type not supported for primaryKey: ${e.dataType.type}`);default:throw e.dataType,Error(`Unknown type encountered for primaryKey: ${e.dataType}`)}}(e.objectType.properties[e.objectType.primaryKey]),links:Object.fromEntries(e.linkTypes.map(e=>[e.apiName,{multiplicity:"MANY"===e.cardinality,targetType:e.objectTypeApiName}])),properties:Object.fromEntries(Object.entries(e.objectType.properties).map(([i,r])=>[i,eQ(r,!(t&&e.objectType.primaryKey===i),void 0)]).filter(([e,t])=>null!=t)),implements:e.implementsInterfaces,interfaceMap:r,inverseInterfaceMap:Object.fromEntries(Object.entries(r).map(([e,t])=>[e,t?Object.fromEntries(Object.entries(t).map(([e,t])=>[t,e])):void 0])),icon:eX.includes(e.objectType.icon.type)?e.objectType.icon:void 0,titleProperty:e.objectType.titleProperty,displayName:e.objectType.displayName,pluralDisplayName:e.objectType.pluralDisplayName,status:e.objectType.status,rid:e.objectType.rid,visibility:e.objectType.visibility}}(await f.Tq.getFullMetadata(e,await e.ontologyRid,t,{preview:!0}),!0);return e.logger?.debug(`END loadFullObjectMetadata(${t})`),{...i}}async function e0(e,t){var i;return{type:"interface",rid:(i=await f.Y7.get(e,await e.ontologyRid,t,{preview:!0})).rid,apiName:i.apiName,displayName:i.displayName,description:i.description,implements:i.extendsInterfaces,properties:Object.fromEntries(Object.entries(i.properties).map(([e,t])=>[e,eQ(t,!0,void 0)]).filter(([e,t])=>null!=t)),links:{},implementedBy:i.implementedByObjectTypes}}function e1(e){switch(e.type){case"double":case"float":case"integer":case"long":case"attachment":case"boolean":case"date":case"string":case"timestamp":return{type:e.type,nullable:!1};case"object":return{type:"object",object:e.objectTypeApiName,nullable:!1};case"objectSet":return{type:"objectSet",objectSet:e.objectTypeApiName,nullable:!1};case"array":return{...e1(e.subType),multiplicity:!0};case"set":return{type:"set",set:e1(e.subType),nullable:!1};case"union":let t=function e(t){return"null"===t.type||"union"===t.type&&t.unionTypes.some(t=>e(t))}(e);if(t&&2===e.unionTypes.length){let t=e.unionTypes.find(e=>null!=e.type);if(t)return{...e1(t),nullable:!0}}return{type:"union",union:e.unionTypes.reduce((e,t)=>("null"===t.type||e.push(e1(t)),e),[]),nullable:t};case"struct":return{type:"struct",struct:Object.fromEntries(e.fields.map(e=>[e.name,e1(e.fieldType)])),nullable:!1};case"twoDimensionalAggregation":return{type:"twoDimensionalAggregation",twoDimensionalAggregation:e2(e),nullable:!1};case"threeDimensionalAggregation":return{type:"threeDimensionalAggregation",threeDimensionalAggregation:function(e){if("range"===e.keyType.type)return{keyType:e.keyType.type,keySubtype:e.keyType.subType.type,valueType:e2(e.valueType)};if(e3(e.keyType))return{keyType:e.keyType.type,valueType:e2(e.valueType)};throw Error(`Cannot create 3D aggregation with ${e.keyType.type} as its type`)}(e),nullable:!1};case"null":case"unsupported":throw Error(`Unable to process query because the server indicated an unsupported QueryDataType.type: ${e.type}. Please check that your query is using supported types.`);default:throw Error(`Unsupported QueryDataType.type ${e.type}`)}}function e2(e){if("range"===e.keyType.type)return{keyType:e.keyType.type,keySubtype:e.keyType.subType.type,valueType:e.valueType.type};if(e3(e.keyType))return{keyType:e.keyType.type,valueType:e.valueType.type};throw Error(`Cannot create 2D aggregation with ${e.keyType.type} as its type`)}function e3(e){return"string"===e.type||"boolean"===e.type}async function e5(e,t){var i;return{type:"query",apiName:(i=await f.Ib.get(e,await e.ontologyRid,t)).apiName,description:i.description,displayName:i.displayName,version:i.version,parameters:Object.fromEntries(Object.entries(i.parameters).map(([e,t])=>[e,{description:t.description,...e1(t.dataType)}])),output:e1(i.output),rid:i.rid}}let e6=()=>e=>{function t(t){let i=function(e,t=function(e){let t=new WeakMap;function i(e,i,r){return null==t.get(e.clientCacheKey)&&t.set(e.clientCacheKey,new Map),t.get(e.clientCacheKey).set(i,r),r}return{get:function(r,a){null==t.get(r.clientCacheKey)&&t.set(r.clientCacheKey,new Map);let n=t.get(r.clientCacheKey).get(a);return void 0===n&&void 0!==e?i(r,a,e(r,a)):n},set:i,remove:function(e,i){return null!=t.get(e.clientCacheKey)&&t.get(e.clientCacheKey).delete(i)}}}){let i=t(),r=t(),a={getOrUndefined:function(e,t){return i.get(e,t)},get:async function(t,n){return i.get(t,n)??r.get(t,n)??a.set(t,n,e(t,n))},set:async function(e,t,a){try{let n=await r.set(e,t,a);return i.set(e,t,n),r.remove(e,t),n}catch(i){throw r.remove(e,t),i}}};return a}((e,i)=>t(e,i,!1));return async t=>await i.get(e,t)}let i={getObjectDefinition:t(async function(e,t){let r=await eZ(e,t),a=Object.fromEntries((await Promise.all(r.implements?.map(e=>i.getInterfaceDefinition(e))??[])).map(e=>[e.apiName,{def:e,handler:void 0}]));return{...r,[eI]:a}}),getInterfaceDefinition:t(async function(e,t){return e0(e,t)}),getQueryDefinition:t(async function(e,t){return await e5(e,t)}),getActionDefinition:t(async function(e,t){return await eJ(e,t)})};return i},e9=async(e,t)=>{if("object"===t.type){let{[eI]:i,...r}=await e.ontologyProvider.getObjectDefinition(t.apiName);return r}if("interface"===t.type)return e.ontologyProvider.getInterfaceDefinition(t.apiName);if("action"===t.type)return e.ontologyProvider.getActionDefinition(t.apiName);if("query"===t.type)return e.ontologyProvider.getQueryDefinition(t.apiName);throw Error("Not implemented for given definition")};async function e7(e,t,i){if(null==e)return e;if(Array.isArray(e)&&i.multiplicity)return Promise.all(Array.from(e,async e=>await e7(e,t,i)));switch(i.type){case"attachment":if(L(e))return(await f.Tr.upload(t,e.data,{filename:e.name})).rid;if("object"==typeof e&&e instanceof Blob&&"name"in e)return(await f.Tr.upload(t,e,{filename:e.name})).rid;break;case"twoDimensionalAggregation":case"threeDimensionalAggregation":return{groups:e};case"set":if(e instanceof Set)return Promise.all(Array.from(e,async e=>await e7(e,t,i.set)));break;case"object":if(e&&"object"==typeof e&&"string"==typeof e.$apiName&&null!=e.$primaryKey)return e.$primaryKey;break;case"objectSet":if(en(e))break;if(em(e))return eb(e);break;case"struct":if("object"==typeof e){let r={};for(let[a,n]of Object.entries(e))r[a]=await e7(n,t,i.struct[a]);return r}}return e}async function e4(e,t,i){let r=await e.ontologyProvider.getQueryDefinition(t.apiName),a=await f.RT.execute(D(x(e,()=>({finalMethodCall:"applyQuery"})),t),await e.ontologyRid,t.apiName,{parameters:i?await e8(i,e,r.parameters):{}}),n=await tt(r.output,e);return await te(e,r.output,a.value,n)}async function e8(e,t,i){let r={};for(let[a,n]of Object.entries(e))r[a]=await e7(n,t,i[a]);return r}async function te(e,t,i,r){if(null==i){if(t.nullable)return;throw Error("Got null response when nullable was not allowed")}if(null!=t.multiplicity&&t.multiplicity){let a={...t,multiplicity:!1};for(let t=0;t<i.length;t++)i[t]=await te(e,a,i[t],r);return i}switch(t.type){case"union":throw Error("Union return types are not yet supported");case"set":for(let a=0;a<i.length;a++)i[a]=await te(e,t.set,i[a],r);break;case"attachment":return e_(e,i);case"object":{let e=r.get(t.object);if(!e)throw Error(`Missing definition for ${t.object}`);return{$apiName:e.apiName,$title:void 0,$objectType:e.apiName,$primaryKey:i}}case"objectSet":{let a=r.get(t.objectSet);if(!a)throw Error(`Missing definition for ${t.objectSet}`);if("string"==typeof i)return eg(a,e,{type:"intersect",objectSets:[{type:"base",objectType:t.objectSet},{type:"reference",reference:i}]});return eg(a,e,i)}case"struct":for(let[a,n]of Object.entries(t.struct))(function e(t){switch(t.type){case"boolean":case"date":case"double":case"float":case"integer":case"long":case"string":case"timestamp":default:return!1;case"union":case"attachment":case"objectSet":case"twoDimensionalAggregation":case"threeDimensionalAggregation":case"object":return!0;case"struct":return Object.values(t.struct).some(e);case"set":return e(t.set)}})(n)&&(i[a]=await te(e,n,i[a],r));break;case"twoDimensionalAggregation":{let e=[];for(let{key:t,value:r}of i.groups)e.push({key:t,value:r});return e}case"threeDimensionalAggregation":{let e=[];for(let{key:t,groups:r}of i.groups){let i=[];for(let{key:e,value:t}of r)i.push({key:e,value:t});e.push({key:t,groups:i})}return e}}return i}async function tt(e,t){let i=new Map;switch(e.type){case"objectSet":{let r=await t.ontologyProvider.getObjectDefinition(e.objectSet);i.set(e.objectSet,r);break}case"object":{let r=await t.ontologyProvider.getObjectDefinition(e.object);i.set(e.object,r);break}case"set":return tt(e.set,t);case"struct":for(let r of Object.values(e.struct))for(let[e,a]of(await tt(r,t)))i.set(e,a)}return i}class ti{constructor(e,t){this.applyAction=eT.bind(void 0,e,t),this.batchApplyAction=eT.bind(void 0,e,t)}}class tr{constructor(e,t){this.executeFunction=e4.bind(void 0,e,t)}}(function(e,t,i,r,a,n=fetch){if("string"==typeof i){if(!i.startsWith("ri."))throw Error("Invalid ontology RID")}else i.then(e=>{if(!e.startsWith("ri."))throw Error("Invalid ontology RID")});let o=function(e,t,i,r={},a=global.fetch,n=eg){let o=new URL(t);o.pathname+=o.pathname.endsWith("/")?"":"/";let s={...function(e,t,i,r=fetch){if(0===e.length)throw Error("baseUrl cannot be empty");let a=_(I(function(e=fetch){return async function(t,i){let r;try{r=await e(t,i)}catch(e){throw function(e,t="An unknown error occurred"){return e instanceof Error?new l(e.message,"UNKNOWN",e):new l(t,"UNKNOWN")}(e,"A network error occurred")}if(!r.ok){let e;if("text/plain"===r.headers.get("Content-Type"))throw new c(await r.text());try{e=await r.json()}catch(e){throw new c(`Failed to fetch ${r.status} ${r.statusText}`,"UNKNOWN",void 0,r.status)}throw new c(e?.message??`Failed to fetch ${r.status} ${r.statusText}`,e?.errorName,e?.errorCode,r.status,e?.errorInstanceId,e?.parameters)}return r}}(r),{retryDelay(e){let t=1e3*2**e,i=.5*t*(2*Math.random()-1);return t+i},retryOn(e,t,i){let r=i?.status??0;return!(r>=200&&r<300)&&(!(t instanceof c)||503===t.statusCode||429===t.statusCode)&&e<3}}),async e=>{let r=await t();return e.set("Authorization",`Bearer ${r}`),e.set("Fetch-User-Agent",[e.get("Fetch-User-Agent"),i].filter(e=>e&&e?.length>0).join(" ")),e});return{baseUrl:e,fetch:async(e,t)=>{try{return await a(e,t)}catch(t){let e=t instanceof c?new c(t.message,t.errorName,t.errorCode,t.statusCode,t.errorInstanceId,t.parameters):Error("Captured stack trace for error: "+(t.message??t));throw e.cause=t,e}},tokenProvider:t}}(o.toString(),i,"osdk-client/2.2.0-beta.5",a),objectSetFactory:n,objectFactory:eq,objectFactory2:ez,ontologyRid:e.ontologyRid,logger:r.logger,clientCacheKey:{},requestContext:{}};return Object.freeze(Object.assign(s,{ontologyProvider:e6(r)(s)}))}({ontologyRid:i},t,r,a,n,e),s=e9.bind(void 0,o);return Object.defineProperties(function(t){if("object"===t.type||"interface"===t.type)return e(t,o);if("action"===t.type)return new ti(o,t);if("query"===t.type)return new tr(o,t);if("experiment"===t.type)switch(t.name){case d.name:return{getBulkLinks:async function*(e,t){if(0===e.length)return;o.logger?.debug("Preparing to fetch bulk links"),e.every(t=>t.$objectType===e[0].$objectType)||(0,T.A)(!1);let i=await R(o),r=await i.forObjectByApiName(e[0].$objectType),[a,n,s]=await Promise.all([r.getRid(),r.getPropertyMapping(),r.getLinkMapping()]),c=Object.fromEntries(Object.entries(s).filter(([e])=>t.includes(e)));for(let e of t)if(null==c[e])throw"Unable to find link type: "+e;let l={objectSetContext:{forkRid:void 0,objectSetFilterContext:{parameterOverrides:{}},ontologyBranchRid:void 0,owningRid:void 0,reportUsage:void 0,workstateRid:void 0},responseOptions:{includeObjectSetEntities:!0,includeUsageCost:!1},pageSize:1e3,pageToken:void 0,linksRequests:[{directedLinkTypes:Object.values(c).map(({directedLinkTypeRid:e})=>e),objects:v("objects",e.map(e=>v("objectLocatorV2",{objectTypeRid:a,objectPrimaryKey:{[n.pk.rid]:v(n.pk.type.type,e.$primaryKey)}})))}]};for await(let t of S(h.bind(void 0,O(o,"object-set-service/api")),N,k,l)){let{objectIdentifier:r}=t,a=function(e,t){let{pkValue:i}=C(e),r=t.find(e=>e.$primaryKey===i);if(null==r)throw Error(`Needed to find object with pk ${i}} and could not`);return r}(r,e);for(let e of t.links){let t=C(e.link["SOURCE"===e.linkSide?"objectSideB":"objectSideA"]),r=await (await i.forObjectByRid(t.objectTypeRid)).getApiName(),n=Object.values(c).find(t=>t.directedLinkTypeRid.linkTypeRid===e.link.linkTypeRid&&t.directedLinkTypeRid.linkSide===e.linkSide);if(!n)throw Error("Could not find link type");yield{object:a,linkApiName:n.apiName,otherObjectApiName:r,otherObjectPk:t.pkValue}}}}};case y.name:return{fetchOneByRid:async(e,t,i)=>await ei(o,e,i,{type:"static",objects:[t]})};case u.name:return{createMediaReference:async e=>{let{data:t,fileName:i,objectType:r,propertyType:a}=e;return await f.NG.upload(o,await o.ontologyRid,r.apiName,a,t,{mediaItemPath:i,preview:!0})}}}throw Error("not implemented")},{[m.j]:{value:o},__osdkClientContext:{value:o},[ek]:{value:o},fetchMetadata:{value:s}})}).bind(void 0,eg),i(721);var ta=i(2034),tn=i(9013);function to(e){if((0,ta.AJ)(e))throw Error(`Failed to get token: ${e.error}`);return e}let ts=globalThis.CustomEvent??class extends Event{#$;constructor(e,t){super(e,t),this.#$=t?.detail??null}get detail(){return this.#$}};function tc(e){return`@osdk/oauth : refresh : ${e.client_id}`}function tl(e,t){globalThis.localStorage?.setItem(tc(e),JSON.stringify(t))}function tp(e){globalThis.localStorage?.removeItem(tc(e))}function tu(e,t){globalThis.sessionStorage?.setItem(tc(e),JSON.stringify(t))}function ty(e){return JSON.parse(globalThis.sessionStorage?.getItem(tc(e))??"{}")}var td=i(5824);let tf="https://fake.palantirfoundry.com",tm="https://example.com/auth/callback";th(tf,"NEXT_PUBLIC_FOUNDRY_API_URL"),th("123","NEXT_PUBLIC_FOUNDRY_CLIENT_ID"),th(tm,"NEXT_PUBLIC_FOUNDRY_REDIRECT_URL");let tb=["api:ontologies-read","api:ontologies-write"];function th(e,t){if(null==e)throw Error(`Missing environment variable: ${t}`)}let tg=null,tw=()=>(null==tg&&(tg=function(e,t,i,r,a,n,o,s,c){var l,p,u,y,d,f;let m,b;({useHistory:r,loginPage:a,postLoginPage:n,scopes:o,fetchFn:s,ctxPath:c,refreshTokenMarker:m}=(l=r,p=a,u=n,y=o,d=s,f=c,b={},"object"==typeof l?((p||u||y||d||f)&&(0,T.A)(!1),b=l):b={useHistory:l,loginPage:p,postLoginPage:u,scopes:y,fetchFn:d,ctxPath:f},t||(0,T.A)(!1),i||(0,T.A)(!1),{useHistory:b.useHistory??!0,loginPage:b.loginPage,postLoginPage:b.postLoginPage||window.location.toString(),scopes:b.scopes??["api:read-data","api:write-data"],fetchFn:b.fetchFn??globalThis.fetch,ctxPath:b.ctxPath??"multipass",refreshTokenMarker:b.refreshTokenMarker}));let h={client_id:"123",token_endpoint_auth_method:"none"},g=function(e,t){let i=`${new URL(e,t.endsWith("/")?t:t+"/")}`;return{token_endpoint:`${i}/api/oauth2/token`,authorization_endpoint:`${i}/api/oauth2/authorize`,revocation_endpoint:`${i}/api/oauth2/revoke_token`,issuer:i}}(c,t),w={[ta.A6]:s},{makeTokenAndSaveRefresh:j,getToken:v}=function(e,t,i,r,a,n){let o,s,c;let l=new tn.m;function p(){s&&clearTimeout(s)}function u(e){a&&(p(),s=setTimeout(a,1e3*e.detail.expires_in-6e4))}async function y(){if(c)return c;try{return c=i(),await c}finally{c=void 0}}return l.addEventListener("signIn",u),l.addEventListener("refresh",u),{getToken:Object.assign(async function(){return(!o||Date.now()>=o.expires_at)&&(o=await y()),o?.access_token},{signIn:y,refresh:a,signOut:async function(){o||(0,T.A)(!1);let i=await (0,ta.TP)(await (0,ta.Kz)(t,e,o.access_token,r));p(),tp(e),o=void 0,to(i),l.dispatchTypedEvent("signOut",new Event("signOut"))},rmTimeout:p,getTokenOrUndefined:function(){if(!(!o||Date.now()>=o.expires_at))return o?.access_token},addEventListener:l.addEventListener.bind(l),removeEventListener:l.removeEventListener.bind(l)}),makeTokenAndSaveRefresh:function(t,i){let{refresh_token:r,expires_in:a,access_token:s}=t;return null!=a||(0,T.A)(!1),tl(e,{refresh_token:r,refreshTokenMarker:n}),o={refresh_token:r,expires_in:a,access_token:s,expires_at:Date.now()+1e3*a},l.dispatchTypedEvent(i,new ts(i,{detail:o})),o}}}(h,g,async function(){return await N()??await k()??await S()},w,N.bind(globalThis,!0),m),O=async e=>{if(r){window.history.replaceState({},"",e);return}throw window.location.assign(e),await (0,td.Ay)(1e3),Error("Unable to redirect")};async function N(e){let{refresh_token:t,refreshTokenMarker:r}=JSON.parse(globalThis.localStorage?.getItem(tc(h))??"{}");if(!t||r!==m){if(e)throw Error("No refresh token found");return}try{let e=j(to(await (0,ta.EG)(g,h,await (0,ta.ur)(g,h,t,w))),"refresh");if(e&&window.location.pathname===new URL(i).pathname){let{oldUrl:e}=ty(h);O(e??"/")}return e}catch(t){if(tp(h),e)throw Error("Could not refresh token")}}async function k(){let{state:e,oldUrl:t,codeVerifier:r}=ty(h);if(r)try{let a=j(to(await (0,ta.EG)(g,h,await (0,ta.m)(g,h,to((0,ta.kO)(g,h,new URL(window.location.href),e)),i,r,w))),"signIn");return O(t),a}catch(e){throw tp(h),globalThis.sessionStorage?.removeItem(tc(h)),e}}let S=async()=>{if(a&&window.location.href!==a&&window.location.pathname!==a){tl(h,{}),tu(h,{oldUrl:n}),await O(a);return}let e=(0,ta.Ot)(),t=(0,ta.YI)(),r=ty(h).oldUrl??window.location.toString();throw tl(h,{}),tu(h,{codeVerifier:t,state:e,oldUrl:r}),window.location.assign(`${g.authorization_endpoint}?${new URLSearchParams({client_id:"123",response_type:"code",state:e,redirect_uri:i,code_challenge:await (0,ta.Yv)(t),code_challenge_method:"S256",scope:["offline_access",...o].join(" ")})}`),await (0,td.Ay)(1e3),Error("Unable to redirect")};return v}(0,tf,tm,!0,void 0,window.location.toString(),tb)),tg)},7266:e=>{e.exports={logo:"layout_logo__RqH9D"}},2530:(e,t,i)=>{"use strict";i.r(t),i.d(t,{default:()=>p,metadata:()=>l});var r=i(2096),a=i(8363),n=i.n(a),o=i(2327),s=i(7266),c=i.n(s);i(1199);let l={title:"Ontology SDK + Next.js",description:"Generated by @osdk/create-app"},p=function({children:e}){return(0,r.jsx)("html",{lang:"en",children:(0,r.jsx)("body",{className:n().className,children:(0,r.jsx)("div",{id:"root-container",children:(0,r.jsxs)("div",{id:"root",children:[(0,r.jsx)("a",{href:"https://www.palantir.com/docs/foundry/ontology-sdk/overview/",target:"_blank",children:(0,r.jsx)(o.default,{src:"/palantir.svg",alt:"Palantir logo",className:c().logo,width:16,height:16,priority:!0})}),(0,r.jsx)("a",{href:"https://nextjs.org/",target:"_blank",children:(0,r.jsx)(o.default,{src:"/next.svg",alt:"Next logo",className:c().logo,width:16,height:16,priority:!0})}),e]})})})})}},7133:(e,t,i)=>{"use strict";i.r(t),i.d(t,{default:()=>a});var r=i(481);let a=async e=>[{type:"image/svg+xml",sizes:"any",url:(0,r.fillMetadataSegment)(".",await e.params,"icon.svg")+"?c84172e62dc1b3ad"}]},1199:()=>{},721:(e,t,i)=>{"use strict";i.d(t,{qZ:()=>r,fn:()=>a,Tp:()=>n});var r={};i.r(r),i.d(r,{actionTakesAllParameterTypes:()=>s,assignEmployee1:()=>c,createFooInterface:()=>l,createMediaObject:()=>p,createMediaViaFunction:()=>u,createOsdkTestObject:()=>y,createStructPerson:()=>d,createStructPersonOpiTeam:()=>f,createTodo:()=>m,deleteFooInterface:()=>b,deleteOsdkTestObject:()=>h,editOsdkTestObject:()=>g});var a={};i.r(a),i.d(a,{BgaoNflPlayer:()=>w,BoundariesUsState:()=>j,BuilderDeploymentState:()=>T,Country_1:()=>v,DherlihyComplexObject:()=>O,Employee:()=>N,FintrafficAis:()=>k,GtfsTripTrackObject:()=>S,McAirportStruct:()=>E,MnayanOsdkMediaObject:()=>$,MtaBus:()=>A,ObjectTypeWithAllPropertyTypes:()=>M,OsdkTestObject:()=>P,Person:()=>R,RhemmingsObjectWithGtsrProperty2:()=>C,SotSensor:()=>_,StateTerritory:()=>I,StructPerson:()=>D,StructPersonOpisTeam:()=>x,Todo:()=>L,Venture:()=>K,WeatherStation:()=>U});var n={};i.r(n),i.d(n,{getNamesOfCustomersFromCountry:()=>B,getTodoCount:()=>W,queryTakesAllParameterTypes:()=>F});let o={extraUserAgent:"typescript-sdk/dev osdk-cli/dev"},s={apiName:"actionTakesAllParameterTypes",type:"action",osdkMetadata:o},c={apiName:"assignEmployee1",type:"action",osdkMetadata:o},l={apiName:"createFooInterface",type:"action",osdkMetadata:o},p={apiName:"createMediaObject",type:"action",osdkMetadata:o},u={apiName:"createMediaViaFunction",type:"action",osdkMetadata:o},y={apiName:"createOsdkTestObject",type:"action",osdkMetadata:o},d={apiName:"createStructPerson",type:"action",osdkMetadata:o},f={apiName:"createStructPersonOpiTeam",type:"action",osdkMetadata:o},m={apiName:"createTodo",type:"action",osdkMetadata:o},b={apiName:"deleteFooInterface",type:"action",osdkMetadata:o},h={apiName:"deleteOsdkTestObject",type:"action",osdkMetadata:o},g={apiName:"editOsdkTestObject",type:"action",osdkMetadata:o},w={type:"object",apiName:"BgaoNflPlayer",osdkMetadata:o},j={type:"object",apiName:"BoundariesUsState",osdkMetadata:o},T={type:"object",apiName:"BuilderDeploymentState",osdkMetadata:o},v={type:"object",apiName:"Country_1",osdkMetadata:o},O={type:"object",apiName:"DherlihyComplexObject",osdkMetadata:o},N={type:"object",apiName:"Employee",osdkMetadata:o},k={type:"object",apiName:"FintrafficAis",osdkMetadata:o},S={type:"object",apiName:"GtfsTripTrackObject",osdkMetadata:o},E={type:"object",apiName:"McAirportStruct",osdkMetadata:o},$={type:"object",apiName:"MnayanOsdkMediaObject",osdkMetadata:o},A={type:"object",apiName:"MtaBus",osdkMetadata:o},M={type:"object",apiName:"ObjectTypeWithAllPropertyTypes",osdkMetadata:o},P={type:"object",apiName:"OsdkTestObject",osdkMetadata:o},R={type:"object",apiName:"Person",osdkMetadata:o},C={type:"object",apiName:"RhemmingsObjectWithGtsrProperty2",osdkMetadata:o},_={type:"object",apiName:"SotSensor",osdkMetadata:o},I={type:"object",apiName:"StateTerritory",osdkMetadata:o},D={type:"object",apiName:"StructPerson",osdkMetadata:o},x={type:"object",apiName:"StructPersonOpisTeam",osdkMetadata:o},L={type:"object",apiName:"Todo",osdkMetadata:o},K={type:"object",apiName:"Venture",osdkMetadata:o},U={type:"object",apiName:"WeatherStation",osdkMetadata:o},B={apiName:"getNamesOfCustomersFromCountry",type:"query",version:"0.1.1",osdkMetadata:o},W={apiName:"getTodoCount",type:"query",version:"0.1.2",osdkMetadata:o},F={apiName:"queryTakesAllParameterTypes",type:"query",version:"version",osdkMetadata:o}}};