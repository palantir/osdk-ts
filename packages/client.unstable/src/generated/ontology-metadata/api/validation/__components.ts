/*
 * Copyright 2025 Palantir Technologies, Inc. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

import type {
  ActionTypeIdentifier as _api_ActionTypeIdentifier,
  ActionTypeParameterIdentifier as _api_ActionTypeParameterIdentifier,
  DatasourceIdentifier as _api_DatasourceIdentifier,
  InterfaceTypeRidOrIdInRequest as _api_InterfaceTypeRidOrIdInRequest,
  LinkTypeIdentifier as _api_LinkTypeIdentifier,
  ObjectTypeIdentifier as _api_ObjectTypeIdentifier,
  PropertyTypeIdentifier as _api_PropertyTypeIdentifier,
  SharedPropertyTypeRidOrIdInRequest as _api_SharedPropertyTypeRidOrIdInRequest,
  TypeGroupRidOrIdInRequest as _api_TypeGroupRidOrIdInRequest,
} from "../__components.js";
import type { RuleSetIdentifier as _api_formatting_RuleSetIdentifier } from "../formatting/__components.js";

/**
 * Action Log is not supported for Function-backed Actions that use Functions whose provenance has not been set.
 */
export interface ActionTypeActionLogConfiguredForFunctionButFunctionProvenanceIsNotSet {
}
/**
 * Action log contains values not generated by action type, for example webhook and notification instance ids.
 */
export interface ActionTypeActionLogContainsValuesNotGeneratedByAction {
}
/**
 * Editing of Action Log Objects is disallowed. They can only be created via Action Log Rules.
 */
export interface ActionTypeActionLogObjectsCannotBeEdited {
}
/**
 * Referenced action log object type does not exist in the Ontology.
 */
export interface ActionTypeActionLogObjectTypeDoesNotExist {
}
/**
 * Action Log Object Type can not be empty.
 */
export interface ActionTypeActionLogObjectTypeIdSuppliedEmpty {
}
/**
 * A property type id referenced in the action log configuration does not exist on the action log object type.
 */
export interface ActionTypeActionLogPropertyTypeIdReferencedDoesNotExist {
}
/**
 * All Reason Code PropertyTypeIds must be present in the ActionLogRule propertyValues mapping.
 */
export interface ActionTypeActionLogReasonCodePropertiesNotMapped {
}
/**
 * The Action Log can only store property values of singleton Object parameters.
 */
export interface ActionTypeActionLogReferencesPropertiesOfNonSingletonObject {
}
/**
 * Action Log is required for some of the ObjectTypes edited but an Action Log Rule has not been configured or is disabled.
 */
export interface ActionTypeActionLogRequiredButNotEnabled {
}
/**
 * Some values required to be logged for the action log are not present in configuration exactly once.
 */
export interface ActionTypeActionLogRequiredValuesNotAllPresentExactlyOnce {
}
/**
 * The Action Log Summary cannot contain Object type parameters because we cannot render them. Object parameter properties can be referenced instead, including the PK property.
 */
export interface ActionTypeActionLogSummaryContainsObjectParameters {
}
/**
 * Action log summary message is too long.
 */
export interface ActionTypeActionLogSummaryMessagePartTooLong {
}
/**
 * Action log summary has too many message parts.
 */
export interface ActionTypeActionLogSummaryTooManyMessageParts {
}
/**
 * Every Action Log Value must have the appropriate type for the Action Log ObjectType property that it is mapped to.
 */
export interface ActionTypeActionLogValueDoesNotMatchObjectPropertyTypes {
}
/**
 * All ObjectTypes that are edited in an ActionType must have a corresponding editedObjects ActionLogValue in the Action Log Rule's propertyValues mapping.
 */
export interface ActionTypeActionTypeObjectTypesEditedDoNotHaveCorrespondingActionLogValue {
}
/**
 * A parameter referenced in the action log configuration does not exist on the action type.
 */
export interface ActionTypeActionTypeParametersReferencedInActionLogRuleDoNotExist {
}
/**
 * Cannot simultaneously add and edit an ActionType parameter.
 */
export interface ActionTypeAddingAndEditingSameParameterId {
}
/**
 * Two action types have the same API name. API names must be unique.
 */
export interface ActionTypeApiNameConflict {
}
/**
 * ActionType has an invalid API name (needs to be alphanumeric lowercase kebab-case).
 */
export interface ActionTypeApiNameInvalidFormat {
}
/**
 * ActionType is missing an API name.
 */
export interface ActionTypeApiNameMissing {
}
/**
 * The button text of an action type exceeds the maximum length.
 */
export interface ActionTypeButtonTextTooLong {
}
/**
 * Cannot find the ObjectTypeId specified.
 */
export interface ActionTypeCannotFindObjectTypes {
}
/**
 * User lacks the necessary permissions to view the allowed parameters within the action type submission criteria. Please ensure that the user has the appropriate permissions.
 */
export interface ActionTypeCannotPerformOperationWithRedactedValue {
}
/**
 * ActionType updates a media property backed by a legacy media datasource. The property should be migrated to use media sets.
 */
export interface ActionTypeCannotUpdateLegacyMediaPropertyWithLogicRuleValueFromAction {
}
/**
 * ActionType populates a media reference from an object parameter, which is not supported.
 */
export interface ActionTypeCannotUseMediaReferenceForObjectOrInterfaceParameterProperty {
}
/**
 * ActionType populates a time series reference from an object parameter, which is not supported.
 */
export interface ActionTypeCannotUseTimeSeriesReferenceForObjectOrInterfaceParameterProperty {
}
/**
 * A max classification must always be set when using a Non-securing string CBAC picker.
 */
export interface ActionTypeCbacConstraintOnNonSecuringCbacParameterMissingMaxClassification {
}
/**
 * Conditions are not indexed correctly.
 */
export interface ActionTypeConditionsAreNotIndexedCorrectly {
}
/**
 * Condition Value cannot reference object reference list parameters that have maximum length defined higher than configured limit.
 */
export interface ActionTypeConditionValueCannotReferenceHighCardinalityObjectReferenceParameter {
}
/**
 * The count of action types exceeds the allowed limit.
 */
export interface ActionTypeCountExceeded {
}
/**
 * ActionType has an optional parameter that populates a required property on an object type.
 */
export interface ActionTypeDataConstraintsPropertyMappedToOptionalParameter {
}
/**
 * The default string of an action type exceeds the maximum length.
 */
export interface ActionTypeDefaultStringTooLong {
}
/**
 * Cannot simultaneously delete and edit an ActionType parameter.
 */
export interface ActionTypeDeletingAndEditingSameParameterRid {
}
/**
 * The description of an action type exceeds the maximum length.
 */
export interface ActionTypeDescriptionTooLong {
}
/**
 * The display name of an action type exceeds the maximum length.
 */
export interface ActionTypeDisplayNameTooLong {
}
/**
 * Every ActionType must contain at least one ActionType level submission criteria in order to ensure that they are being secured.
 */
export interface ActionTypeDoesNotHaveActionTypeLevelValidation {
}
/**
 * The ActionType definition tries to edit a property type that is not editable.
 */
export interface ActionTypeEditingNonEditablePropertyType {
}
export interface ActionTypeErrorCategory_definition {
  type: "definition";
  definition: InvalidActionTypeDefinition;
}

export interface ActionTypeErrorCategory_parameter {
  type: "parameter";
  parameter: InvalidActionTypeParameterWithIdentifier;
}

export interface ActionTypeErrorCategory_reference {
  type: "reference";
  reference: InvalidActionTypeReference;
}

export interface ActionTypeErrorCategory_indeterminate {
  type: "indeterminate";
  indeterminate: IndeterminateErrorCategory;
}
export type ActionTypeErrorCategory =
  | ActionTypeErrorCategory_definition
  | ActionTypeErrorCategory_parameter
  | ActionTypeErrorCategory_reference
  | ActionTypeErrorCategory_indeterminate;

/**
 * The failure message of an action type exceeds the maximum length.
 */
export interface ActionTypeFailureMessageTooLong {
}
/**
 * There are duplicate Parameters or Sections on the FormContentOrdering list.
 */
export interface ActionTypeFormContentOrderingContainsDuplicates {
}
/**
 * Some Parameters in the ActionType are missing in the FormContentOrdering list or there are Parameters on the FormContentOrdering list not associated with the ActionType.
 */
export interface ActionTypeFormContentOrderingNotExactlySameAsParameterSet {
}
/**
 * Some Sections in the ActionType are missing in the FormContentOrdering list or there are Sections on the FormContentOrdering list not associated with the ActionType.
 */
export interface ActionTypeFormContentOrderingNotExactlySameAsSectionSet {
}
/**
 * ActionType has reverts enabled and a synchronous webhook.
 */
export interface ActionTypeHasRevertsEnabledAndSynchronousWebhook {
}
/**
 * Action Type has reverts enabled but has no criteria for when a revert is permitted.
 */
export interface ActionTypeHasRevertsEnabledButEmptyEnabledForConfiguration {
}
/**
 * ActionType has reverts enabled but references Link Types that are not in Object Storage V2.
 */
export interface ActionTypeHasRevertsEnabledForInvalidLinkTypeStorageBackendCategory {
}
/**
 * ActionType has reverts enabled but references Object Types that are not in Object Storage V2.
 */
export interface ActionTypeHasRevertsEnabledForInvalidObjectTypeStorageBackendCategory {
}
/**
 * The user attempted to add a string-cbac-picker typeclass to a parameter but did not have sufficient permissions.
 */
export interface ActionTypeInsufficientPermissionsToAddStringCbacPickerTypeclass {
}
/**
 * Every Cbac Constraint must contain a valid non-empty set of markings to be used as the max classification. The markingIds must be stored as a markingList DataValue.
 */
export interface ActionTypeInsufficientPermissionsToModifyMaxClassificationOfNonSecuringCbacParameter {
}
/**
 * The entities' API name prefixes do not match the API Namespace ID stored in Compass and therefore are invalid.
 */
export interface ActionTypeInvalidApiNamePrefixes {
}
/**
 * The logic rule provided for ObjectType is not valid. AddOrModifyRule is not supported for V1 object types.
 */
export interface ActionTypeInvalidLogicRuleForObjectType {
}
/**
 * The parameter specified as the starting object set for an object dropdown is not an object reference or object reference list.
 */
export interface ActionTypeInvalidObjectDropdownStartingParameter {
}
/**
 * Action Type revert duration is invalid.
 */
export interface ActionTypeInvalidRevertDuration {
}
/**
 * AddLinkRules and DeleteLinkRules must reference many-to-many link types. One-to-one or one-to-many link types should instead be modified by editing the foreign key property on the relevant object type.
 */
export interface ActionTypeLinkRuleDoesNotReferenceManyToManyLinkType {
}
/**
 * The object dropdown has some conditionValueIds without a corresponding value in the map, or ids in the map not used in any filter.
 */
export interface ActionTypeMissingConditionValuesInActionsObjectSet {
}
/**
 * Action Type revert is missing duration.
 */
export interface ActionTypeMissingRevertDuration {
}
/**
 * ActionType modifies a parameter that is not an object reference or an object set.
 */
export interface ActionTypeModifyObjectRuleDoesNotReferenceObjectTypeParameter {
}
/**
 * Some ConditionValue(s) are referencing ParameterId(s) that do not exist on the ActionType.
 */
export interface ActionTypeNonExistentParametersUsedInConditionValue {
}
/**
 * Action Logic references non-existing parameters.
 */
export interface ActionTypeNonExistentParametersUsedInLogic {
}
/**
 * Some ParameterPrefill(s) are referencing ParameterId(s) that do not exist on the ActionType.
 */
export interface ActionTypeNonExistentParametersUsedInParameterPrefill {
}
/**
 * Cannot create Object because primary key property is missing.
 */
export interface ActionTypeObjectMissingPrimaryKey {
}
/**
 * ObjectParameterPropertyValue cannot reference a struct property; only ObjectParameterStruct/StructListFieldValue can reference struct properties.
 */
export interface ActionTypeObjectParameterPropertyValueCannotReferenceStructProperty {
}
/**
 * ObjectParameterPropertyValue cannot reference a struct property; only ObjectParameterStruct/StructListFieldValue can reference struct properties.
 */
export interface ActionTypeObjectParameterPropertyValueInPrefillsCannotReferenceStructProperty {
}
/**
 * The maybeCreateObjectOption field of ObjectReferenceType fails sanity check. Namely, maybeCreateObjectOption should be empty or non-empty when instead the opposite is observed.
 */
export interface ActionTypeObjectReferenceTypeCreateObjectOptionValue {
}
/**
 * The parameter has an object set that resolves to an Object type different from the object type of the parameter.
 */
export interface ActionTypeObjectSetObjectTypeDoesntMatchParameterObjectType {
}
/**
 * ObjectSetRid parameters are currently disallowed from being referenced in ConditionValues.
 */
export interface ActionTypeObjectSetRidsNotAllowedInConditionValues {
}
/**
 * Every Cbac Constraint must contain a valid non-empty set of markings to be used as the max classification. The markingIds must be stored as a markingList DataValue.
 */
export interface ActionTypeParameterCbacConstraintContainsInvalidMaxClassification {
}
/**
 * The description of a parameter in an action type exceeds the maximum length.
 */
export interface ActionTypeParameterDescriptionTooLong {
}
/**
 * The display name of a parameter in an action type exceeds the maximum length.
 */
export interface ActionTypeParameterDisplayNameTooLong {
}
export interface ActionTypeParameterErrorCategory_definition {
  type: "definition";
  definition: InvalidActionTypeParameterDefinition;
}

export interface ActionTypeParameterErrorCategory_reference {
  type: "reference";
  reference: InvalidActionTypeParameterReference;
}

export interface ActionTypeParameterErrorCategory_indeterminate {
  type: "indeterminate";
  indeterminate: IndeterminateErrorCategory;
}
export type ActionTypeParameterErrorCategory =
  | ActionTypeParameterErrorCategory_definition
  | ActionTypeParameterErrorCategory_reference
  | ActionTypeParameterErrorCategory_indeterminate;

/**
 * The parameter ordering of the action type contains duplicates.
 */
export interface ActionTypeParameterOrderingContainsDuplicates {
}
/**
 * The parameters in the parameter ordering and the parameter set of the action type are not the same.
 */
export interface ActionTypeParameterOrderingNotExactlySameAsParameterSet {
}
/**
 * Parameter prefill cannot reference object reference list parameters that have maximum length defined higher than configured limit.
 */
export interface ActionTypeParameterPrefillCannotReferenceHighCardinalityObjectReferenceParameter {
}
/**
 * Some ParameterIds are not matching between ActionType and ParameterOrdering.
 */
export interface ActionTypeParametersDoNotMatchParameterOrdering {
}
/**
 * The relative ordering of parameters and parameters nested in sections doesn't match the global ParameterOrdering.
 */
export interface ActionTypeParametersInFormContentOrderingDontMatchParameterOrdering {
}
/**
 * Parameter type does not match parameter validation type.
 */
export interface ActionTypeParameterTypeDoesNotMatchParameterValidationType {
}
/**
 * Parameter validation (submission criteria) not found for the specified ParameterId.
 */
export interface ActionTypeParameterValidationNotFound {
}
/**
 * Parameter submission criteria is referencing later parameters.
 */
export interface ActionTypeParameterValidationReferencesLaterParameters {
}
/**
 * Cannot create/edit ActionType because the primary key in an AddObjectRule does not use a Parameter or UniqueIdentifier or Webhook output.
 */
export interface ActionTypePrimaryKeyInAddObjectRuleDoesNotUseValidLogicRuleValue {
}
/**
 * ActionType has a rule that sets a property to an incompatibly typed value.
 */
export interface ActionTypePropertyTypeDoesNotMatchMappedLogicRuleValue {
}
/**
 * ActionType references ontology entities which do not exist.
 */
export interface ActionTypeReferencesNonExistentEntityTypes {
}
/**
 * ActionType references a property type that does not exist on the object type.
 */
export interface ActionTypeReferencesNonExistentPropertyTypesInObjectTypes {
}
/**
 * ActionType updates a shared property that does not exist in the interface.
 */
export interface ActionTypeReferencesNonExistentSharedPropertyTypesInInterfaceTypes {
}
/**
 * ActionType updates a shared property that is not guaranteed to exist because it is optional in the interface.
 */
export interface ActionTypeReferencesOptionalSharedPropertyTypesInInterfaceTypes {
}
/**
 * The description of a section in an action type exceeds the maximum length.
 */
export interface ActionTypeSectionDescriptionTooLong {
}
/**
 * The display name of a section in an action type exceeds the maximum length.
 */
export interface ActionTypeSectionDisplayNameTooLong {
}
/**
 * The static value of an action type exceeds the maximum length.
 */
export interface ActionTypeStaticValueTooLong {
}
/**
 * Parameters used with the string-cbac-picker typeclass must be of type String or List<String>.
 */
export interface ActionTypeStringCbacPickerTypeclassUsedOnNonStringParameter {
}
/**
 * The ActionType containing LogicRuleValue mappings for struct property must have StructFieldLogicRuleValue mappings for exactly all of the struct fields present in the struct property but has missing or extraneous structFieldRids mapped.
 */
export interface ActionTypeStructFieldLogicMappingDoesNotMatchStructPropertyDefinition {
}
/**
 * Struct parameter field's allowed value is incompatible with the field's type.
 */
export interface ActionTypeStructParameterFieldAllowedValueIsIncompatibleWithFieldType {
}
/**
 * Struct parameter field's prefill references incompatible object type struct property field.
 */
export interface ActionTypeStructParameterFieldPrefillReferencesIncompatibleObjectPropertyTypeStructField {
}
/**
 * Struct parameter field's prefill references nonexistent struct field within the object type.
 */
export interface ActionTypeStructParameterFieldPrefillReferencesNonexistentObjectPropertyTypeStructField {
}
/**
 * Struct parameter field's renderHint is incompatible with field type and allowed value.
 */
export interface ActionTypeStructParameterFieldRenderHintIsIncompatibleWithFieldTypeAndAllowedValue {
}
/**
 * ListLengthValidation cannot not be defined on fields of struct or struct list parameters.
 */
export interface ActionTypeStructParameterFieldsListLengthValidationCannotBeDefined {
}
/**
 * The struct parameter's top-level AllowedValue must be DelegateToAllowedStructFieldValues.
 */
export interface ActionTypeStructParameterHasInvalidTopLevelAllowedValues {
}
/**
 * Struct parameter field's prefill references incompatible object type struct property field.
 */
export interface ActionTypeStructParameterPrefillReferencesStructPropertyWithIncompatibleCardinality {
}
/**
 * Either all or none of the struct fields must have prefills defined.
 */
export interface ActionTypeStructParameterPrefillsMustBeDefinedForAllFieldsOrNone {
}
/**
 * A struct parameter's field prefill must all reference the same object type property.
 */
export interface ActionTypeStructParameterPrefillsNotReferencingSameObjectTypeProperty {
}
/**
 * The struct parameter should not have a top-level prefill defined.
 */
export interface ActionTypeStructParameterShouldNotHaveTopLevelPrefillDefined {
}
/**
 * Property types in LogicRuleValue mappings cannot be mapped to struct parameters; only struct properties in StructFieldLogicRuleValue mappings can be mapped to struct parameters.
 */
export interface ActionTypeStructParametersNotAllowedInPropertyTypeLogicRuleValueMappings {
}
/**
 * Struct property field is mapped to a StructFieldLogicRuleValue that resolves to an incompatible struct field type.
 */
export interface ActionTypeStructPropertyFieldMappedToIncompatibleBaseType {
}
/**
 * A struct property field is mapped to a struct parameter of incompatible compatibility. Either a singleton struct property is mapped to a struct list parameter, or an array struct property is mapped to a singleton struct parameter.
 */
export interface ActionTypeStructPropertyFieldMappingHasIncompatibleCardinality {
}
/**
 * A struct property's fields are mapped to struct parameters with inconsistent cardinalities. Struct property fields must be mapped to either all singleton struct parameters or all struct list parameters.
 */
export interface ActionTypeStructPropertyFieldMappingHasInconsistentCardinality {
}
/**
 * StructPropertyTypes should not be present in property type LogicRuleValue mappings; instead individual struct fields should be mapped in StructFieldLogicRuleValue mappings.
 */
export interface ActionTypeStructPropertyTypesNotAllowedInPropertyTypeLogicRuleValueMappings {
}
/**
 * The success message of an action type exceeds the maximum length.
 */
export interface ActionTypeSuccessMessageTooLong {
}
/**
 * The number of logic rules in an action type exceeds the allowed limit.
 */
export interface ActionTypeTooManyLogicRules {
}
/**
 * The object dropdown defines more search arounds than the allowed limit.
 */
export interface ActionTypeTooManyObjectDropdownSearchArounds {
}
/**
 * The number of parameters in an action type exceeds the allowed limit.
 */
export interface ActionTypeTooManyParameters {
}
/**
 * The number of sections in an action type exceeds the allowed limit.
 */
export interface ActionTypeTooManySections {
}
/**
 * The number of submission criteria in an action type exceeds the allowed limit.
 */
export interface ActionTypeTooManySubmissionCriteria {
}
/**
 * The number of type classes for an action type exceeds the allowed limit.
 */
export interface ActionTypeTooManyTypeClasses {
}
/**
 * The type class kind of an action type exceeds the maximum length.
 */
export interface ActionTypeTypeClassKindTooLong {
}
/**
 * Type class usage is not allowed.
 */
export interface ActionTypeTypeclassUsageNotAllowed {
}
/**
 * The type class value of an action type exceeds the maximum length.
 */
export interface ActionTypeTypeClassValueTooLong {
}
/**
 * The action type has exceeded the maximum allowable number of user validation filters.
 */
export interface ActionTypeUserValidationFiltersExceedMaximum {
}
/**
 * Validation ordering contains duplicate validation rules.
 */
export interface ActionTypeValidationsOrderingContainsDuplicates {
}
/**
 * Validation ordering does not exactly match the set of validation rules.
 */
export interface ActionTypeValidationsOrderingNotExactlySameAsValidationRuleSet {
}
export interface EasedPipelineBuilderError {
}
export interface ErrorData {
  errorMessage: string;
  errorName: string;
  safeArgs: Array<SafeArg>;
}
export interface ErrorTag_easedPipelineBuilderError {
  type: "easedPipelineBuilderError";
  easedPipelineBuilderError: EasedPipelineBuilderError;
}
/**
 * Error tags allow for error categorization and might include fields.
 *
 * E.g., EasedPipelineBuilderError represents errors that Pipeline Builder skips during saves.
 *
 * Another example could be PropertySecurityGroupsMarkingPermissionDenied, which contains a Set<MarkingId>.
 */
export type ErrorTag = ErrorTag_easedPipelineBuilderError;

export interface ErrorType_ontologyEntityApiNameConflicts {
  type: "ontologyEntityApiNameConflicts";
  ontologyEntityApiNameConflicts: OntologyEntityApiNameConflicts;
}

export interface ErrorType_intermediaryLinkTypeInvalidAssociatedLinkType {
  type: "intermediaryLinkTypeInvalidAssociatedLinkType";
  intermediaryLinkTypeInvalidAssociatedLinkType:
    IntermediaryLinkTypeInvalidAssociatedLinkType;
}

export interface ErrorType_intermediaryLinkTypeMustBeOsv2 {
  type: "intermediaryLinkTypeMustBeOsv2";
  intermediaryLinkTypeMustBeOsv2: IntermediaryLinkTypeMustBeOsv2;
}

export interface ErrorType_intermediaryLinkTypeReferencedObjectTypesMustBeOsv2 {
  type: "intermediaryLinkTypeReferencedObjectTypesMustBeOsv2";
  intermediaryLinkTypeReferencedObjectTypesMustBeOsv2:
    IntermediaryLinkTypeReferencedObjectTypesMustBeOsv2;
}

export interface ErrorType_linkTypeStreamDatasourceInvalidRetentionWindow {
  type: "linkTypeStreamDatasourceInvalidRetentionWindow";
  linkTypeStreamDatasourceInvalidRetentionWindow:
    LinkTypeStreamDatasourceInvalidRetentionWindow;
}

export interface ErrorType_linkTypeReferencedDatasourceNotFound {
  type: "linkTypeReferencedDatasourceNotFound";
  linkTypeReferencedDatasourceNotFound: LinkTypeReferencedDatasourceNotFound;
}

export interface ErrorType_linkTypePropertiesReferenceSameColumn {
  type: "linkTypePropertiesReferenceSameColumn";
  linkTypePropertiesReferenceSameColumn: LinkTypePropertiesReferenceSameColumn;
}

export interface ErrorType_linkTypeDatasourceSchemaNotFound {
  type: "linkTypeDatasourceSchemaNotFound";
  linkTypeDatasourceSchemaNotFound: LinkTypeDatasourceSchemaNotFound;
}

export interface ErrorType_linkTypeColumnMissingFromBackingDatasource {
  type: "linkTypeColumnMissingFromBackingDatasource";
  linkTypeColumnMissingFromBackingDatasource:
    LinkTypeColumnMissingFromBackingDatasource;
}

export interface ErrorType_linkTypePropertyIncompatibleBackingColumnType {
  type: "linkTypePropertyIncompatibleBackingColumnType";
  linkTypePropertyIncompatibleBackingColumnType:
    LinkTypePropertyIncompatibleBackingColumnType;
}

export interface ErrorType_linkTypeManyToManyWritebackDatasetPresentOnOsv2 {
  type: "linkTypeManyToManyWritebackDatasetPresentOnOsv2";
  linkTypeManyToManyWritebackDatasetPresentOnOsv2:
    LinkTypeManyToManyWritebackDatasetPresentOnOsv2;
}

export interface ErrorType_linkTypeDatasourceAlreadyExists {
  type: "linkTypeDatasourceAlreadyExists";
  linkTypeDatasourceAlreadyExists: LinkTypeDatasourceAlreadyExists;
}

export interface ErrorType_linkTypeStatusAndObjectTypeStatusConflict {
  type: "linkTypeStatusAndObjectTypeStatusConflict";
  linkTypeStatusAndObjectTypeStatusConflict:
    LinkTypeStatusAndObjectTypeStatusConflict;
}

export interface ErrorType_linkTypeReferencedLinkTypesNotFound {
  type: "linkTypeReferencedLinkTypesNotFound";
  linkTypeReferencedLinkTypesNotFound: LinkTypeReferencedLinkTypesNotFound;
}

export interface ErrorType_linkTypeReferencedLinkTypesDeleted {
  type: "linkTypeReferencedLinkTypesDeleted";
  linkTypeReferencedLinkTypesDeleted: LinkTypeReferencedLinkTypesDeleted;
}

export interface ErrorType_linkTypeHasMultipleDatasources {
  type: "linkTypeHasMultipleDatasources";
  linkTypeHasMultipleDatasources: LinkTypeHasMultipleDatasources;
}

export interface ErrorType_linkTypeToDeleteIsReferencedByExistingTypes {
  type: "linkTypeToDeleteIsReferencedByExistingTypes";
  linkTypeToDeleteIsReferencedByExistingTypes:
    LinkTypeToDeleteIsReferencedByExistingTypes;
}

export interface ErrorType_linkTypeHasNoDatasources {
  type: "linkTypeHasNoDatasources";
  linkTypeHasNoDatasources: LinkTypeHasNoDatasources;
}

export interface ErrorType_linkTypeOneToManyWithDatasourcesNotAllowed {
  type: "linkTypeOneToManyWithDatasourcesNotAllowed";
  linkTypeOneToManyWithDatasourcesNotAllowed:
    LinkTypeOneToManyWithDatasourcesNotAllowed;
}

export interface ErrorType_linkTypeStatusAndObjectTypePropertyTypeStatusConflict {
  type: "linkTypeStatusAndObjectTypePropertyTypeStatusConflict";
  linkTypeStatusAndObjectTypePropertyTypeStatusConflict:
    LinkTypeStatusAndObjectTypePropertyTypeStatusConflict;
}

export interface ErrorType_linkTypeInvalidOneToManyCardinalityHint {
  type: "linkTypeInvalidOneToManyCardinalityHint";
  linkTypeInvalidOneToManyCardinalityHint:
    LinkTypeInvalidOneToManyCardinalityHint;
}

export interface ErrorType_linkTypeReferencedObjectTypesNotFound {
  type: "linkTypeReferencedObjectTypesNotFound";
  linkTypeReferencedObjectTypesNotFound: LinkTypeReferencedObjectTypesNotFound;
}

export interface ErrorType_linkTypeReferencedObjectTypesDeleted {
  type: "linkTypeReferencedObjectTypesDeleted";
  linkTypeReferencedObjectTypesDeleted: LinkTypeReferencedObjectTypesDeleted;
}

export interface ErrorType_linkTypeInvalidApiName {
  type: "linkTypeInvalidApiName";
  linkTypeInvalidApiName: LinkTypeInvalidApiName;
}

export interface ErrorType_linkTypeInvalidDeletionsWithReferencingDatasources {
  type: "linkTypeInvalidDeletionsWithReferencingDatasources";
  linkTypeInvalidDeletionsWithReferencingDatasources:
    LinkTypeInvalidDeletionsWithReferencingDatasources;
}

export interface ErrorType_linkTypeStatusAndPropertyTypeStatusConflict {
  type: "linkTypeStatusAndPropertyTypeStatusConflict";
  linkTypeStatusAndPropertyTypeStatusConflict:
    LinkTypeStatusAndPropertyTypeStatusConflict;
}

export interface ErrorType_linkTypeInvalidVisibility {
  type: "linkTypeInvalidVisibility";
  linkTypeInvalidVisibility: LinkTypeInvalidVisibility;
}

export interface ErrorType_linkTypeCannotEditPrivilegedProvenance {
  type: "linkTypeCannotEditPrivilegedProvenance";
  linkTypeCannotEditPrivilegedProvenance:
    LinkTypeCannotEditPrivilegedProvenance;
}

export interface ErrorType_linkTypeReadOnlyV1V2NotAllowed {
  type: "linkTypeReadOnlyV1V2NotAllowed";
  linkTypeReadOnlyV1V2NotAllowed: LinkTypeReadOnlyV1V2NotAllowed;
}

export interface ErrorType_linkTypeEntityMetadataModifyRequestWithInvalidObjectDbType {
  type: "linkTypeEntityMetadataModifyRequestWithInvalidObjectDbType";
  linkTypeEntityMetadataModifyRequestWithInvalidObjectDbType:
    LinkTypeEntityMetadataModifyRequestWithInvalidObjectDbType;
}

export interface ErrorType_linkTypeEntityMetadataModifyRequestWithInvalidObjectDbRid {
  type: "linkTypeEntityMetadataModifyRequestWithInvalidObjectDbRid";
  linkTypeEntityMetadataModifyRequestWithInvalidObjectDbRid:
    LinkTypeEntityMetadataModifyRequestWithInvalidObjectDbRid;
}

export interface ErrorType_linkTypeOsv1NotAllowed {
  type: "linkTypeOsv1NotAllowed";
  linkTypeOsv1NotAllowed: LinkTypeOsv1NotAllowed;
}

export interface ErrorType_linkTypeReadOnlyV2WithPatchesEnabled {
  type: "linkTypeReadOnlyV2WithPatchesEnabled";
  linkTypeReadOnlyV2WithPatchesEnabled: LinkTypeReadOnlyV2WithPatchesEnabled;
}

export interface ErrorType_linkTypeV1WithOsv2ObjectDbsEnabled {
  type: "linkTypeV1WithOsv2ObjectDbsEnabled";
  linkTypeV1WithOsv2ObjectDbsEnabled: LinkTypeV1WithOsv2ObjectDbsEnabled;
}

export interface ErrorType_linkTypeInvalidRevertV1ToV2Migration {
  type: "linkTypeInvalidRevertV1ToV2Migration";
  linkTypeInvalidRevertV1ToV2Migration: LinkTypeInvalidRevertV1ToV2Migration;
}

export interface ErrorType_linkTypeOsv2WithMultipleClustersEnabled {
  type: "linkTypeOsv2WithMultipleClustersEnabled";
  linkTypeOsv2WithMultipleClustersEnabled:
    LinkTypeOsv2WithMultipleClustersEnabled;
}

export interface ErrorType_linkTypeEditabilityChangeDuringV1ToV2Migration {
  type: "linkTypeEditabilityChangeDuringV1ToV2Migration";
  linkTypeEditabilityChangeDuringV1ToV2Migration:
    LinkTypeEditabilityChangeDuringV1ToV2Migration;
}

export interface ErrorType_linkTypeInvalidPrimaryKeyReference {
  type: "linkTypeInvalidPrimaryKeyReference";
  linkTypeInvalidPrimaryKeyReference: LinkTypeInvalidPrimaryKeyReference;
}

export interface ErrorType_linkTypeForeignKeyTypeMismatch {
  type: "linkTypeForeignKeyTypeMismatch";
  linkTypeForeignKeyTypeMismatch: LinkTypeForeignKeyTypeMismatch;
}

export interface ErrorType_linkTypeForeignKeyReferenceDoesNotExist {
  type: "linkTypeForeignKeyReferenceDoesNotExist";
  linkTypeForeignKeyReferenceDoesNotExist:
    LinkTypeForeignKeyReferenceDoesNotExist;
}

export interface ErrorType_linkTypePrimaryAndForeignKeyTypeMismatch {
  type: "linkTypePrimaryAndForeignKeyTypeMismatch";
  linkTypePrimaryAndForeignKeyTypeMismatch:
    LinkTypePrimaryAndForeignKeyTypeMismatch;
}

export interface ErrorType_linkTypeInvalidDerivedForeignKey {
  type: "linkTypeInvalidDerivedForeignKey";
  linkTypeInvalidDerivedForeignKey: LinkTypeInvalidDerivedForeignKey;
}

export interface ErrorType_linkTypeManyToManyDatasourcePrimaryKeyDoesNotExist {
  type: "linkTypeManyToManyDatasourcePrimaryKeyDoesNotExist";
  linkTypeManyToManyDatasourcePrimaryKeyDoesNotExist:
    LinkTypeManyToManyDatasourcePrimaryKeyDoesNotExist;
}

export interface ErrorType_linkTypeManyToManyCountExceeded {
  type: "linkTypeManyToManyCountExceeded";
  linkTypeManyToManyCountExceeded: LinkTypeManyToManyCountExceeded;
}

export interface ErrorType_linkTypeOneToManyCountExceeded {
  type: "linkTypeOneToManyCountExceeded";
  linkTypeOneToManyCountExceeded: LinkTypeOneToManyCountExceeded;
}

export interface ErrorType_linkTypeDisplayNameTooLong {
  type: "linkTypeDisplayNameTooLong";
  linkTypeDisplayNameTooLong: LinkTypeDisplayNameTooLong;
}

export interface ErrorType_linkTypeTooManyTypeClasses {
  type: "linkTypeTooManyTypeClasses";
  linkTypeTooManyTypeClasses: LinkTypeTooManyTypeClasses;
}

export interface ErrorType_linkTypeTypeClassKindTooLong {
  type: "linkTypeTypeClassKindTooLong";
  linkTypeTypeClassKindTooLong: LinkTypeTypeClassKindTooLong;
}

export interface ErrorType_linkTypeTypeClassValueTooLong {
  type: "linkTypeTypeClassValueTooLong";
  linkTypeTypeClassValueTooLong: LinkTypeTypeClassValueTooLong;
}

export interface ErrorType_linkTypeInvalidApiNamePrefixes {
  type: "linkTypeInvalidApiNamePrefixes";
  linkTypeInvalidApiNamePrefixes: LinkTypeInvalidApiNamePrefixes;
}

export interface ErrorType_sensorLinkTypeCannotBeSelfReferential {
  type: "sensorLinkTypeCannotBeSelfReferential";
  sensorLinkTypeCannotBeSelfReferential: SensorLinkTypeCannotBeSelfReferential;
}

export interface ErrorType_sensorLinkTypeNotAttachedToObjectType {
  type: "sensorLinkTypeNotAttachedToObjectType";
  sensorLinkTypeNotAttachedToObjectType: SensorLinkTypeNotAttachedToObjectType;
}

export interface ErrorType_sensorLinkTypesNotFound {
  type: "sensorLinkTypesNotFound";
  sensorLinkTypesNotFound: SensorLinkTypesNotFound;
}

export interface ErrorType_sensorLinkTypeLinkedSensorObjectTypeDoesNotHaveSensorTrait {
  type: "sensorLinkTypeLinkedSensorObjectTypeDoesNotHaveSensorTrait";
  sensorLinkTypeLinkedSensorObjectTypeDoesNotHaveSensorTrait:
    SensorLinkTypeLinkedSensorObjectTypeDoesNotHaveSensorTrait;
}

export interface ErrorType_interfaceTypeToDeleteIsReferencedByExistingTypes {
  type: "interfaceTypeToDeleteIsReferencedByExistingTypes";
  interfaceTypeToDeleteIsReferencedByExistingTypes:
    InterfaceTypeToDeleteIsReferencedByExistingTypes;
}

export interface ErrorType_interfaceTypeContainsDuplicateProperties {
  type: "interfaceTypeContainsDuplicateProperties";
  interfaceTypeContainsDuplicateProperties:
    InterfaceTypeContainsDuplicateProperties;
}

export interface ErrorType_interfaceTypeExtendedDoesNotExistOrDeleted {
  type: "interfaceTypeExtendedDoesNotExistOrDeleted";
  interfaceTypeExtendedDoesNotExistOrDeleted:
    InterfaceTypeExtendedDoesNotExistOrDeleted;
}

export interface ErrorType_interfaceTypeWithActiveStatusRemovingSharedPropertyTypes {
  type: "interfaceTypeWithActiveStatusRemovingSharedPropertyTypes";
  interfaceTypeWithActiveStatusRemovingSharedPropertyTypes:
    InterfaceTypeWithActiveStatusRemovingSharedPropertyTypes;
}

export interface ErrorType_interfaceTypeInvalidApiName {
  type: "interfaceTypeInvalidApiName";
  interfaceTypeInvalidApiName: InterfaceTypeInvalidApiName;
}

export interface ErrorType_interfaceTypeDeclaresRequiredParentPropertyAsOptional {
  type: "interfaceTypeDeclaresRequiredParentPropertyAsOptional";
  interfaceTypeDeclaresRequiredParentPropertyAsOptional:
    InterfaceTypeDeclaresRequiredParentPropertyAsOptional;
}

export interface ErrorType_interfaceTypeReferencedSharedPropertyTypesDoNotExistOrDeleted {
  type: "interfaceTypeReferencedSharedPropertyTypesDoNotExistOrDeleted";
  interfaceTypeReferencedSharedPropertyTypesDoNotExistOrDeleted:
    InterfaceTypeReferencedSharedPropertyTypesDoNotExistOrDeleted;
}

export interface ErrorType_interfaceTypeExtendsTooManyInterfaces {
  type: "interfaceTypeExtendsTooManyInterfaces";
  interfaceTypeExtendsTooManyInterfaces: InterfaceTypeExtendsTooManyInterfaces;
}

export interface ErrorType_interfaceTypeLinkedEntityTypeNotFound {
  type: "interfaceTypeLinkedEntityTypeNotFound";
  interfaceTypeLinkedEntityTypeNotFound: InterfaceTypeLinkedEntityTypeNotFound;
}

export interface ErrorType_interfaceTypeContainsTooManyProperties {
  type: "interfaceTypeContainsTooManyProperties";
  interfaceTypeContainsTooManyProperties:
    InterfaceTypeContainsTooManyProperties;
}

export interface ErrorType_interfaceLinkTypeApiNameConflict {
  type: "interfaceLinkTypeApiNameConflict";
  interfaceLinkTypeApiNameConflict: InterfaceLinkTypeApiNameConflict;
}

export interface ErrorType_interfaceTypeImplementedTooOften {
  type: "interfaceTypeImplementedTooOften";
  interfaceTypeImplementedTooOften: InterfaceTypeImplementedTooOften;
}

export interface ErrorType_interfaceTypeCountExceeded {
  type: "interfaceTypeCountExceeded";
  interfaceTypeCountExceeded: InterfaceTypeCountExceeded;
}

export interface ErrorType_interfaceTypeDisplayNameTooLong {
  type: "interfaceTypeDisplayNameTooLong";
  interfaceTypeDisplayNameTooLong: InterfaceTypeDisplayNameTooLong;
}

export interface ErrorType_interfaceTypeDescriptionTooLong {
  type: "interfaceTypeDescriptionTooLong";
  interfaceTypeDescriptionTooLong: InterfaceTypeDescriptionTooLong;
}

export interface ErrorType_interfaceLinkTypeDisplayNameTooLong {
  type: "interfaceLinkTypeDisplayNameTooLong";
  interfaceLinkTypeDisplayNameTooLong: InterfaceLinkTypeDisplayNameTooLong;
}

export interface ErrorType_interfaceLinkTypeDescriptionTooLong {
  type: "interfaceLinkTypeDescriptionTooLong";
  interfaceLinkTypeDescriptionTooLong: InterfaceLinkTypeDescriptionTooLong;
}

export interface ErrorType_interfaceTypeInvalidApiNamePrefixes {
  type: "interfaceTypeInvalidApiNamePrefixes";
  interfaceTypeInvalidApiNamePrefixes: InterfaceTypeInvalidApiNamePrefixes;
}

export interface ErrorType_objectTypeRuleSetBindingAssociatedWithDerivedPropertyType {
  type: "objectTypeRuleSetBindingAssociatedWithDerivedPropertyType";
  objectTypeRuleSetBindingAssociatedWithDerivedPropertyType:
    ObjectTypeRuleSetBindingAssociatedWithDerivedPropertyType;
}

export interface ErrorType_objectTypeMissingPropertiesAssociatedWithWorkflow {
  type: "objectTypeMissingPropertiesAssociatedWithWorkflow";
  objectTypeMissingPropertiesAssociatedWithWorkflow:
    ObjectTypeMissingPropertiesAssociatedWithWorkflow;
}

export interface ErrorType_objectTypeWorkflowTraitMappingsDoNotExistOnTrait {
  type: "objectTypeWorkflowTraitMappingsDoNotExistOnTrait";
  objectTypeWorkflowTraitMappingsDoNotExistOnTrait:
    ObjectTypeWorkflowTraitMappingsDoNotExistOnTrait;
}

export interface ErrorType_objectTypeDatasourceGeotimeSeriesIntegrationRidIsInvalid {
  type: "objectTypeDatasourceGeotimeSeriesIntegrationRidIsInvalid";
  objectTypeDatasourceGeotimeSeriesIntegrationRidIsInvalid:
    ObjectTypeDatasourceGeotimeSeriesIntegrationRidIsInvalid;
}

export interface ErrorType_objectTypeGeotimeSeriesDatasourceDoesNotReferenceExistingProperties {
  type: "objectTypeGeotimeSeriesDatasourceDoesNotReferenceExistingProperties";
  objectTypeGeotimeSeriesDatasourceDoesNotReferenceExistingProperties:
    ObjectTypeGeotimeSeriesDatasourceDoesNotReferenceExistingProperties;
}

export interface ErrorType_objectTypeGeotimeSeriesDatasourceGeotimeCatalogIsNotInstalled {
  type: "objectTypeGeotimeSeriesDatasourceGeotimeCatalogIsNotInstalled";
  objectTypeGeotimeSeriesDatasourceGeotimeCatalogIsNotInstalled:
    ObjectTypeGeotimeSeriesDatasourceGeotimeCatalogIsNotInstalled;
}

export interface ErrorType_objectTypeGeotimeSeriesDatasourceDoesNotReferenceGeotimeSeriesProperties {
  type:
    "objectTypeGeotimeSeriesDatasourceDoesNotReferenceGeotimeSeriesProperties";
  objectTypeGeotimeSeriesDatasourceDoesNotReferenceGeotimeSeriesProperties:
    ObjectTypeGeotimeSeriesDatasourceDoesNotReferenceGeotimeSeriesProperties;
}

export interface ErrorType_objectTypeDataSecurityModifiedOnBranch {
  type: "objectTypeDataSecurityModifiedOnBranch";
  objectTypeDataSecurityModifiedOnBranch:
    ObjectTypeDataSecurityModifiedOnBranch;
}

export interface ErrorType_objectTypePropertiesReferenceSameColumnName {
  type: "objectTypePropertiesReferenceSameColumnName";
  objectTypePropertiesReferenceSameColumnName:
    ObjectTypePropertiesReferenceSameColumnName;
}

export interface ErrorType_objectTypeTimeSeriesDatasourceDoesNotReferenceExistingProperties {
  type: "objectTypeTimeSeriesDatasourceDoesNotReferenceExistingProperties";
  objectTypeTimeSeriesDatasourceDoesNotReferenceExistingProperties:
    ObjectTypeTimeSeriesDatasourceDoesNotReferenceExistingProperties;
}

export interface ErrorType_objectTypeTimeSeriesSyncRidIsNotTimeSeriesSync {
  type: "objectTypeTimeSeriesSyncRidIsNotTimeSeriesSync";
  objectTypeTimeSeriesSyncRidIsNotTimeSeriesSync:
    ObjectTypeTimeSeriesSyncRidIsNotTimeSeriesSync;
}

export interface ErrorType_objectTypeTimeSeriesDatasourceDoesNotReferenceTimeDependentProperties {
  type: "objectTypeTimeSeriesDatasourceDoesNotReferenceTimeDependentProperties";
  objectTypeTimeSeriesDatasourceDoesNotReferenceTimeDependentProperties:
    ObjectTypeTimeSeriesDatasourceDoesNotReferenceTimeDependentProperties;
}

export interface ErrorType_objectTypePropertyTypeDuplicateMappings {
  type: "objectTypePropertyTypeDuplicateMappings";
  objectTypePropertyTypeDuplicateMappings:
    ObjectTypePropertyTypeDuplicateMappings;
}

export interface ErrorType_objectTypePropertyTypeMarkingMustBeBackedByDatasourceWithGranularPermissions {
  type:
    "objectTypePropertyTypeMarkingMustBeBackedByDatasourceWithGranularPermissions";
  objectTypePropertyTypeMarkingMustBeBackedByDatasourceWithGranularPermissions:
    ObjectTypePropertyTypeMarkingMustBeBackedByDatasourceWithGranularPermissions;
}

export interface ErrorType_objectTypeRevDbIntegratedBackedByStreamDatasource {
  type: "objectTypeRevDbIntegratedBackedByStreamDatasource";
  objectTypeRevDbIntegratedBackedByStreamDatasource:
    ObjectTypeRevDbIntegratedBackedByStreamDatasource;
}

export interface ErrorType_objectTypeDatasourceWithoutPrimaryKeyColumn {
  type: "objectTypeDatasourceWithoutPrimaryKeyColumn";
  objectTypeDatasourceWithoutPrimaryKeyColumn:
    ObjectTypeDatasourceWithoutPrimaryKeyColumn;
}

export interface ErrorType_objectTypeDatasourceColumnMappingMismatch {
  type: "objectTypeDatasourceColumnMappingMismatch";
  objectTypeDatasourceColumnMappingMismatch:
    ObjectTypeDatasourceColumnMappingMismatch;
}

export interface ErrorType_objectTypeReferencedDatasourceNotFound {
  type: "objectTypeReferencedDatasourceNotFound";
  objectTypeReferencedDatasourceNotFound:
    ObjectTypeReferencedDatasourceNotFound;
}

export interface ErrorType_objectTypePrimaryKeyIsDerived {
  type: "objectTypePrimaryKeyIsDerived";
  objectTypePrimaryKeyIsDerived: ObjectTypePrimaryKeyIsDerived;
}

export interface ErrorType_objectTypePropertyTypeMarkingMustBeReferencedInGranularPolicy {
  type: "objectTypePropertyTypeMarkingMustBeReferencedInGranularPolicy";
  objectTypePropertyTypeMarkingMustBeReferencedInGranularPolicy:
    ObjectTypePropertyTypeMarkingMustBeReferencedInGranularPolicy;
}

export interface ErrorType_objectTypeDatasourceAlreadyExists {
  type: "objectTypeDatasourceAlreadyExists";
  objectTypeDatasourceAlreadyExists: ObjectTypeDatasourceAlreadyExists;
}

export interface ErrorType_objectTypeWithUnmappedTitleProperty {
  type: "objectTypeWithUnmappedTitleProperty";
  objectTypeWithUnmappedTitleProperty: ObjectTypeWithUnmappedTitleProperty;
}

export interface ErrorType_objectTypeInvalidTypeChangeOfExistingDatasource {
  type: "objectTypeInvalidTypeChangeOfExistingDatasource";
  objectTypeInvalidTypeChangeOfExistingDatasource:
    ObjectTypeInvalidTypeChangeOfExistingDatasource;
}

export interface ErrorType_objectTypeMismatchedSecurityGroupGranularPolicyOperandDataTypes {
  type: "objectTypeMismatchedSecurityGroupGranularPolicyOperandDataTypes";
  objectTypeMismatchedSecurityGroupGranularPolicyOperandDataTypes:
    ObjectTypeMismatchedSecurityGroupGranularPolicyOperandDataTypes;
}

export interface ErrorType_objectTypeNonEmptyPropertyInSecurityGroupGranularPolicyNotCondition {
  type: "objectTypeNonEmptyPropertyInSecurityGroupGranularPolicyNotCondition";
  objectTypeNonEmptyPropertyInSecurityGroupGranularPolicyNotCondition:
    ObjectTypeNonEmptyPropertyInSecurityGroupGranularPolicyNotCondition;
}

export interface ErrorType_objectTypeUnmappedPropertiesInPropertySecurityGroup {
  type: "objectTypeUnmappedPropertiesInPropertySecurityGroup";
  objectTypeUnmappedPropertiesInPropertySecurityGroup:
    ObjectTypeUnmappedPropertiesInPropertySecurityGroup;
}

export interface ErrorType_objectTypeUnexpectedPropertyTypeReferencedInSecurityGroupGranularPolicy {
  type:
    "objectTypeUnexpectedPropertyTypeReferencedInSecurityGroupGranularPolicy";
  objectTypeUnexpectedPropertyTypeReferencedInSecurityGroupGranularPolicy:
    ObjectTypeUnexpectedPropertyTypeReferencedInSecurityGroupGranularPolicy;
}

export interface ErrorType_objectTypeUnsupportedSecurityGroupGranularPolicyOperands {
  type: "objectTypeUnsupportedSecurityGroupGranularPolicyOperands";
  objectTypeUnsupportedSecurityGroupGranularPolicyOperands:
    ObjectTypeUnsupportedSecurityGroupGranularPolicyOperands;
}

export interface ErrorType_objectTypeUnsupportedSecurityGroupGranularPolicyOperandDataType {
  type: "objectTypeUnsupportedSecurityGroupGranularPolicyOperandDataType";
  objectTypeUnsupportedSecurityGroupGranularPolicyOperandDataType:
    ObjectTypeUnsupportedSecurityGroupGranularPolicyOperandDataType;
}

export interface ErrorType_objectTypeInvalidOperatorForSecurityGroupGranularPolicyOperands {
  type: "objectTypeInvalidOperatorForSecurityGroupGranularPolicyOperands";
  objectTypeInvalidOperatorForSecurityGroupGranularPolicyOperands:
    ObjectTypeInvalidOperatorForSecurityGroupGranularPolicyOperands;
}

export interface ErrorType_objectTypeUnmappedPropertyInSecurityGroupGranularPolicy {
  type: "objectTypeUnmappedPropertyInSecurityGroupGranularPolicy";
  objectTypeUnmappedPropertyInSecurityGroupGranularPolicy:
    ObjectTypeUnmappedPropertyInSecurityGroupGranularPolicy;
}

export interface ErrorType_objectTypeAssumedMarkingSpecifiedWithoutBackingDatasource {
  type: "objectTypeAssumedMarkingSpecifiedWithoutBackingDatasource";
  objectTypeAssumedMarkingSpecifiedWithoutBackingDatasource:
    ObjectTypeAssumedMarkingSpecifiedWithoutBackingDatasource;
}

export interface ErrorType_objectTypeNullablePropertyInSecurityGroupGranularPolicyMarkingCondition {
  type:
    "objectTypeNullablePropertyInSecurityGroupGranularPolicyMarkingCondition";
  objectTypeNullablePropertyInSecurityGroupGranularPolicyMarkingCondition:
    ObjectTypeNullablePropertyInSecurityGroupGranularPolicyMarkingCondition;
}

export interface ErrorType_objectTypeInvalidNumberOfPropertyReferencesInPropertySecurityGroup {
  type: "objectTypeInvalidNumberOfPropertyReferencesInPropertySecurityGroup";
  objectTypeInvalidNumberOfPropertyReferencesInPropertySecurityGroup:
    ObjectTypeInvalidNumberOfPropertyReferencesInPropertySecurityGroup;
}

export interface ErrorType_objectTypePropertySecurityGroupsNotSupportedWithMultipleDatasources {
  type: "objectTypePropertySecurityGroupsNotSupportedWithMultipleDatasources";
  objectTypePropertySecurityGroupsNotSupportedWithMultipleDatasources:
    ObjectTypePropertySecurityGroupsNotSupportedWithMultipleDatasources;
}

export interface ErrorType_objectTypePropertySecurityGroupsNotSupportedOnBranches {
  type: "objectTypePropertySecurityGroupsNotSupportedOnBranches";
  objectTypePropertySecurityGroupsNotSupportedOnBranches:
    ObjectTypePropertySecurityGroupsNotSupportedOnBranches;
}

export interface ErrorType_objectTypePropertyIncompatibleBackingColumnType {
  type: "objectTypePropertyIncompatibleBackingColumnType";
  objectTypePropertyIncompatibleBackingColumnType:
    ObjectTypePropertyIncompatibleBackingColumnType;
}

export interface ErrorType_objectTypeStructColumnFieldMissingFromBackingDatasource {
  type: "objectTypeStructColumnFieldMissingFromBackingDatasource";
  objectTypeStructColumnFieldMissingFromBackingDatasource:
    ObjectTypeStructColumnFieldMissingFromBackingDatasource;
}

export interface ErrorType_objectTypeDatasourceSchemaNotFound {
  type: "objectTypeDatasourceSchemaNotFound";
  objectTypeDatasourceSchemaNotFound: ObjectTypeDatasourceSchemaNotFound;
}

export interface ErrorType_objectTypeColumnMissingFromBackingDatasource {
  type: "objectTypeColumnMissingFromBackingDatasource";
  objectTypeColumnMissingFromBackingDatasource:
    ObjectTypeColumnMissingFromBackingDatasource;
}

export interface ErrorType_objectTypeDerivedPropertyTypeIsTitle {
  type: "objectTypeDerivedPropertyTypeIsTitle";
  objectTypeDerivedPropertyTypeIsTitle: ObjectTypeDerivedPropertyTypeIsTitle;
}

export interface ErrorType_objectTypeNotAllPropertyTypesAreMappedToDatasource {
  type: "objectTypeNotAllPropertyTypesAreMappedToDatasource";
  objectTypeNotAllPropertyTypesAreMappedToDatasource:
    ObjectTypeNotAllPropertyTypesAreMappedToDatasource;
}

export interface ErrorType_objectTypePropertyTypeMarkingMustHaveAssociatedMarkingConstraintsOnDatasource {
  type:
    "objectTypePropertyTypeMarkingMustHaveAssociatedMarkingConstraintsOnDatasource";
  objectTypePropertyTypeMarkingMustHaveAssociatedMarkingConstraintsOnDatasource:
    ObjectTypePropertyTypeMarkingMustHaveAssociatedMarkingConstraintsOnDatasource;
}

export interface ErrorType_objectTypeGpsPolicyColumnsFromRestrictedViewsAreMapped {
  type: "objectTypeGpsPolicyColumnsFromRestrictedViewsAreMapped";
  objectTypeGpsPolicyColumnsFromRestrictedViewsAreMapped:
    ObjectTypeGpsPolicyColumnsFromRestrictedViewsAreMapped;
}

export interface ErrorType_objectTypeDatasourceUpdateModificationCannotChangeAssumedMarkings {
  type: "objectTypeDatasourceUpdateModificationCannotChangeAssumedMarkings";
  objectTypeDatasourceUpdateModificationCannotChangeAssumedMarkings:
    ObjectTypeDatasourceUpdateModificationCannotChangeAssumedMarkings;
}

export interface ErrorType_objectTypeMediaDatasourceDoesNotReferenceExistingProperties {
  type: "objectTypeMediaDatasourceDoesNotReferenceExistingProperties";
  objectTypeMediaDatasourceDoesNotReferenceExistingProperties:
    ObjectTypeMediaDatasourceDoesNotReferenceExistingProperties;
}

export interface ErrorType_objectTypeMediaSetViewLocatorsDoNotExist {
  type: "objectTypeMediaSetViewLocatorsDoNotExist";
  objectTypeMediaSetViewLocatorsDoNotExist:
    ObjectTypeMediaSetViewLocatorsDoNotExist;
}

export interface ErrorType_objectTypeMediaDatasourceDoesNotReferenceMediaReferenceProperties {
  type: "objectTypeMediaDatasourceDoesNotReferenceMediaReferenceProperties";
  objectTypeMediaDatasourceDoesNotReferenceMediaReferenceProperties:
    ObjectTypeMediaDatasourceDoesNotReferenceMediaReferenceProperties;
}

export interface ErrorType_objectTypeMediaDatasourceDoesNotHaveAnyMediaSourceRids {
  type: "objectTypeMediaDatasourceDoesNotHaveAnyMediaSourceRids";
  objectTypeMediaDatasourceDoesNotHaveAnyMediaSourceRids:
    ObjectTypeMediaDatasourceDoesNotHaveAnyMediaSourceRids;
}

export interface ErrorType_objectTypeHasNoDatasources {
  type: "objectTypeHasNoDatasources";
  objectTypeHasNoDatasources: ObjectTypeHasNoDatasources;
}

export interface ErrorType_objectTypePrimaryKeyPropertyTypeDoesNotExist {
  type: "objectTypePrimaryKeyPropertyTypeDoesNotExist";
  objectTypePrimaryKeyPropertyTypeDoesNotExist:
    ObjectTypePrimaryKeyPropertyTypeDoesNotExist;
}

export interface ErrorType_objectTypePrimaryKeyInvalidTypesWithWriteback {
  type: "objectTypePrimaryKeyInvalidTypesWithWriteback";
  objectTypePrimaryKeyInvalidTypesWithWriteback:
    ObjectTypePrimaryKeyInvalidTypesWithWriteback;
}

export interface ErrorType_objectTypeInvalidApiName {
  type: "objectTypeInvalidApiName";
  objectTypeInvalidApiName: ObjectTypeInvalidApiName;
}

export interface ErrorType_objectTypeTooManyAliases {
  type: "objectTypeTooManyAliases";
  objectTypeTooManyAliases: ObjectTypeTooManyAliases;
}

export interface ErrorType_objectTypeDerivedPropertyDefinitionLinkTypeNotFoundOrDeleted {
  type: "objectTypeDerivedPropertyDefinitionLinkTypeNotFoundOrDeleted";
  objectTypeDerivedPropertyDefinitionLinkTypeNotFoundOrDeleted:
    ObjectTypeDerivedPropertyDefinitionLinkTypeNotFoundOrDeleted;
}

export interface ErrorType_objectTypeDerivedPropertyMultiHopLinkExceedsMaximumStepCount {
  type: "objectTypeDerivedPropertyMultiHopLinkExceedsMaximumStepCount";
  objectTypeDerivedPropertyMultiHopLinkExceedsMaximumStepCount:
    ObjectTypeDerivedPropertyMultiHopLinkExceedsMaximumStepCount;
}

export interface ErrorType_objectTypeDerivedPropertyIncompatibleDefinitionAndForeignPropertyBaseType {
  type:
    "objectTypeDerivedPropertyIncompatibleDefinitionAndForeignPropertyBaseType";
  objectTypeDerivedPropertyIncompatibleDefinitionAndForeignPropertyBaseType:
    ObjectTypeDerivedPropertyIncompatibleDefinitionAndForeignPropertyBaseType;
}

export interface ErrorType_objectTypeDerivedPropertyLinkDefinitionCardinalityInvalid {
  type: "objectTypeDerivedPropertyLinkDefinitionCardinalityInvalid";
  objectTypeDerivedPropertyLinkDefinitionCardinalityInvalid:
    ObjectTypeDerivedPropertyLinkDefinitionCardinalityInvalid;
}

export interface ErrorType_objectTypeDerivedPropertyLinkDoesNotFormChain {
  type: "objectTypeDerivedPropertyLinkDoesNotFormChain";
  objectTypeDerivedPropertyLinkDoesNotFormChain:
    ObjectTypeDerivedPropertyLinkDoesNotFormChain;
}

export interface ErrorType_objectTypeDerivedPropertyTypeDependOnAnotherDerivedProperty {
  type: "objectTypeDerivedPropertyTypeDependOnAnotherDerivedProperty";
  objectTypeDerivedPropertyTypeDependOnAnotherDerivedProperty:
    ObjectTypeDerivedPropertyTypeDependOnAnotherDerivedProperty;
}

export interface ErrorType_objectTypeDerivedPropertyMultiHopLinkIsEmpty {
  type: "objectTypeDerivedPropertyMultiHopLinkIsEmpty";
  objectTypeDerivedPropertyMultiHopLinkIsEmpty:
    ObjectTypeDerivedPropertyMultiHopLinkIsEmpty;
}

export interface ErrorType_objectTypeDerivedPropertyBaseTypeChangedWhenObjectTypeIsNotModified {
  type: "objectTypeDerivedPropertyBaseTypeChangedWhenObjectTypeIsNotModified";
  objectTypeDerivedPropertyBaseTypeChangedWhenObjectTypeIsNotModified:
    ObjectTypeDerivedPropertyBaseTypeChangedWhenObjectTypeIsNotModified;
}

export interface ErrorType_objectTypeDerivedPropertyDefinitionDoesNotMatchSharedPropertyType {
  type: "objectTypeDerivedPropertyDefinitionDoesNotMatchSharedPropertyType";
  objectTypeDerivedPropertyDefinitionDoesNotMatchSharedPropertyType:
    ObjectTypeDerivedPropertyDefinitionDoesNotMatchSharedPropertyType;
}

export interface ErrorType_objectTypeForeignPropertyTypeInDerivedPropertyDefinitionNotFound {
  type: "objectTypeForeignPropertyTypeInDerivedPropertyDefinitionNotFound";
  objectTypeForeignPropertyTypeInDerivedPropertyDefinitionNotFound:
    ObjectTypeForeignPropertyTypeInDerivedPropertyDefinitionNotFound;
}

export interface ErrorType_objectTypeTitlePropertyTypeNotFound {
  type: "objectTypeTitlePropertyTypeNotFound";
  objectTypeTitlePropertyTypeNotFound: ObjectTypeTitlePropertyTypeNotFound;
}

export interface ErrorType_objectTypePrimaryKeyUsesEditOnlyPropertyTypeInDataBackedDatasource {
  type: "objectTypePrimaryKeyUsesEditOnlyPropertyTypeInDataBackedDatasource";
  objectTypePrimaryKeyUsesEditOnlyPropertyTypeInDataBackedDatasource:
    ObjectTypePrimaryKeyUsesEditOnlyPropertyTypeInDataBackedDatasource;
}

export interface ErrorType_objectTypeEventMetadataReferencesNonExistentProperty {
  type: "objectTypeEventMetadataReferencesNonExistentProperty";
  objectTypeEventMetadataReferencesNonExistentProperty:
    ObjectTypeEventMetadataReferencesNonExistentProperty;
}

export interface ErrorType_objectTypeTimeseriesMetadataReferencesNonExistentProperty {
  type: "objectTypeTimeseriesMetadataReferencesNonExistentProperty";
  objectTypeTimeseriesMetadataReferencesNonExistentProperty:
    ObjectTypeTimeseriesMetadataReferencesNonExistentProperty;
}

export interface ErrorType_objectTypeActionLogDeletionStillReferencesEnabledActionType {
  type: "objectTypeActionLogDeletionStillReferencesEnabledActionType";
  objectTypeActionLogDeletionStillReferencesEnabledActionType:
    ObjectTypeActionLogDeletionStillReferencesEnabledActionType;
}

export interface ErrorType_objectTypeSensorTraitReferencesNonExistentProperty {
  type: "objectTypeSensorTraitReferencesNonExistentProperty";
  objectTypeSensorTraitReferencesNonExistentProperty:
    ObjectTypeSensorTraitReferencesNonExistentProperty;
}

export interface ErrorType_objectTypeReadingPropertyTypeMustBeTimeDependent {
  type: "objectTypeReadingPropertyTypeMustBeTimeDependent";
  objectTypeReadingPropertyTypeMustBeTimeDependent:
    ObjectTypeReadingPropertyTypeMustBeTimeDependent;
}

export interface ErrorType_objectTypeCompositePrimaryKeysNotAllowed {
  type: "objectTypeCompositePrimaryKeysNotAllowed";
  objectTypeCompositePrimaryKeysNotAllowed:
    ObjectTypeCompositePrimaryKeysNotAllowed;
}

export interface ErrorType_objectTypeInvalidDeletionsWithReferencingDatasources {
  type: "objectTypeInvalidDeletionsWithReferencingDatasources";
  objectTypeInvalidDeletionsWithReferencingDatasources:
    ObjectTypeInvalidDeletionsWithReferencingDatasources;
}

export interface ErrorType_objectTypeInvalidStatus {
  type: "objectTypeInvalidStatus";
  objectTypeInvalidStatus: ObjectTypeInvalidStatus;
}

export interface ErrorType_objectTypeWithEditsHistoryCannotAddUnsupportedPropertyTypes {
  type: "objectTypeWithEditsHistoryCannotAddUnsupportedPropertyTypes";
  objectTypeWithEditsHistoryCannotAddUnsupportedPropertyTypes:
    ObjectTypeWithEditsHistoryCannotAddUnsupportedPropertyTypes;
}

export interface ErrorType_objectTypeCannotEnableEditsHistoryWithUnsupportedPropertyTypes {
  type: "objectTypeCannotEnableEditsHistoryWithUnsupportedPropertyTypes";
  objectTypeCannotEnableEditsHistoryWithUnsupportedPropertyTypes:
    ObjectTypeCannotEnableEditsHistoryWithUnsupportedPropertyTypes;
}

export interface ErrorType_objectTypeGeotimeSeriesReferencePropertyIsTitle {
  type: "objectTypeGeotimeSeriesReferencePropertyIsTitle";
  objectTypeGeotimeSeriesReferencePropertyIsTitle:
    ObjectTypeGeotimeSeriesReferencePropertyIsTitle;
}

export interface ErrorType_objectTypeGeotimeSeriesReferencePropertyTypeHasNoDatasources {
  type: "objectTypeGeotimeSeriesReferencePropertyTypeHasNoDatasources";
  objectTypeGeotimeSeriesReferencePropertyTypeHasNoDatasources:
    ObjectTypeGeotimeSeriesReferencePropertyTypeHasNoDatasources;
}

export interface ErrorType_objectTypeGeotimeSeriesReferencePropertyShouldNotHaveRenderHints {
  type: "objectTypeGeotimeSeriesReferencePropertyShouldNotHaveRenderHints";
  objectTypeGeotimeSeriesReferencePropertyShouldNotHaveRenderHints:
    ObjectTypeGeotimeSeriesReferencePropertyShouldNotHaveRenderHints;
}

export interface ErrorType_objectTypeGeotimeSeriesReferenceIsNotOnObjectStorageV2 {
  type: "objectTypeGeotimeSeriesReferenceIsNotOnObjectStorageV2";
  objectTypeGeotimeSeriesReferenceIsNotOnObjectStorageV2:
    ObjectTypeGeotimeSeriesReferenceIsNotOnObjectStorageV2;
}

export interface ErrorType_objectTypeInvalidTypeForDerivedProperty {
  type: "objectTypeInvalidTypeForDerivedProperty";
  objectTypeInvalidTypeForDerivedProperty:
    ObjectTypeInvalidTypeForDerivedProperty;
}

export interface ErrorType_objectTypeValueTypeAssociatedWithDerivedPropertyType {
  type: "objectTypeValueTypeAssociatedWithDerivedPropertyType";
  objectTypeValueTypeAssociatedWithDerivedPropertyType:
    ObjectTypeValueTypeAssociatedWithDerivedPropertyType;
}

export interface ErrorType_objectTypeDataConstraintAssociatedWithDerivedPropertyType {
  type: "objectTypeDataConstraintAssociatedWithDerivedPropertyType";
  objectTypeDataConstraintAssociatedWithDerivedPropertyType:
    ObjectTypeDataConstraintAssociatedWithDerivedPropertyType;
}

export interface ErrorType_objectTypeInlineActionAssociatedWithDerivedPropertyType {
  type: "objectTypeInlineActionAssociatedWithDerivedPropertyType";
  objectTypeInlineActionAssociatedWithDerivedPropertyType:
    ObjectTypeInlineActionAssociatedWithDerivedPropertyType;
}

export interface ErrorType_objectTypeReferencedPropertyDoesNotExist {
  type: "objectTypeReferencedPropertyDoesNotExist";
  objectTypeReferencedPropertyDoesNotExist:
    ObjectTypeReferencedPropertyDoesNotExist;
}

export interface ErrorType_objectTypeTimeDependentPropertyShouldNotBeSearchable {
  type: "objectTypeTimeDependentPropertyShouldNotBeSearchable";
  objectTypeTimeDependentPropertyShouldNotBeSearchable:
    ObjectTypeTimeDependentPropertyShouldNotBeSearchable;
}

export interface ErrorType_objectTypeInvalidSeriesMetadata {
  type: "objectTypeInvalidSeriesMetadata";
  objectTypeInvalidSeriesMetadata: ObjectTypeInvalidSeriesMetadata;
}

export interface ErrorType_objectTypeTimeDependentPropertyShouldNotBePrimaryKeyOrTitle {
  type: "objectTypeTimeDependentPropertyShouldNotBePrimaryKeyOrTitle";
  objectTypeTimeDependentPropertyShouldNotBePrimaryKeyOrTitle:
    ObjectTypeTimeDependentPropertyShouldNotBePrimaryKeyOrTitle;
}

export interface ErrorType_objectTypeTimeDependentPropertyMustBeReferencedByExactlyOneTimeSeriesDatasource {
  type:
    "objectTypeTimeDependentPropertyMustBeReferencedByExactlyOneTimeSeriesDatasource";
  objectTypeTimeDependentPropertyMustBeReferencedByExactlyOneTimeSeriesDatasource:
    ObjectTypeTimeDependentPropertyMustBeReferencedByExactlyOneTimeSeriesDatasource;
}

export interface ErrorType_objectTypeInvalidNonNumericInternalInterpolation {
  type: "objectTypeInvalidNonNumericInternalInterpolation";
  objectTypeInvalidNonNumericInternalInterpolation:
    ObjectTypeInvalidNonNumericInternalInterpolation;
}

export interface ErrorType_objectTypeTimeDependentPropertyShouldNotHaveRenderHints {
  type: "objectTypeTimeDependentPropertyShouldNotHaveRenderHints";
  objectTypeTimeDependentPropertyShouldNotHaveRenderHints:
    ObjectTypeTimeDependentPropertyShouldNotHaveRenderHints;
}

export interface ErrorType_objectTypeInvalidNumericInternalInterpolation {
  type: "objectTypeInvalidNumericInternalInterpolation";
  objectTypeInvalidNumericInternalInterpolation:
    ObjectTypeInvalidNumericInternalInterpolation;
}

export interface ErrorType_objectTypeTimeDependentPropertyTypeHasNoDatasources {
  type: "objectTypeTimeDependentPropertyTypeHasNoDatasources";
  objectTypeTimeDependentPropertyTypeHasNoDatasources:
    ObjectTypeTimeDependentPropertyTypeHasNoDatasources;
}

export interface ErrorType_objectTypePhonographNumberOfReplicasTypeclassMustBeOnPrimaryKey {
  type: "objectTypePhonographNumberOfReplicasTypeclassMustBeOnPrimaryKey";
  objectTypePhonographNumberOfReplicasTypeclassMustBeOnPrimaryKey:
    ObjectTypePhonographNumberOfReplicasTypeclassMustBeOnPrimaryKey;
}

export interface ErrorType_objectTypeInvalidArrayBasePropertyType {
  type: "objectTypeInvalidArrayBasePropertyType";
  objectTypeInvalidArrayBasePropertyType:
    ObjectTypeInvalidArrayBasePropertyType;
}

export interface ErrorType_objectTypeInvalidPropertyTypeApiName {
  type: "objectTypeInvalidPropertyTypeApiName";
  objectTypeInvalidPropertyTypeApiName: ObjectTypeInvalidPropertyTypeApiName;
}

export interface ErrorType_objectTypeAtMostOneOfReplacedByAndReplacedByIdCanBeSetOnPropertyTypeStatus {
  type:
    "objectTypeAtMostOneOfReplacedByAndReplacedByIdCanBeSetOnPropertyTypeStatus";
  objectTypeAtMostOneOfReplacedByAndReplacedByIdCanBeSetOnPropertyTypeStatus:
    ObjectTypeAtMostOneOfReplacedByAndReplacedByIdCanBeSetOnPropertyTypeStatus;
}

export interface ErrorType_objectTypePropertyTypeWithReplaceByIdNotFound {
  type: "objectTypePropertyTypeWithReplaceByIdNotFound";
  objectTypePropertyTypeWithReplaceByIdNotFound:
    ObjectTypePropertyTypeWithReplaceByIdNotFound;
}

export interface ErrorType_objectTypeInvalidPropertyTypeVisibility {
  type: "objectTypeInvalidPropertyTypeVisibility";
  objectTypeInvalidPropertyTypeVisibility:
    ObjectTypeInvalidPropertyTypeVisibility;
}

export interface ErrorType_objectTypeStructPropertyTypeFieldDisplayNameTooLong {
  type: "objectTypeStructPropertyTypeFieldDisplayNameTooLong";
  objectTypeStructPropertyTypeFieldDisplayNameTooLong:
    ObjectTypeStructPropertyTypeFieldDisplayNameTooLong;
}

export interface ErrorType_objectTypeStructPropertyTypeFieldsDuplicateApiNames {
  type: "objectTypeStructPropertyTypeFieldsDuplicateApiNames";
  objectTypeStructPropertyTypeFieldsDuplicateApiNames:
    ObjectTypeStructPropertyTypeFieldsDuplicateApiNames;
}

export interface ErrorType_objectTypeStructPropertyTypeIsNotOnObjectStorageV2ObjectType {
  type: "objectTypeStructPropertyTypeIsNotOnObjectStorageV2ObjectType";
  objectTypeStructPropertyTypeIsNotOnObjectStorageV2ObjectType:
    ObjectTypeStructPropertyTypeIsNotOnObjectStorageV2ObjectType;
}

export interface ErrorType_objectTypeStructPropertyTypeShouldNotHaveRenderHints {
  type: "objectTypeStructPropertyTypeShouldNotHaveRenderHints";
  objectTypeStructPropertyTypeShouldNotHaveRenderHints:
    ObjectTypeStructPropertyTypeShouldNotHaveRenderHints;
}

export interface ErrorType_objectTypeStructPropertyCannotChangeBaseTypes {
  type: "objectTypeStructPropertyCannotChangeBaseTypes";
  objectTypeStructPropertyCannotChangeBaseTypes:
    ObjectTypeStructPropertyCannotChangeBaseTypes;
}

export interface ErrorType_objectTypeStructPropertyTypeFieldTypeClassKindTooLong {
  type: "objectTypeStructPropertyTypeFieldTypeClassKindTooLong";
  objectTypeStructPropertyTypeFieldTypeClassKindTooLong:
    ObjectTypeStructPropertyTypeFieldTypeClassKindTooLong;
}

export interface ErrorType_objectTypeStructPropertyTypeFieldHasInvalidApiName {
  type: "objectTypeStructPropertyTypeFieldHasInvalidApiName";
  objectTypeStructPropertyTypeFieldHasInvalidApiName:
    ObjectTypeStructPropertyTypeFieldHasInvalidApiName;
}

export interface ErrorType_objectTypeStructPropertyTypeFieldAliasTooLong {
  type: "objectTypeStructPropertyTypeFieldAliasTooLong";
  objectTypeStructPropertyTypeFieldAliasTooLong:
    ObjectTypeStructPropertyTypeFieldAliasTooLong;
}

export interface ErrorType_objectTypeStructPropertyTypeMustHaveAtLeastOneField {
  type: "objectTypeStructPropertyTypeMustHaveAtLeastOneField";
  objectTypeStructPropertyTypeMustHaveAtLeastOneField:
    ObjectTypeStructPropertyTypeMustHaveAtLeastOneField;
}

export interface ErrorType_objectTypeStructPropertyTypeFieldHasTooManyTypeClasses {
  type: "objectTypeStructPropertyTypeFieldHasTooManyTypeClasses";
  objectTypeStructPropertyTypeFieldHasTooManyTypeClasses:
    ObjectTypeStructPropertyTypeFieldHasTooManyTypeClasses;
}

export interface ErrorType_objectTypeStructPropertyTypeFieldHasTooManyAliases {
  type: "objectTypeStructPropertyTypeFieldHasTooManyAliases";
  objectTypeStructPropertyTypeFieldHasTooManyAliases:
    ObjectTypeStructPropertyTypeFieldHasTooManyAliases;
}

export interface ErrorType_objectTypeStructPropertyTypeFieldTypeClassNameTooLong {
  type: "objectTypeStructPropertyTypeFieldTypeClassNameTooLong";
  objectTypeStructPropertyTypeFieldTypeClassNameTooLong:
    ObjectTypeStructPropertyTypeFieldTypeClassNameTooLong;
}

export interface ErrorType_objectTypeStructFieldBasePropertyTypeInvalid {
  type: "objectTypeStructFieldBasePropertyTypeInvalid";
  objectTypeStructFieldBasePropertyTypeInvalid:
    ObjectTypeStructFieldBasePropertyTypeInvalid;
}

export interface ErrorType_objectTypeStructPropertyTypeIsTitle {
  type: "objectTypeStructPropertyTypeIsTitle";
  objectTypeStructPropertyTypeIsTitle: ObjectTypeStructPropertyTypeIsTitle;
}

export interface ErrorType_objectTypeStructPropertyTypeFieldDescriptionTooLong {
  type: "objectTypeStructPropertyTypeFieldDescriptionTooLong";
  objectTypeStructPropertyTypeFieldDescriptionTooLong:
    ObjectTypeStructPropertyTypeFieldDescriptionTooLong;
}

export interface ErrorType_objectTypeStructPropertyTypeShouldNotHaveRenderHintsError {
  type: "objectTypeStructPropertyTypeShouldNotHaveRenderHintsError";
  objectTypeStructPropertyTypeShouldNotHaveRenderHintsError:
    ObjectTypeStructPropertyTypeShouldNotHaveRenderHintsError;
}

export interface ErrorType_objectTypeReferencedPropertyMustBeDifferent {
  type: "objectTypeReferencedPropertyMustBeDifferent";
  objectTypeReferencedPropertyMustBeDifferent:
    ObjectTypeReferencedPropertyMustBeDifferent;
}

export interface ErrorType_objectTypeReferencedPropertyTypeMismatch {
  type: "objectTypeReferencedPropertyTypeMismatch";
  objectTypeReferencedPropertyTypeMismatch:
    ObjectTypeReferencedPropertyTypeMismatch;
}

export interface ErrorType_objectTypeInvalidAnalyzer {
  type: "objectTypeInvalidAnalyzer";
  objectTypeInvalidAnalyzer: ObjectTypeInvalidAnalyzer;
}

export interface ErrorType_objectTypeInvalidLanguageAnalyzer {
  type: "objectTypeInvalidLanguageAnalyzer";
  objectTypeInvalidLanguageAnalyzer: ObjectTypeInvalidLanguageAnalyzer;
}

export interface ErrorType_objectTypeCannotUseAnalyzerExperimentalAndAnalyzerOverride {
  type: "objectTypeCannotUseAnalyzerExperimentalAndAnalyzerOverride";
  objectTypeCannotUseAnalyzerExperimentalAndAnalyzerOverride:
    ObjectTypeCannotUseAnalyzerExperimentalAndAnalyzerOverride;
}

export interface ErrorType_objectTypePrimaryKeyTypeForbidden {
  type: "objectTypePrimaryKeyTypeForbidden";
  objectTypePrimaryKeyTypeForbidden: ObjectTypePrimaryKeyTypeForbidden;
}

export interface ErrorType_objectTypeReferenceDeletedInlineActionTypes {
  type: "objectTypeReferenceDeletedInlineActionTypes";
  objectTypeReferenceDeletedInlineActionTypes:
    ObjectTypeReferenceDeletedInlineActionTypes;
}

export interface ErrorType_objectTypePrimaryKeyTimeDependentPropertyMustBeIndexedForSearch {
  type: "objectTypePrimaryKeyTimeDependentPropertyMustBeIndexedForSearch";
  objectTypePrimaryKeyTimeDependentPropertyMustBeIndexedForSearch:
    ObjectTypePrimaryKeyTimeDependentPropertyMustBeIndexedForSearch;
}

export interface ErrorType_objectTypePropertyTypeStatusAndObjectTypeStatusConflict {
  type: "objectTypePropertyTypeStatusAndObjectTypeStatusConflict";
  objectTypePropertyTypeStatusAndObjectTypeStatusConflict:
    ObjectTypePropertyTypeStatusAndObjectTypeStatusConflict;
}

export interface ErrorType_objectTypeBaseFormatterReferencedPropertiesDoNotExist {
  type: "objectTypeBaseFormatterReferencedPropertiesDoNotExist";
  objectTypeBaseFormatterReferencedPropertiesDoNotExist:
    ObjectTypeBaseFormatterReferencedPropertiesDoNotExist;
}

export interface ErrorType_objectTypeAttachmentPropertyShouldNotBePrimaryKeyOrTitle {
  type: "objectTypeAttachmentPropertyShouldNotBePrimaryKeyOrTitle";
  objectTypeAttachmentPropertyShouldNotBePrimaryKeyOrTitle:
    ObjectTypeAttachmentPropertyShouldNotBePrimaryKeyOrTitle;
}

export interface ErrorType_objectTypeAttachmentPropertyShouldNotBeSearchable {
  type: "objectTypeAttachmentPropertyShouldNotBeSearchable";
  objectTypeAttachmentPropertyShouldNotBeSearchable:
    ObjectTypeAttachmentPropertyShouldNotBeSearchable;
}

export interface ErrorType_objectTypeAttachmentPropertyShouldNotHaveRenderHints {
  type: "objectTypeAttachmentPropertyShouldNotHaveRenderHints";
  objectTypeAttachmentPropertyShouldNotHaveRenderHints:
    ObjectTypeAttachmentPropertyShouldNotHaveRenderHints;
}

export interface ErrorType_objectTypeInlineActionTypesCannotBeAssociatedWithObjectTypePrimaryKeys {
  type:
    "objectTypeInlineActionTypesCannotBeAssociatedWithObjectTypePrimaryKeys";
  objectTypeInlineActionTypesCannotBeAssociatedWithObjectTypePrimaryKeys:
    ObjectTypeInlineActionTypesCannotBeAssociatedWithObjectTypePrimaryKeys;
}

export interface ErrorType_objectTypeVectorPropertyIsNotOnObjectStorageV2ObjectType {
  type: "objectTypeVectorPropertyIsNotOnObjectStorageV2ObjectType";
  objectTypeVectorPropertyIsNotOnObjectStorageV2ObjectType:
    ObjectTypeVectorPropertyIsNotOnObjectStorageV2ObjectType;
}

export interface ErrorType_objectTypeVectorPropertyTypeDimensionInvalid {
  type: "objectTypeVectorPropertyTypeDimensionInvalid";
  objectTypeVectorPropertyTypeDimensionInvalid:
    ObjectTypeVectorPropertyTypeDimensionInvalid;
}

export interface ErrorType_objectTypeVectorPropertyTypeEmbeddingModelUnknown {
  type: "objectTypeVectorPropertyTypeEmbeddingModelUnknown";
  objectTypeVectorPropertyTypeEmbeddingModelUnknown:
    ObjectTypeVectorPropertyTypeEmbeddingModelUnknown;
}

export interface ErrorType_objectTypeVectorPropertySimilarityFunctionConfigurationInvalid {
  type: "objectTypeVectorPropertySimilarityFunctionConfigurationInvalid";
  objectTypeVectorPropertySimilarityFunctionConfigurationInvalid:
    ObjectTypeVectorPropertySimilarityFunctionConfigurationInvalid;
}

export interface ErrorType_objectTypeDataNullabilityV2NotEnabled {
  type: "objectTypeDataNullabilityV2NotEnabled";
  objectTypeDataNullabilityV2NotEnabled: ObjectTypeDataNullabilityV2NotEnabled;
}

export interface ErrorType_objectTypeMultipleDataNullabilitiesConfigured {
  type: "objectTypeMultipleDataNullabilitiesConfigured";
  objectTypeMultipleDataNullabilitiesConfigured:
    ObjectTypeMultipleDataNullabilitiesConfigured;
}

export interface ErrorType_objectTypeNoEmptyCollectionsDataConstraintOnlyAllowedForArrayType {
  type: "objectTypeNoEmptyCollectionsDataConstraintOnlyAllowedForArrayType";
  objectTypeNoEmptyCollectionsDataConstraintOnlyAllowedForArrayType:
    ObjectTypeNoEmptyCollectionsDataConstraintOnlyAllowedForArrayType;
}

export interface ErrorType_objectTypeMediaReferencePropertyTypeHasNoDatasources {
  type: "objectTypeMediaReferencePropertyTypeHasNoDatasources";
  objectTypeMediaReferencePropertyTypeHasNoDatasources:
    ObjectTypeMediaReferencePropertyTypeHasNoDatasources;
}

export interface ErrorType_objectTypeMediaReferencePropertyIsReferencedByMoreThanOneMediaSourceDatasource {
  type:
    "objectTypeMediaReferencePropertyIsReferencedByMoreThanOneMediaSourceDatasource";
  objectTypeMediaReferencePropertyIsReferencedByMoreThanOneMediaSourceDatasource:
    ObjectTypeMediaReferencePropertyIsReferencedByMoreThanOneMediaSourceDatasource;
}

export interface ErrorType_objectTypeMediaReferencePropertyIsReferencedByMoreThanOneMediaDatasourceType {
  type:
    "objectTypeMediaReferencePropertyIsReferencedByMoreThanOneMediaDatasourceType";
  objectTypeMediaReferencePropertyIsReferencedByMoreThanOneMediaDatasourceType:
    ObjectTypeMediaReferencePropertyIsReferencedByMoreThanOneMediaDatasourceType;
}

export interface ErrorType_objectTypeMediaReferenceIsNotOnObjectStorageV2ObjectType {
  type: "objectTypeMediaReferenceIsNotOnObjectStorageV2ObjectType";
  objectTypeMediaReferenceIsNotOnObjectStorageV2ObjectType:
    ObjectTypeMediaReferenceIsNotOnObjectStorageV2ObjectType;
}

export interface ErrorType_objectTypeMediaReferencePropertyIsTitle {
  type: "objectTypeMediaReferencePropertyIsTitle";
  objectTypeMediaReferencePropertyIsTitle:
    ObjectTypeMediaReferencePropertyIsTitle;
}

export interface ErrorType_objectTypeMediaReferencePropertyShouldNotHaveRenderHints {
  type: "objectTypeMediaReferencePropertyShouldNotHaveRenderHints";
  objectTypeMediaReferencePropertyShouldNotHaveRenderHints:
    ObjectTypeMediaReferencePropertyShouldNotHaveRenderHints;
}

export interface ErrorType_objectTypeGothamMappingAlreadyInUse {
  type: "objectTypeGothamMappingAlreadyInUse";
  objectTypeGothamMappingAlreadyInUse: ObjectTypeGothamMappingAlreadyInUse;
}

export interface ErrorType_objectTypeMissingPermissionToEnableTypeMapping {
  type: "objectTypeMissingPermissionToEnableTypeMapping";
  objectTypeMissingPermissionToEnableTypeMapping:
    ObjectTypeMissingPermissionToEnableTypeMapping;
}

export interface ErrorType_objectTypeObjectStorageV1MappedToGotham {
  type: "objectTypeObjectStorageV1MappedToGotham";
  objectTypeObjectStorageV1MappedToGotham:
    ObjectTypeObjectStorageV1MappedToGotham;
}

export interface ErrorType_objectTypeRevDbIntegrationHasNoMappedProperties {
  type: "objectTypeRevDbIntegrationHasNoMappedProperties";
  objectTypeRevDbIntegrationHasNoMappedProperties:
    ObjectTypeRevDbIntegrationHasNoMappedProperties;
}

export interface ErrorType_objectTypeContainsUnmappedSharedPropertyTypes {
  type: "objectTypeContainsUnmappedSharedPropertyTypes";
  objectTypeContainsUnmappedSharedPropertyTypes:
    ObjectTypeContainsUnmappedSharedPropertyTypes;
}

export interface ErrorType_objectTypeHasModifiedLocalPropertyGothamMapping {
  type: "objectTypeHasModifiedLocalPropertyGothamMapping";
  objectTypeHasModifiedLocalPropertyGothamMapping:
    ObjectTypeHasModifiedLocalPropertyGothamMapping;
}

export interface ErrorType_objectTypeViewRestrictedContainsGothamMapping {
  type: "objectTypeViewRestrictedContainsGothamMapping";
  objectTypeViewRestrictedContainsGothamMapping:
    ObjectTypeViewRestrictedContainsGothamMapping;
}

export interface ErrorType_objectTypeInPrivatePackageContainsGothamMapping {
  type: "objectTypeInPrivatePackageContainsGothamMapping";
  objectTypeInPrivatePackageContainsGothamMapping:
    ObjectTypeInPrivatePackageContainsGothamMapping;
}

export interface ErrorType_objectTypeHasModifiedGothamUris {
  type: "objectTypeHasModifiedGothamUris";
  objectTypeHasModifiedGothamUris: ObjectTypeHasModifiedGothamUris;
}

export interface ErrorType_objectTypeInvalidVisibility {
  type: "objectTypeInvalidVisibility";
  objectTypeInvalidVisibility: ObjectTypeInvalidVisibility;
}

export interface ErrorType_objectTypeHasNoPrimaryKey {
  type: "objectTypeHasNoPrimaryKey";
  objectTypeHasNoPrimaryKey: ObjectTypeHasNoPrimaryKey;
}

export interface ErrorType_objectTypeHasTooManyDatasources {
  type: "objectTypeHasTooManyDatasources";
  objectTypeHasTooManyDatasources: ObjectTypeHasTooManyDatasources;
}

export interface ErrorType_objectTypeCannotEditPrivilegedProvenance {
  type: "objectTypeCannotEditPrivilegedProvenance";
  objectTypeCannotEditPrivilegedProvenance:
    ObjectTypeCannotEditPrivilegedProvenance;
}

export interface ErrorType_objectTypeBothDerivedPropertyTypeAndObjectStorageV1MappedToGotham {
  type: "objectTypeBothDerivedPropertyTypeAndObjectStorageV1MappedToGotham";
  objectTypeBothDerivedPropertyTypeAndObjectStorageV1MappedToGotham:
    ObjectTypeBothDerivedPropertyTypeAndObjectStorageV1MappedToGotham;
}

export interface ErrorType_objectTypeEditsResolutionStrategyModificationOnlyAllowedForOsv2 {
  type: "objectTypeEditsResolutionStrategyModificationOnlyAllowedForOsv2";
  objectTypeEditsResolutionStrategyModificationOnlyAllowedForOsv2:
    ObjectTypeEditsResolutionStrategyModificationOnlyAllowedForOsv2;
}

export interface ErrorType_objectTypeInvalidRevertOsv1ToOsv2Migration {
  type: "objectTypeInvalidRevertOsv1ToOsv2Migration";
  objectTypeInvalidRevertOsv1ToOsv2Migration:
    ObjectTypeInvalidRevertOsv1ToOsv2Migration;
}

export interface ErrorType_objectTypeEditsResolutionStrategyModificationTimestampPropertyNotInDatasource {
  type:
    "objectTypeEditsResolutionStrategyModificationTimestampPropertyNotInDatasource";
  objectTypeEditsResolutionStrategyModificationTimestampPropertyNotInDatasource:
    ObjectTypeEditsResolutionStrategyModificationTimestampPropertyNotInDatasource;
}

export interface ErrorType_objectTypeReadOnlyOsv2WithPatchesEnabled {
  type: "objectTypeReadOnlyOsv2WithPatchesEnabled";
  objectTypeReadOnlyOsv2WithPatchesEnabled:
    ObjectTypeReadOnlyOsv2WithPatchesEnabled;
}

export interface ErrorType_objectTypeOsv1WithOsv2ObjectDbsEnabled {
  type: "objectTypeOsv1WithOsv2ObjectDbsEnabled";
  objectTypeOsv1WithOsv2ObjectDbsEnabled:
    ObjectTypeOsv1WithOsv2ObjectDbsEnabled;
}

export interface ErrorType_objectTypeEnablingEditsHistoryNotSupported {
  type: "objectTypeEnablingEditsHistoryNotSupported";
  objectTypeEnablingEditsHistoryNotSupported:
    ObjectTypeEnablingEditsHistoryNotSupported;
}

export interface ErrorType_objectTypeStreamDatasourceSupportedOnlyWithObjectStorageV2 {
  type: "objectTypeStreamDatasourceSupportedOnlyWithObjectStorageV2";
  objectTypeStreamDatasourceSupportedOnlyWithObjectStorageV2:
    ObjectTypeStreamDatasourceSupportedOnlyWithObjectStorageV2;
}

export interface ErrorType_objectTypeOsv1CannotCreate {
  type: "objectTypeOsv1CannotCreate";
  objectTypeOsv1CannotCreate: ObjectTypeOsv1CannotCreate;
}

export interface ErrorType_objectTypeReadOnlyV1V2NotAllowed {
  type: "objectTypeReadOnlyV1V2NotAllowed";
  objectTypeReadOnlyV1V2NotAllowed: ObjectTypeReadOnlyV1V2NotAllowed;
}

export interface ErrorType_objectTypeRestrictedViewDatasourceV2SupportedOnlyWithObjectStorageV2 {
  type: "objectTypeRestrictedViewDatasourceV2SupportedOnlyWithObjectStorageV2";
  objectTypeRestrictedViewDatasourceV2SupportedOnlyWithObjectStorageV2:
    ObjectTypeRestrictedViewDatasourceV2SupportedOnlyWithObjectStorageV2;
}

export interface ErrorType_objectTypeOsv2WithMultipleClustersEnabled {
  type: "objectTypeOsv2WithMultipleClustersEnabled";
  objectTypeOsv2WithMultipleClustersEnabled:
    ObjectTypeOsv2WithMultipleClustersEnabled;
}

export interface ErrorType_objectTypeEntityMetadataModifyRequestWithInvalidObjectDbType {
  type: "objectTypeEntityMetadataModifyRequestWithInvalidObjectDbType";
  objectTypeEntityMetadataModifyRequestWithInvalidObjectDbType:
    ObjectTypeEntityMetadataModifyRequestWithInvalidObjectDbType;
}

export interface ErrorType_objectTypeDatasetDatasourceV2SupportedOnlyWithObjectStorageV2 {
  type: "objectTypeDatasetDatasourceV2SupportedOnlyWithObjectStorageV2";
  objectTypeDatasetDatasourceV2SupportedOnlyWithObjectStorageV2:
    ObjectTypeDatasetDatasourceV2SupportedOnlyWithObjectStorageV2;
}

export interface ErrorType_objectTypeEntityMetadataModifyRequestWithInvalidObjectDbRid {
  type: "objectTypeEntityMetadataModifyRequestWithInvalidObjectDbRid";
  objectTypeEntityMetadataModifyRequestWithInvalidObjectDbRid:
    ObjectTypeEntityMetadataModifyRequestWithInvalidObjectDbRid;
}

export interface ErrorType_objectTypeEditabilityChangeDuringV1ToV2Migration {
  type: "objectTypeEditabilityChangeDuringV1ToV2Migration";
  objectTypeEditabilityChangeDuringV1ToV2Migration:
    ObjectTypeEditabilityChangeDuringV1ToV2Migration;
}

export interface ErrorType_objectTypeEditsResolutionStrategyModificationTimestampPropertyNotFound {
  type:
    "objectTypeEditsResolutionStrategyModificationTimestampPropertyNotFound";
  objectTypeEditsResolutionStrategyModificationTimestampPropertyNotFound:
    ObjectTypeEditsResolutionStrategyModificationTimestampPropertyNotFound;
}

export interface ErrorType_objectTypeStreamDatasourceWithPatchesEnabled {
  type: "objectTypeStreamDatasourceWithPatchesEnabled";
  objectTypeStreamDatasourceWithPatchesEnabled:
    ObjectTypeStreamDatasourceWithPatchesEnabled;
}

export interface ErrorType_objectTypeEntityMetadataModifyRequestWithInvalidObjectDbConfigValue {
  type: "objectTypeEntityMetadataModifyRequestWithInvalidObjectDbConfigValue";
  objectTypeEntityMetadataModifyRequestWithInvalidObjectDbConfigValue:
    ObjectTypeEntityMetadataModifyRequestWithInvalidObjectDbConfigValue;
}

export interface ErrorType_objectTypeToDeleteIsReferencedByExistingInterfaceLinkTypes {
  type: "objectTypeToDeleteIsReferencedByExistingInterfaceLinkTypes";
  objectTypeToDeleteIsReferencedByExistingInterfaceLinkTypes:
    ObjectTypeToDeleteIsReferencedByExistingInterfaceLinkTypes;
}

export interface ErrorType_objectTypeImplementsTooManyInterfaces {
  type: "objectTypeImplementsTooManyInterfaces";
  objectTypeImplementsTooManyInterfaces: ObjectTypeImplementsTooManyInterfaces;
}

export interface ErrorType_objectTypeInterfaceImplementationInvalidIsIndexedForSearch {
  type: "objectTypeInterfaceImplementationInvalidIsIndexedForSearch";
  objectTypeInterfaceImplementationInvalidIsIndexedForSearch:
    ObjectTypeInterfaceImplementationInvalidIsIndexedForSearch;
}

export interface ErrorType_objectTypeInterfaceImplementationInvalidDataConstraints {
  type: "objectTypeInterfaceImplementationInvalidDataConstraints";
  objectTypeInterfaceImplementationInvalidDataConstraints:
    ObjectTypeInterfaceImplementationInvalidDataConstraints;
}

export interface ErrorType_objectTypeInterfaceImplementationConflictingPropertyImplementation {
  type: "objectTypeInterfaceImplementationConflictingPropertyImplementation";
  objectTypeInterfaceImplementationConflictingPropertyImplementation:
    ObjectTypeInterfaceImplementationConflictingPropertyImplementation;
}

export interface ErrorType_objectTypeInterfaceImplementationPropertyHasDifferentType {
  type: "objectTypeInterfaceImplementationPropertyHasDifferentType";
  objectTypeInterfaceImplementationPropertyHasDifferentType:
    ObjectTypeInterfaceImplementationPropertyHasDifferentType;
}

export interface ErrorType_objectTypeInterfaceImplementationPropertyNotFound {
  type: "objectTypeInterfaceImplementationPropertyNotFound";
  objectTypeInterfaceImplementationPropertyNotFound:
    ObjectTypeInterfaceImplementationPropertyNotFound;
}

export interface ErrorType_objectTypeInterfaceImplementationPropertyTypesHaveConflictingApiNames {
  type: "objectTypeInterfaceImplementationPropertyTypesHaveConflictingApiNames";
  objectTypeInterfaceImplementationPropertyTypesHaveConflictingApiNames:
    ObjectTypeInterfaceImplementationPropertyTypesHaveConflictingApiNames;
}

export interface ErrorType_objectTypeInterfaceImplementationTypeClassesDoNotMatch {
  type: "objectTypeInterfaceImplementationTypeClassesDoNotMatch";
  objectTypeInterfaceImplementationTypeClassesDoNotMatch:
    ObjectTypeInterfaceImplementationTypeClassesDoNotMatch;
}

export interface ErrorType_objectTypeInterfaceImplementationValueTypeDoesNotMatch {
  type: "objectTypeInterfaceImplementationValueTypeDoesNotMatch";
  objectTypeInterfaceImplementationValueTypeDoesNotMatch:
    ObjectTypeInterfaceImplementationValueTypeDoesNotMatch;
}

export interface ErrorType_objectTypeInterfaceImplementationImplementsPropertyThatDoesNotExist {
  type: "objectTypeInterfaceImplementationImplementsPropertyThatDoesNotExist";
  objectTypeInterfaceImplementationImplementsPropertyThatDoesNotExist:
    ObjectTypeInterfaceImplementationImplementsPropertyThatDoesNotExist;
}

export interface ErrorType_objectTypeInterfaceImplementationDoesNotImplementAllProperties {
  type: "objectTypeInterfaceImplementationDoesNotImplementAllProperties";
  objectTypeInterfaceImplementationDoesNotImplementAllProperties:
    ObjectTypeInterfaceImplementationDoesNotImplementAllProperties;
}

export interface ErrorType_objectTypeInterfaceImplementationInvalidLinkedEntityImplementingLinkType {
  type:
    "objectTypeInterfaceImplementationInvalidLinkedEntityImplementingLinkType";
  objectTypeInterfaceImplementationInvalidLinkedEntityImplementingLinkType:
    ObjectTypeInterfaceImplementationInvalidLinkedEntityImplementingLinkType;
}

export interface ErrorType_objectTypeInterfaceImplementationLinkTypeImplementedMoreThanOnce {
  type: "objectTypeInterfaceImplementationLinkTypeImplementedMoreThanOnce";
  objectTypeInterfaceImplementationLinkTypeImplementedMoreThanOnce:
    ObjectTypeInterfaceImplementationLinkTypeImplementedMoreThanOnce;
}

export interface ErrorType_objectTypePropertyImplementationImplicitAndExplicit {
  type: "objectTypePropertyImplementationImplicitAndExplicit";
  objectTypePropertyImplementationImplicitAndExplicit:
    ObjectTypePropertyImplementationImplicitAndExplicit;
}

export interface ErrorType_objectTypeInterfaceLinkNotFound {
  type: "objectTypeInterfaceLinkNotFound";
  objectTypeInterfaceLinkNotFound: ObjectTypeInterfaceLinkNotFound;
}

export interface ErrorType_objectTypeInterfaceLinkTypeImplementedTooOften {
  type: "objectTypeInterfaceLinkTypeImplementedTooOften";
  objectTypeInterfaceLinkTypeImplementedTooOften:
    ObjectTypeInterfaceLinkTypeImplementedTooOften;
}

export interface ErrorType_objectTypeRequiredInterfaceLinkTypeNotImplemented {
  type: "objectTypeRequiredInterfaceLinkTypeNotImplemented";
  objectTypeRequiredInterfaceLinkTypeNotImplemented:
    ObjectTypeRequiredInterfaceLinkTypeNotImplemented;
}

export interface ErrorType_objectTypeCountExceeded {
  type: "objectTypeCountExceeded";
  objectTypeCountExceeded: ObjectTypeCountExceeded;
}

export interface ErrorType_objectTypeTooManyPropertiesAndStructFields {
  type: "objectTypeTooManyPropertiesAndStructFields";
  objectTypeTooManyPropertiesAndStructFields:
    ObjectTypeTooManyPropertiesAndStructFields;
}

export interface ErrorType_objectTypeStreamDatasourceTooManyPropertiesAndStructFields {
  type: "objectTypeStreamDatasourceTooManyPropertiesAndStructFields";
  objectTypeStreamDatasourceTooManyPropertiesAndStructFields:
    ObjectTypeStreamDatasourceTooManyPropertiesAndStructFields;
}

export interface ErrorType_objectTypeDisplayNameTooLong {
  type: "objectTypeDisplayNameTooLong";
  objectTypeDisplayNameTooLong: ObjectTypeDisplayNameTooLong;
}

export interface ErrorType_objectTypeDescriptionTooLong {
  type: "objectTypeDescriptionTooLong";
  objectTypeDescriptionTooLong: ObjectTypeDescriptionTooLong;
}

export interface ErrorType_objectTypePropertyTypeDisplayNameTooLong {
  type: "objectTypePropertyTypeDisplayNameTooLong";
  objectTypePropertyTypeDisplayNameTooLong:
    ObjectTypePropertyTypeDisplayNameTooLong;
}

export interface ErrorType_objectTypePropertyTypeDescriptionTooLong {
  type: "objectTypePropertyTypeDescriptionTooLong";
  objectTypePropertyTypeDescriptionTooLong:
    ObjectTypePropertyTypeDescriptionTooLong;
}

export interface ErrorType_objectTypeTooManyTypeClasses {
  type: "objectTypeTooManyTypeClasses";
  objectTypeTooManyTypeClasses: ObjectTypeTooManyTypeClasses;
}

export interface ErrorType_objectTypeTypeClassKindTooLong {
  type: "objectTypeTypeClassKindTooLong";
  objectTypeTypeClassKindTooLong: ObjectTypeTypeClassKindTooLong;
}

export interface ErrorType_objectTypeTypeClassValueTooLong {
  type: "objectTypeTypeClassValueTooLong";
  objectTypeTypeClassValueTooLong: ObjectTypeTypeClassValueTooLong;
}

export interface ErrorType_objectTypeAliasTooLong {
  type: "objectTypeAliasTooLong";
  objectTypeAliasTooLong: ObjectTypeAliasTooLong;
}

export interface ErrorType_objectTypeInvalidApiNamePrefixes {
  type: "objectTypeInvalidApiNamePrefixes";
  objectTypeInvalidApiNamePrefixes: ObjectTypeInvalidApiNamePrefixes;
}

export interface ErrorType_objectTypeInvalidIconColor {
  type: "objectTypeInvalidIconColor";
  objectTypeInvalidIconColor: ObjectTypeInvalidIconColor;
}

export interface ErrorType_objectTypeInvalidIconType {
  type: "objectTypeInvalidIconType";
  objectTypeInvalidIconType: ObjectTypeInvalidIconType;
}

export interface ErrorType_objectTypeInvalidCardinalityImplementingInterfaceLinkType {
  type: "objectTypeInvalidCardinalityImplementingInterfaceLinkType";
  objectTypeInvalidCardinalityImplementingInterfaceLinkType:
    ObjectTypeInvalidCardinalityImplementingInterfaceLinkType;
}

export interface ErrorType_objectTypeMarkingPropertyTypesOnlyAllowedOnOsv2 {
  type: "objectTypeMarkingPropertyTypesOnlyAllowedOnOsv2";
  objectTypeMarkingPropertyTypesOnlyAllowedOnOsv2:
    ObjectTypeMarkingPropertyTypesOnlyAllowedOnOsv2;
}

export interface ErrorType_objectTypeInvalidMarkingPropertyType {
  type: "objectTypeInvalidMarkingPropertyType";
  objectTypeInvalidMarkingPropertyType: ObjectTypeInvalidMarkingPropertyType;
}

export interface ErrorType_objectTypeMarkingPropertyTypesMustBeNonNullable {
  type: "objectTypeMarkingPropertyTypesMustBeNonNullable";
  objectTypeMarkingPropertyTypesMustBeNonNullable:
    ObjectTypeMarkingPropertyTypesMustBeNonNullable;
}

export interface ErrorType_objectTypeCbacMarkingPropertyTypeMustBeNonEmpty {
  type: "objectTypeCbacMarkingPropertyTypeMustBeNonEmpty";
  objectTypeCbacMarkingPropertyTypeMustBeNonEmpty:
    ObjectTypeCbacMarkingPropertyTypeMustBeNonEmpty;
}

export interface ErrorType_objectTypeWithDerivedPropertiesMappedToGotham {
  type: "objectTypeWithDerivedPropertiesMappedToGotham";
  objectTypeWithDerivedPropertiesMappedToGotham:
    ObjectTypeWithDerivedPropertiesMappedToGotham;
}

export interface ErrorType_ruleSetBindingReferencingMissingPropertyTypeIds {
  type: "ruleSetBindingReferencingMissingPropertyTypeIds";
  ruleSetBindingReferencingMissingPropertyTypeIds:
    RuleSetBindingReferencingMissingPropertyTypeIds;
}

export interface ErrorType_ruleSetCountExceeded {
  type: "ruleSetCountExceeded";
  ruleSetCountExceeded: RuleSetCountExceeded;
}

export interface ErrorType_ruleSetNameTooLong {
  type: "ruleSetNameTooLong";
  ruleSetNameTooLong: RuleSetNameTooLong;
}

export interface ErrorType_ruleSetDescriptionTooLong {
  type: "ruleSetDescriptionTooLong";
  ruleSetDescriptionTooLong: RuleSetDescriptionTooLong;
}

export interface ErrorType_ruleSetNamedTypeNameTooLong {
  type: "ruleSetNamedTypeNameTooLong";
  ruleSetNamedTypeNameTooLong: RuleSetNamedTypeNameTooLong;
}

export interface ErrorType_workflowObjectTypeTraitPropertyTypeMismatch {
  type: "workflowObjectTypeTraitPropertyTypeMismatch";
  workflowObjectTypeTraitPropertyTypeMismatch:
    WorkflowObjectTypeTraitPropertyTypeMismatch;
}

export interface ErrorType_workflowReferencedLinkTypeDeleted {
  type: "workflowReferencedLinkTypeDeleted";
  workflowReferencedLinkTypeDeleted: WorkflowReferencedLinkTypeDeleted;
}

export interface ErrorType_workflowPropertiesAssociatedMissing {
  type: "workflowPropertiesAssociatedMissing";
  workflowPropertiesAssociatedMissing: WorkflowPropertiesAssociatedMissing;
}

export interface ErrorType_workflowReferencedLinkTypeNotFound {
  type: "workflowReferencedLinkTypeNotFound";
  workflowReferencedLinkTypeNotFound: WorkflowReferencedLinkTypeNotFound;
}

export interface ErrorType_workflowReferencedObjectTypeDeleted {
  type: "workflowReferencedObjectTypeDeleted";
  workflowReferencedObjectTypeDeleted: WorkflowReferencedObjectTypeDeleted;
}

export interface ErrorType_workflowReferencedObjectTypesNotFound {
  type: "workflowReferencedObjectTypesNotFound";
  workflowReferencedObjectTypesNotFound: WorkflowReferencedObjectTypesNotFound;
}

export interface ErrorType_workflowCountExceeded {
  type: "workflowCountExceeded";
  workflowCountExceeded: WorkflowCountExceeded;
}

export interface ErrorType_workflowDisplayNameTooLong {
  type: "workflowDisplayNameTooLong";
  workflowDisplayNameTooLong: WorkflowDisplayNameTooLong;
}

export interface ErrorType_workflowDescriptionTooLong {
  type: "workflowDescriptionTooLong";
  workflowDescriptionTooLong: WorkflowDescriptionTooLong;
}

export interface ErrorType_workflowArchetypeIdTooLong {
  type: "workflowArchetypeIdTooLong";
  workflowArchetypeIdTooLong: WorkflowArchetypeIdTooLong;
}

export interface ErrorType_workflowArchetypeVersionTooLong {
  type: "workflowArchetypeVersionTooLong";
  workflowArchetypeVersionTooLong: WorkflowArchetypeVersionTooLong;
}

export interface ErrorType_sharedPropertyTypeInvalidApiName {
  type: "sharedPropertyTypeInvalidApiName";
  sharedPropertyTypeInvalidApiName: SharedPropertyTypeInvalidApiName;
}

export interface ErrorType_sharedPropertyTypeFormatterCannotReferenceOtherPropertyType {
  type: "sharedPropertyTypeFormatterCannotReferenceOtherPropertyType";
  sharedPropertyTypeFormatterCannotReferenceOtherPropertyType:
    SharedPropertyTypeFormatterCannotReferenceOtherPropertyType;
}

export interface ErrorType_sharedPropertyTypeReferencesMissingValueType {
  type: "sharedPropertyTypeReferencesMissingValueType";
  sharedPropertyTypeReferencesMissingValueType:
    SharedPropertyTypeReferencesMissingValueType;
}

export interface ErrorType_sharedPropertyTypeStructPropertyCannotChangeBaseTypes {
  type: "sharedPropertyTypeStructPropertyCannotChangeBaseTypes";
  sharedPropertyTypeStructPropertyCannotChangeBaseTypes:
    SharedPropertyTypeStructPropertyCannotChangeBaseTypes;
}

export interface ErrorType_sharedPropertyTypesToModifyAreImported {
  type: "sharedPropertyTypesToModifyAreImported";
  sharedPropertyTypesToModifyAreImported:
    SharedPropertyTypesToModifyAreImported;
}

export interface ErrorType_sharedPropertyTypeInvalidVisibility {
  type: "sharedPropertyTypeInvalidVisibility";
  sharedPropertyTypeInvalidVisibility: SharedPropertyTypeInvalidVisibility;
}

export interface ErrorType_sharedPropertyTypeGothamMappingAlreadyInUse {
  type: "sharedPropertyTypeGothamMappingAlreadyInUse";
  sharedPropertyTypeGothamMappingAlreadyInUse:
    SharedPropertyTypeGothamMappingAlreadyInUse;
}

export interface ErrorType_sharedPropertyTypeHasModifiedGothamUris {
  type: "sharedPropertyTypeHasModifiedGothamUris";
  sharedPropertyTypeHasModifiedGothamUris:
    SharedPropertyTypeHasModifiedGothamUris;
}

export interface ErrorType_sharedPropertyTypeValueTypeUsageMissingStructField {
  type: "sharedPropertyTypeValueTypeUsageMissingStructField";
  sharedPropertyTypeValueTypeUsageMissingStructField:
    SharedPropertyTypeValueTypeUsageMissingStructField;
}

export interface ErrorType_sharedPropertyTypeValueTypeUsageMismatchStructField {
  type: "sharedPropertyTypeValueTypeUsageMismatchStructField";
  sharedPropertyTypeValueTypeUsageMismatchStructField:
    SharedPropertyTypeValueTypeUsageMismatchStructField;
}

export interface ErrorType_sharedPropertyTypeGeotimeSeriesReferencePropertyShouldNotHaveRenderHints {
  type:
    "sharedPropertyTypeGeotimeSeriesReferencePropertyShouldNotHaveRenderHints";
  sharedPropertyTypeGeotimeSeriesReferencePropertyShouldNotHaveRenderHints:
    SharedPropertyTypeGeotimeSeriesReferencePropertyShouldNotHaveRenderHints;
}

export interface ErrorType_sharedPropertyTypeValueTypeUsageMismatchScaleOrPrecision {
  type: "sharedPropertyTypeValueTypeUsageMismatchScaleOrPrecision";
  sharedPropertyTypeValueTypeUsageMismatchScaleOrPrecision:
    SharedPropertyTypeValueTypeUsageMismatchScaleOrPrecision;
}

export interface ErrorType_sharedPropertyTypeValueTypeUsageMismatch {
  type: "sharedPropertyTypeValueTypeUsageMismatch";
  sharedPropertyTypeValueTypeUsageMismatch:
    SharedPropertyTypeValueTypeUsageMismatch;
}

export interface ErrorType_sharedPropertyTypeAttachmentPropertyShouldNotHaveRenderHints {
  type: "sharedPropertyTypeAttachmentPropertyShouldNotHaveRenderHints";
  sharedPropertyTypeAttachmentPropertyShouldNotHaveRenderHints:
    SharedPropertyTypeAttachmentPropertyShouldNotHaveRenderHints;
}

export interface ErrorType_sharedPropertyTypeAttachmentPropertyShouldNotBeSearchable {
  type: "sharedPropertyTypeAttachmentPropertyShouldNotBeSearchable";
  sharedPropertyTypeAttachmentPropertyShouldNotBeSearchable:
    SharedPropertyTypeAttachmentPropertyShouldNotBeSearchable;
}

export interface ErrorType_sharedPropertyTypeToDeleteIsReferencedByExistingTypes {
  type: "sharedPropertyTypeToDeleteIsReferencedByExistingTypes";
  sharedPropertyTypeToDeleteIsReferencedByExistingTypes:
    SharedPropertyTypeToDeleteIsReferencedByExistingTypes;
}

export interface ErrorType_sharedPropertyTypeMediaReferencePropertyShouldNotHaveRenderHints {
  type: "sharedPropertyTypeMediaReferencePropertyShouldNotHaveRenderHints";
  sharedPropertyTypeMediaReferencePropertyShouldNotHaveRenderHints:
    SharedPropertyTypeMediaReferencePropertyShouldNotHaveRenderHints;
}

export interface ErrorType_sharedPropertyTypeCountExceeded {
  type: "sharedPropertyTypeCountExceeded";
  sharedPropertyTypeCountExceeded: SharedPropertyTypeCountExceeded;
}

export interface ErrorType_sharedPropertyTypeDisplayNameTooLong {
  type: "sharedPropertyTypeDisplayNameTooLong";
  sharedPropertyTypeDisplayNameTooLong: SharedPropertyTypeDisplayNameTooLong;
}

export interface ErrorType_sharedPropertyTypeDescriptionTooLong {
  type: "sharedPropertyTypeDescriptionTooLong";
  sharedPropertyTypeDescriptionTooLong: SharedPropertyTypeDescriptionTooLong;
}

export interface ErrorType_sharedPropertyTypeTooManyTypeClasses {
  type: "sharedPropertyTypeTooManyTypeClasses";
  sharedPropertyTypeTooManyTypeClasses: SharedPropertyTypeTooManyTypeClasses;
}

export interface ErrorType_sharedPropertyTypeTypeClassKindTooLong {
  type: "sharedPropertyTypeTypeClassKindTooLong";
  sharedPropertyTypeTypeClassKindTooLong:
    SharedPropertyTypeTypeClassKindTooLong;
}

export interface ErrorType_sharedPropertyTypeTypeClassValueTooLong {
  type: "sharedPropertyTypeTypeClassValueTooLong";
  sharedPropertyTypeTypeClassValueTooLong:
    SharedPropertyTypeTypeClassValueTooLong;
}

export interface ErrorType_sharedPropertyTypeAliasTooLong {
  type: "sharedPropertyTypeAliasTooLong";
  sharedPropertyTypeAliasTooLong: SharedPropertyTypeAliasTooLong;
}

export interface ErrorType_sharedPropertyTypeTooManyAliases {
  type: "sharedPropertyTypeTooManyAliases";
  sharedPropertyTypeTooManyAliases: SharedPropertyTypeTooManyAliases;
}

export interface ErrorType_sharedPropertyTypeInvalidMarking {
  type: "sharedPropertyTypeInvalidMarking";
  sharedPropertyTypeInvalidMarking: SharedPropertyTypeInvalidMarking;
}

export interface ErrorType_sharedPropertyTypesMarkingMustBeNonNullable {
  type: "sharedPropertyTypesMarkingMustBeNonNullable";
  sharedPropertyTypesMarkingMustBeNonNullable:
    SharedPropertyTypesMarkingMustBeNonNullable;
}

export interface ErrorType_sharedPropertyTypeCbacMarkingMustBeNonEmpty {
  type: "sharedPropertyTypeCbacMarkingMustBeNonEmpty";
  sharedPropertyTypeCbacMarkingMustBeNonEmpty:
    SharedPropertyTypeCbacMarkingMustBeNonEmpty;
}

export interface ErrorType_sharedPropertyTypeInvalidApiNamePrefixes {
  type: "sharedPropertyTypeInvalidApiNamePrefixes";
  sharedPropertyTypeInvalidApiNamePrefixes:
    SharedPropertyTypeInvalidApiNamePrefixes;
}

export interface ErrorType_sharedPropertyTypeBacksMultipleProperties {
  type: "sharedPropertyTypeBacksMultipleProperties";
  sharedPropertyTypeBacksMultipleProperties:
    SharedPropertyTypeBacksMultipleProperties;
}

export interface ErrorType_actionTypeHasRevertsEnabledButEmptyEnabledForConfiguration {
  type: "actionTypeHasRevertsEnabledButEmptyEnabledForConfiguration";
  actionTypeHasRevertsEnabledButEmptyEnabledForConfiguration:
    ActionTypeHasRevertsEnabledButEmptyEnabledForConfiguration;
}

export interface ErrorType_actionTypeMissingRevertDuration {
  type: "actionTypeMissingRevertDuration";
  actionTypeMissingRevertDuration: ActionTypeMissingRevertDuration;
}

export interface ErrorType_actionTypeInvalidRevertDuration {
  type: "actionTypeInvalidRevertDuration";
  actionTypeInvalidRevertDuration: ActionTypeInvalidRevertDuration;
}

export interface ErrorType_actionTypeFormContentOrderingNotExactlySameAsSectionSet {
  type: "actionTypeFormContentOrderingNotExactlySameAsSectionSet";
  actionTypeFormContentOrderingNotExactlySameAsSectionSet:
    ActionTypeFormContentOrderingNotExactlySameAsSectionSet;
}

export interface ErrorType_actionTypeParametersInFormContentOrderingDontMatchParameterOrdering {
  type: "actionTypeParametersInFormContentOrderingDontMatchParameterOrdering";
  actionTypeParametersInFormContentOrderingDontMatchParameterOrdering:
    ActionTypeParametersInFormContentOrderingDontMatchParameterOrdering;
}

export interface ErrorType_actionTypeFormContentOrderingContainsDuplicates {
  type: "actionTypeFormContentOrderingContainsDuplicates";
  actionTypeFormContentOrderingContainsDuplicates:
    ActionTypeFormContentOrderingContainsDuplicates;
}

export interface ErrorType_actionTypeFormContentOrderingNotExactlySameAsParameterSet {
  type: "actionTypeFormContentOrderingNotExactlySameAsParameterSet";
  actionTypeFormContentOrderingNotExactlySameAsParameterSet:
    ActionTypeFormContentOrderingNotExactlySameAsParameterSet;
}

export interface ErrorType_actionTypeLinkRuleDoesNotReferenceManyToManyLinkType {
  type: "actionTypeLinkRuleDoesNotReferenceManyToManyLinkType";
  actionTypeLinkRuleDoesNotReferenceManyToManyLinkType:
    ActionTypeLinkRuleDoesNotReferenceManyToManyLinkType;
}

export interface ErrorType_actionTypePrimaryKeyInAddObjectRuleDoesNotUseValidLogicRuleValue {
  type: "actionTypePrimaryKeyInAddObjectRuleDoesNotUseValidLogicRuleValue";
  actionTypePrimaryKeyInAddObjectRuleDoesNotUseValidLogicRuleValue:
    ActionTypePrimaryKeyInAddObjectRuleDoesNotUseValidLogicRuleValue;
}

export interface ErrorType_actionTypeApiNameMissing {
  type: "actionTypeApiNameMissing";
  actionTypeApiNameMissing: ActionTypeApiNameMissing;
}

export interface ErrorType_actionTypeDoesNotHaveActionTypeLevelValidation {
  type: "actionTypeDoesNotHaveActionTypeLevelValidation";
  actionTypeDoesNotHaveActionTypeLevelValidation:
    ActionTypeDoesNotHaveActionTypeLevelValidation;
}

export interface ErrorType_actionTypeStructParametersNotAllowedInPropertyTypeLogicRuleValueMappings {
  type:
    "actionTypeStructParametersNotAllowedInPropertyTypeLogicRuleValueMappings";
  actionTypeStructParametersNotAllowedInPropertyTypeLogicRuleValueMappings:
    ActionTypeStructParametersNotAllowedInPropertyTypeLogicRuleValueMappings;
}

export interface ErrorType_actionTypeUserValidationFiltersExceedMaximum {
  type: "actionTypeUserValidationFiltersExceedMaximum";
  actionTypeUserValidationFiltersExceedMaximum:
    ActionTypeUserValidationFiltersExceedMaximum;
}

export interface ErrorType_actionTypeCannotFindObjectTypes {
  type: "actionTypeCannotFindObjectTypes";
  actionTypeCannotFindObjectTypes: ActionTypeCannotFindObjectTypes;
}

export interface ErrorType_actionTypeCannotUpdateLegacyMediaPropertyWithLogicRuleValueFromAction {
  type: "actionTypeCannotUpdateLegacyMediaPropertyWithLogicRuleValueFromAction";
  actionTypeCannotUpdateLegacyMediaPropertyWithLogicRuleValueFromAction:
    ActionTypeCannotUpdateLegacyMediaPropertyWithLogicRuleValueFromAction;
}

export interface ErrorType_actionTypeStructPropertyFieldMappingHasIncompatibleCardinality {
  type: "actionTypeStructPropertyFieldMappingHasIncompatibleCardinality";
  actionTypeStructPropertyFieldMappingHasIncompatibleCardinality:
    ActionTypeStructPropertyFieldMappingHasIncompatibleCardinality;
}

export interface ErrorType_actionTypeStructPropertyFieldMappingHasInconsistentCardinality {
  type: "actionTypeStructPropertyFieldMappingHasInconsistentCardinality";
  actionTypeStructPropertyFieldMappingHasInconsistentCardinality:
    ActionTypeStructPropertyFieldMappingHasInconsistentCardinality;
}

export interface ErrorType_actionTypeTypeclassUsageNotAllowed {
  type: "actionTypeTypeclassUsageNotAllowed";
  actionTypeTypeclassUsageNotAllowed: ActionTypeTypeclassUsageNotAllowed;
}

export interface ErrorType_actionTypeParameterOrderingNotExactlySameAsParameterSet {
  type: "actionTypeParameterOrderingNotExactlySameAsParameterSet";
  actionTypeParameterOrderingNotExactlySameAsParameterSet:
    ActionTypeParameterOrderingNotExactlySameAsParameterSet;
}

export interface ErrorType_actionTypeParameterOrderingContainsDuplicates {
  type: "actionTypeParameterOrderingContainsDuplicates";
  actionTypeParameterOrderingContainsDuplicates:
    ActionTypeParameterOrderingContainsDuplicates;
}

export interface ErrorType_actionTypeCannotPerformOperationWithRedactedValue {
  type: "actionTypeCannotPerformOperationWithRedactedValue";
  actionTypeCannotPerformOperationWithRedactedValue:
    ActionTypeCannotPerformOperationWithRedactedValue;
}

export interface ErrorType_actionTypeStructPropertyFieldMappedToIncompatibleBaseType {
  type: "actionTypeStructPropertyFieldMappedToIncompatibleBaseType";
  actionTypeStructPropertyFieldMappedToIncompatibleBaseType:
    ActionTypeStructPropertyFieldMappedToIncompatibleBaseType;
}

export interface ErrorType_actionTypeActionLogObjectsCannotBeEdited {
  type: "actionTypeActionLogObjectsCannotBeEdited";
  actionTypeActionLogObjectsCannotBeEdited:
    ActionTypeActionLogObjectsCannotBeEdited;
}

export interface ErrorType_actionTypeNonExistentParametersUsedInLogic {
  type: "actionTypeNonExistentParametersUsedInLogic";
  actionTypeNonExistentParametersUsedInLogic:
    ActionTypeNonExistentParametersUsedInLogic;
}

export interface ErrorType_actionTypeObjectMissingPrimaryKey {
  type: "actionTypeObjectMissingPrimaryKey";
  actionTypeObjectMissingPrimaryKey: ActionTypeObjectMissingPrimaryKey;
}

export interface ErrorType_actionTypeEditingNonEditablePropertyType {
  type: "actionTypeEditingNonEditablePropertyType";
  actionTypeEditingNonEditablePropertyType:
    ActionTypeEditingNonEditablePropertyType;
}

export interface ErrorType_actionTypeObjectSetRidsNotAllowedInConditionValues {
  type: "actionTypeObjectSetRidsNotAllowedInConditionValues";
  actionTypeObjectSetRidsNotAllowedInConditionValues:
    ActionTypeObjectSetRidsNotAllowedInConditionValues;
}

export interface ErrorType_actionTypeApiNameInvalidFormat {
  type: "actionTypeApiNameInvalidFormat";
  actionTypeApiNameInvalidFormat: ActionTypeApiNameInvalidFormat;
}

export interface ErrorType_actionTypePropertyTypeDoesNotMatchMappedLogicRuleValue {
  type: "actionTypePropertyTypeDoesNotMatchMappedLogicRuleValue";
  actionTypePropertyTypeDoesNotMatchMappedLogicRuleValue:
    ActionTypePropertyTypeDoesNotMatchMappedLogicRuleValue;
}

export interface ErrorType_actionTypeStructPropertyTypesNotAllowedInPropertyTypeLogicRuleValueMappings {
  type:
    "actionTypeStructPropertyTypesNotAllowedInPropertyTypeLogicRuleValueMappings";
  actionTypeStructPropertyTypesNotAllowedInPropertyTypeLogicRuleValueMappings:
    ActionTypeStructPropertyTypesNotAllowedInPropertyTypeLogicRuleValueMappings;
}

export interface ErrorType_actionTypeStructFieldLogicMappingDoesNotMatchStructPropertyDefinition {
  type: "actionTypeStructFieldLogicMappingDoesNotMatchStructPropertyDefinition";
  actionTypeStructFieldLogicMappingDoesNotMatchStructPropertyDefinition:
    ActionTypeStructFieldLogicMappingDoesNotMatchStructPropertyDefinition;
}

export interface ErrorType_actionTypeObjectParameterPropertyValueInPrefillsCannotReferenceStructProperty {
  type:
    "actionTypeObjectParameterPropertyValueInPrefillsCannotReferenceStructProperty";
  actionTypeObjectParameterPropertyValueInPrefillsCannotReferenceStructProperty:
    ActionTypeObjectParameterPropertyValueInPrefillsCannotReferenceStructProperty;
}

export interface ErrorType_actionTypeParameterTypeDoesNotMatchParameterValidationType {
  type: "actionTypeParameterTypeDoesNotMatchParameterValidationType";
  actionTypeParameterTypeDoesNotMatchParameterValidationType:
    ActionTypeParameterTypeDoesNotMatchParameterValidationType;
}

export interface ErrorType_actionTypeConditionValueCannotReferenceHighCardinalityObjectReferenceParameter {
  type:
    "actionTypeConditionValueCannotReferenceHighCardinalityObjectReferenceParameter";
  actionTypeConditionValueCannotReferenceHighCardinalityObjectReferenceParameter:
    ActionTypeConditionValueCannotReferenceHighCardinalityObjectReferenceParameter;
}

export interface ErrorType_actionTypeStructParameterFieldPrefillReferencesNonexistentObjectPropertyTypeStructField {
  type:
    "actionTypeStructParameterFieldPrefillReferencesNonexistentObjectPropertyTypeStructField";
  actionTypeStructParameterFieldPrefillReferencesNonexistentObjectPropertyTypeStructField:
    ActionTypeStructParameterFieldPrefillReferencesNonexistentObjectPropertyTypeStructField;
}

export interface ErrorType_actionTypeNonExistentParametersUsedInConditionValue {
  type: "actionTypeNonExistentParametersUsedInConditionValue";
  actionTypeNonExistentParametersUsedInConditionValue:
    ActionTypeNonExistentParametersUsedInConditionValue;
}

export interface ErrorType_actionTypeModifyObjectRuleDoesNotReferenceObjectTypeParameter {
  type: "actionTypeModifyObjectRuleDoesNotReferenceObjectTypeParameter";
  actionTypeModifyObjectRuleDoesNotReferenceObjectTypeParameter:
    ActionTypeModifyObjectRuleDoesNotReferenceObjectTypeParameter;
}

export interface ErrorType_actionTypeCannotUseMediaReferenceForObjectOrInterfaceParameterProperty {
  type:
    "actionTypeCannotUseMediaReferenceForObjectOrInterfaceParameterProperty";
  actionTypeCannotUseMediaReferenceForObjectOrInterfaceParameterProperty:
    ActionTypeCannotUseMediaReferenceForObjectOrInterfaceParameterProperty;
}

export interface ErrorType_actionTypeStructParameterFieldPrefillReferencesIncompatibleObjectPropertyTypeStructField {
  type:
    "actionTypeStructParameterFieldPrefillReferencesIncompatibleObjectPropertyTypeStructField";
  actionTypeStructParameterFieldPrefillReferencesIncompatibleObjectPropertyTypeStructField:
    ActionTypeStructParameterFieldPrefillReferencesIncompatibleObjectPropertyTypeStructField;
}

export interface ErrorType_actionTypeCannotUseTimeSeriesReferenceForObjectOrInterfaceParameterProperty {
  type:
    "actionTypeCannotUseTimeSeriesReferenceForObjectOrInterfaceParameterProperty";
  actionTypeCannotUseTimeSeriesReferenceForObjectOrInterfaceParameterProperty:
    ActionTypeCannotUseTimeSeriesReferenceForObjectOrInterfaceParameterProperty;
}

export interface ErrorType_actionTypeParameterValidationNotFound {
  type: "actionTypeParameterValidationNotFound";
  actionTypeParameterValidationNotFound: ActionTypeParameterValidationNotFound;
}

export interface ErrorType_actionTypeInvalidObjectDropdownStartingParameter {
  type: "actionTypeInvalidObjectDropdownStartingParameter";
  actionTypeInvalidObjectDropdownStartingParameter:
    ActionTypeInvalidObjectDropdownStartingParameter;
}

export interface ErrorType_actionTypeObjectSetObjectTypeDoesntMatchParameterObjectType {
  type: "actionTypeObjectSetObjectTypeDoesntMatchParameterObjectType";
  actionTypeObjectSetObjectTypeDoesntMatchParameterObjectType:
    ActionTypeObjectSetObjectTypeDoesntMatchParameterObjectType;
}

export interface ErrorType_actionTypeTooManyObjectDropdownSearchArounds {
  type: "actionTypeTooManyObjectDropdownSearchArounds";
  actionTypeTooManyObjectDropdownSearchArounds:
    ActionTypeTooManyObjectDropdownSearchArounds;
}

export interface ErrorType_actionTypeMissingConditionValuesInActionsObjectSet {
  type: "actionTypeMissingConditionValuesInActionsObjectSet";
  actionTypeMissingConditionValuesInActionsObjectSet:
    ActionTypeMissingConditionValuesInActionsObjectSet;
}

export interface ErrorType_actionTypeStructParameterPrefillsMustBeDefinedForAllFieldsOrNone {
  type: "actionTypeStructParameterPrefillsMustBeDefinedForAllFieldsOrNone";
  actionTypeStructParameterPrefillsMustBeDefinedForAllFieldsOrNone:
    ActionTypeStructParameterPrefillsMustBeDefinedForAllFieldsOrNone;
}

export interface ErrorType_actionTypeParametersDoNotMatchParameterOrdering {
  type: "actionTypeParametersDoNotMatchParameterOrdering";
  actionTypeParametersDoNotMatchParameterOrdering:
    ActionTypeParametersDoNotMatchParameterOrdering;
}

export interface ErrorType_actionTypeParameterPrefillCannotReferenceHighCardinalityObjectReferenceParameter {
  type:
    "actionTypeParameterPrefillCannotReferenceHighCardinalityObjectReferenceParameter";
  actionTypeParameterPrefillCannotReferenceHighCardinalityObjectReferenceParameter:
    ActionTypeParameterPrefillCannotReferenceHighCardinalityObjectReferenceParameter;
}

export interface ErrorType_actionTypeParameterValidationReferencesLaterParameters {
  type: "actionTypeParameterValidationReferencesLaterParameters";
  actionTypeParameterValidationReferencesLaterParameters:
    ActionTypeParameterValidationReferencesLaterParameters;
}

export interface ErrorType_actionTypeDeletingAndEditingSameParameterRid {
  type: "actionTypeDeletingAndEditingSameParameterRid";
  actionTypeDeletingAndEditingSameParameterRid:
    ActionTypeDeletingAndEditingSameParameterRid;
}

export interface ErrorType_actionTypeAddingAndEditingSameParameterId {
  type: "actionTypeAddingAndEditingSameParameterId";
  actionTypeAddingAndEditingSameParameterId:
    ActionTypeAddingAndEditingSameParameterId;
}

export interface ErrorType_actionTypeDataConstraintsPropertyMappedToOptionalParameter {
  type: "actionTypeDataConstraintsPropertyMappedToOptionalParameter";
  actionTypeDataConstraintsPropertyMappedToOptionalParameter:
    ActionTypeDataConstraintsPropertyMappedToOptionalParameter;
}

export interface ErrorType_actionTypeNonExistentParametersUsedInParameterPrefill {
  type: "actionTypeNonExistentParametersUsedInParameterPrefill";
  actionTypeNonExistentParametersUsedInParameterPrefill:
    ActionTypeNonExistentParametersUsedInParameterPrefill;
}

export interface ErrorType_actionTypeObjectReferenceTypeCreateObjectOptionValue {
  type: "actionTypeObjectReferenceTypeCreateObjectOptionValue";
  actionTypeObjectReferenceTypeCreateObjectOptionValue:
    ActionTypeObjectReferenceTypeCreateObjectOptionValue;
}

export interface ErrorType_actionTypeStructParameterPrefillReferencesStructPropertyWithIncompatibleCardinality {
  type:
    "actionTypeStructParameterPrefillReferencesStructPropertyWithIncompatibleCardinality";
  actionTypeStructParameterPrefillReferencesStructPropertyWithIncompatibleCardinality:
    ActionTypeStructParameterPrefillReferencesStructPropertyWithIncompatibleCardinality;
}

export interface ErrorType_actionTypeStructParameterPrefillsNotReferencingSameObjectTypeProperty {
  type: "actionTypeStructParameterPrefillsNotReferencingSameObjectTypeProperty";
  actionTypeStructParameterPrefillsNotReferencingSameObjectTypeProperty:
    ActionTypeStructParameterPrefillsNotReferencingSameObjectTypeProperty;
}

export interface ErrorType_actionTypeInvalidLogicRuleForObjectType {
  type: "actionTypeInvalidLogicRuleForObjectType";
  actionTypeInvalidLogicRuleForObjectType:
    ActionTypeInvalidLogicRuleForObjectType;
}

export interface ErrorType_actionTypeConditionsAreNotIndexedCorrectly {
  type: "actionTypeConditionsAreNotIndexedCorrectly";
  actionTypeConditionsAreNotIndexedCorrectly:
    ActionTypeConditionsAreNotIndexedCorrectly;
}

export interface ErrorType_actionTypeApiNameConflict {
  type: "actionTypeApiNameConflict";
  actionTypeApiNameConflict: ActionTypeApiNameConflict;
}

export interface ErrorType_actionTypeObjectParameterPropertyValueCannotReferenceStructProperty {
  type: "actionTypeObjectParameterPropertyValueCannotReferenceStructProperty";
  actionTypeObjectParameterPropertyValueCannotReferenceStructProperty:
    ActionTypeObjectParameterPropertyValueCannotReferenceStructProperty;
}

export interface ErrorType_actionTypeHasRevertsEnabledAndSynchronousWebhook {
  type: "actionTypeHasRevertsEnabledAndSynchronousWebhook";
  actionTypeHasRevertsEnabledAndSynchronousWebhook:
    ActionTypeHasRevertsEnabledAndSynchronousWebhook;
}

export interface ErrorType_actionTypeValidationsOrderingNotExactlySameAsValidationRuleSet {
  type: "actionTypeValidationsOrderingNotExactlySameAsValidationRuleSet";
  actionTypeValidationsOrderingNotExactlySameAsValidationRuleSet:
    ActionTypeValidationsOrderingNotExactlySameAsValidationRuleSet;
}

export interface ErrorType_actionTypeValidationsOrderingContainsDuplicates {
  type: "actionTypeValidationsOrderingContainsDuplicates";
  actionTypeValidationsOrderingContainsDuplicates:
    ActionTypeValidationsOrderingContainsDuplicates;
}

export interface ErrorType_actionTypeHasRevertsEnabledForInvalidObjectTypeStorageBackendCategory {
  type: "actionTypeHasRevertsEnabledForInvalidObjectTypeStorageBackendCategory";
  actionTypeHasRevertsEnabledForInvalidObjectTypeStorageBackendCategory:
    ActionTypeHasRevertsEnabledForInvalidObjectTypeStorageBackendCategory;
}

export interface ErrorType_actionTypeHasRevertsEnabledForInvalidLinkTypeStorageBackendCategory {
  type: "actionTypeHasRevertsEnabledForInvalidLinkTypeStorageBackendCategory";
  actionTypeHasRevertsEnabledForInvalidLinkTypeStorageBackendCategory:
    ActionTypeHasRevertsEnabledForInvalidLinkTypeStorageBackendCategory;
}

export interface ErrorType_actionTypeReferencesNonExistentSharedPropertyTypesInInterfaceTypes {
  type: "actionTypeReferencesNonExistentSharedPropertyTypesInInterfaceTypes";
  actionTypeReferencesNonExistentSharedPropertyTypesInInterfaceTypes:
    ActionTypeReferencesNonExistentSharedPropertyTypesInInterfaceTypes;
}

export interface ErrorType_actionTypeReferencesNonExistentPropertyTypesInObjectTypes {
  type: "actionTypeReferencesNonExistentPropertyTypesInObjectTypes";
  actionTypeReferencesNonExistentPropertyTypesInObjectTypes:
    ActionTypeReferencesNonExistentPropertyTypesInObjectTypes;
}

export interface ErrorType_actionTypeReferencesNonExistentEntityTypes {
  type: "actionTypeReferencesNonExistentEntityTypes";
  actionTypeReferencesNonExistentEntityTypes:
    ActionTypeReferencesNonExistentEntityTypes;
}

export interface ErrorType_actionTypeReferencesOptionalSharedPropertyTypesInInterfaceTypes {
  type: "actionTypeReferencesOptionalSharedPropertyTypesInInterfaceTypes";
  actionTypeReferencesOptionalSharedPropertyTypesInInterfaceTypes:
    ActionTypeReferencesOptionalSharedPropertyTypesInInterfaceTypes;
}

export interface ErrorType_actionTypeActionLogConfiguredForFunctionButFunctionProvenanceIsNotSet {
  type: "actionTypeActionLogConfiguredForFunctionButFunctionProvenanceIsNotSet";
  actionTypeActionLogConfiguredForFunctionButFunctionProvenanceIsNotSet:
    ActionTypeActionLogConfiguredForFunctionButFunctionProvenanceIsNotSet;
}

export interface ErrorType_actionTypeActionLogReferencesPropertiesOfNonSingletonObject {
  type: "actionTypeActionLogReferencesPropertiesOfNonSingletonObject";
  actionTypeActionLogReferencesPropertiesOfNonSingletonObject:
    ActionTypeActionLogReferencesPropertiesOfNonSingletonObject;
}

export interface ErrorType_actionTypeActionTypeParametersReferencedInActionLogRuleDoNotExist {
  type: "actionTypeActionTypeParametersReferencedInActionLogRuleDoNotExist";
  actionTypeActionTypeParametersReferencedInActionLogRuleDoNotExist:
    ActionTypeActionTypeParametersReferencedInActionLogRuleDoNotExist;
}

export interface ErrorType_actionTypeActionLogSummaryContainsObjectParameters {
  type: "actionTypeActionLogSummaryContainsObjectParameters";
  actionTypeActionLogSummaryContainsObjectParameters:
    ActionTypeActionLogSummaryContainsObjectParameters;
}

export interface ErrorType_actionTypeActionLogReasonCodePropertiesNotMapped {
  type: "actionTypeActionLogReasonCodePropertiesNotMapped";
  actionTypeActionLogReasonCodePropertiesNotMapped:
    ActionTypeActionLogReasonCodePropertiesNotMapped;
}

export interface ErrorType_actionTypeActionTypeObjectTypesEditedDoNotHaveCorrespondingActionLogValue {
  type:
    "actionTypeActionTypeObjectTypesEditedDoNotHaveCorrespondingActionLogValue";
  actionTypeActionTypeObjectTypesEditedDoNotHaveCorrespondingActionLogValue:
    ActionTypeActionTypeObjectTypesEditedDoNotHaveCorrespondingActionLogValue;
}

export interface ErrorType_actionTypeActionLogContainsValuesNotGeneratedByAction {
  type: "actionTypeActionLogContainsValuesNotGeneratedByAction";
  actionTypeActionLogContainsValuesNotGeneratedByAction:
    ActionTypeActionLogContainsValuesNotGeneratedByAction;
}

export interface ErrorType_actionTypeActionLogRequiredValuesNotAllPresentExactlyOnce {
  type: "actionTypeActionLogRequiredValuesNotAllPresentExactlyOnce";
  actionTypeActionLogRequiredValuesNotAllPresentExactlyOnce:
    ActionTypeActionLogRequiredValuesNotAllPresentExactlyOnce;
}

export interface ErrorType_actionTypeActionLogObjectTypeIdSuppliedEmpty {
  type: "actionTypeActionLogObjectTypeIdSuppliedEmpty";
  actionTypeActionLogObjectTypeIdSuppliedEmpty:
    ActionTypeActionLogObjectTypeIdSuppliedEmpty;
}

export interface ErrorType_actionTypeActionLogObjectTypeDoesNotExist {
  type: "actionTypeActionLogObjectTypeDoesNotExist";
  actionTypeActionLogObjectTypeDoesNotExist:
    ActionTypeActionLogObjectTypeDoesNotExist;
}

export interface ErrorType_actionTypeActionLogPropertyTypeIdReferencedDoesNotExist {
  type: "actionTypeActionLogPropertyTypeIdReferencedDoesNotExist";
  actionTypeActionLogPropertyTypeIdReferencedDoesNotExist:
    ActionTypeActionLogPropertyTypeIdReferencedDoesNotExist;
}

export interface ErrorType_actionTypeActionLogValueDoesNotMatchObjectPropertyTypes {
  type: "actionTypeActionLogValueDoesNotMatchObjectPropertyTypes";
  actionTypeActionLogValueDoesNotMatchObjectPropertyTypes:
    ActionTypeActionLogValueDoesNotMatchObjectPropertyTypes;
}

export interface ErrorType_actionTypeActionLogRequiredButNotEnabled {
  type: "actionTypeActionLogRequiredButNotEnabled";
  actionTypeActionLogRequiredButNotEnabled:
    ActionTypeActionLogRequiredButNotEnabled;
}

export interface ErrorType_actionTypeActionLogSummaryMessagePartTooLong {
  type: "actionTypeActionLogSummaryMessagePartTooLong";
  actionTypeActionLogSummaryMessagePartTooLong:
    ActionTypeActionLogSummaryMessagePartTooLong;
}

export interface ErrorType_actionTypeActionLogSummaryTooManyMessageParts {
  type: "actionTypeActionLogSummaryTooManyMessageParts";
  actionTypeActionLogSummaryTooManyMessageParts:
    ActionTypeActionLogSummaryTooManyMessageParts;
}

export interface ErrorType_actionTypeCountExceeded {
  type: "actionTypeCountExceeded";
  actionTypeCountExceeded: ActionTypeCountExceeded;
}

export interface ErrorType_actionTypeButtonTextTooLong {
  type: "actionTypeButtonTextTooLong";
  actionTypeButtonTextTooLong: ActionTypeButtonTextTooLong;
}

export interface ErrorType_actionTypeSuccessMessageTooLong {
  type: "actionTypeSuccessMessageTooLong";
  actionTypeSuccessMessageTooLong: ActionTypeSuccessMessageTooLong;
}

export interface ErrorType_actionTypeTooManyLogicRules {
  type: "actionTypeTooManyLogicRules";
  actionTypeTooManyLogicRules: ActionTypeTooManyLogicRules;
}

export interface ErrorType_actionTypeTooManyParameters {
  type: "actionTypeTooManyParameters";
  actionTypeTooManyParameters: ActionTypeTooManyParameters;
}

export interface ErrorType_actionTypeTooManySections {
  type: "actionTypeTooManySections";
  actionTypeTooManySections: ActionTypeTooManySections;
}

export interface ErrorType_actionTypeTooManySubmissionCriteria {
  type: "actionTypeTooManySubmissionCriteria";
  actionTypeTooManySubmissionCriteria: ActionTypeTooManySubmissionCriteria;
}

export interface ErrorType_actionTypeFailureMessageTooLong {
  type: "actionTypeFailureMessageTooLong";
  actionTypeFailureMessageTooLong: ActionTypeFailureMessageTooLong;
}

export interface ErrorType_actionTypeStaticValueTooLong {
  type: "actionTypeStaticValueTooLong";
  actionTypeStaticValueTooLong: ActionTypeStaticValueTooLong;
}

export interface ErrorType_actionTypeDefaultStringTooLong {
  type: "actionTypeDefaultStringTooLong";
  actionTypeDefaultStringTooLong: ActionTypeDefaultStringTooLong;
}

export interface ErrorType_actionTypeDisplayNameTooLong {
  type: "actionTypeDisplayNameTooLong";
  actionTypeDisplayNameTooLong: ActionTypeDisplayNameTooLong;
}

export interface ErrorType_actionTypeDescriptionTooLong {
  type: "actionTypeDescriptionTooLong";
  actionTypeDescriptionTooLong: ActionTypeDescriptionTooLong;
}

export interface ErrorType_actionTypeSectionDisplayNameTooLong {
  type: "actionTypeSectionDisplayNameTooLong";
  actionTypeSectionDisplayNameTooLong: ActionTypeSectionDisplayNameTooLong;
}

export interface ErrorType_actionTypeSectionDescriptionTooLong {
  type: "actionTypeSectionDescriptionTooLong";
  actionTypeSectionDescriptionTooLong: ActionTypeSectionDescriptionTooLong;
}

export interface ErrorType_actionTypeParameterDisplayNameTooLong {
  type: "actionTypeParameterDisplayNameTooLong";
  actionTypeParameterDisplayNameTooLong: ActionTypeParameterDisplayNameTooLong;
}

export interface ErrorType_actionTypeParameterDescriptionTooLong {
  type: "actionTypeParameterDescriptionTooLong";
  actionTypeParameterDescriptionTooLong: ActionTypeParameterDescriptionTooLong;
}

export interface ErrorType_actionTypeStructParameterFieldsListLengthValidationCannotBeDefined {
  type: "actionTypeStructParameterFieldsListLengthValidationCannotBeDefined";
  actionTypeStructParameterFieldsListLengthValidationCannotBeDefined:
    ActionTypeStructParameterFieldsListLengthValidationCannotBeDefined;
}

export interface ErrorType_actionTypeStructParameterShouldNotHaveTopLevelPrefillDefined {
  type: "actionTypeStructParameterShouldNotHaveTopLevelPrefillDefined";
  actionTypeStructParameterShouldNotHaveTopLevelPrefillDefined:
    ActionTypeStructParameterShouldNotHaveTopLevelPrefillDefined;
}

export interface ErrorType_actionTypeStructParameterFieldAllowedValueIsIncompatibleWithFieldType {
  type: "actionTypeStructParameterFieldAllowedValueIsIncompatibleWithFieldType";
  actionTypeStructParameterFieldAllowedValueIsIncompatibleWithFieldType:
    ActionTypeStructParameterFieldAllowedValueIsIncompatibleWithFieldType;
}

export interface ErrorType_actionTypeStructParameterFieldRenderHintIsIncompatibleWithFieldTypeAndAllowedValue {
  type:
    "actionTypeStructParameterFieldRenderHintIsIncompatibleWithFieldTypeAndAllowedValue";
  actionTypeStructParameterFieldRenderHintIsIncompatibleWithFieldTypeAndAllowedValue:
    ActionTypeStructParameterFieldRenderHintIsIncompatibleWithFieldTypeAndAllowedValue;
}

export interface ErrorType_actionTypeStructParameterHasInvalidTopLevelAllowedValues {
  type: "actionTypeStructParameterHasInvalidTopLevelAllowedValues";
  actionTypeStructParameterHasInvalidTopLevelAllowedValues:
    ActionTypeStructParameterHasInvalidTopLevelAllowedValues;
}

export interface ErrorType_actionTypeParameterCbacConstraintContainsInvalidMaxClassification {
  type: "actionTypeParameterCbacConstraintContainsInvalidMaxClassification";
  actionTypeParameterCbacConstraintContainsInvalidMaxClassification:
    ActionTypeParameterCbacConstraintContainsInvalidMaxClassification;
}

export interface ErrorType_actionTypeCbacConstraintOnNonSecuringCbacParameterMissingMaxClassification {
  type:
    "actionTypeCbacConstraintOnNonSecuringCbacParameterMissingMaxClassification";
  actionTypeCbacConstraintOnNonSecuringCbacParameterMissingMaxClassification:
    ActionTypeCbacConstraintOnNonSecuringCbacParameterMissingMaxClassification;
}

export interface ErrorType_actionTypeStringCbacPickerTypeclassUsedOnNonStringParameter {
  type: "actionTypeStringCbacPickerTypeclassUsedOnNonStringParameter";
  actionTypeStringCbacPickerTypeclassUsedOnNonStringParameter:
    ActionTypeStringCbacPickerTypeclassUsedOnNonStringParameter;
}

export interface ErrorType_actionTypeInsufficientPermissionsToAddStringCbacPickerTypeclass {
  type: "actionTypeInsufficientPermissionsToAddStringCbacPickerTypeclass";
  actionTypeInsufficientPermissionsToAddStringCbacPickerTypeclass:
    ActionTypeInsufficientPermissionsToAddStringCbacPickerTypeclass;
}

export interface ErrorType_actionTypeInsufficientPermissionsToModifyMaxClassificationOfNonSecuringCbacParameter {
  type:
    "actionTypeInsufficientPermissionsToModifyMaxClassificationOfNonSecuringCbacParameter";
  actionTypeInsufficientPermissionsToModifyMaxClassificationOfNonSecuringCbacParameter:
    ActionTypeInsufficientPermissionsToModifyMaxClassificationOfNonSecuringCbacParameter;
}

export interface ErrorType_actionTypeTooManyTypeClasses {
  type: "actionTypeTooManyTypeClasses";
  actionTypeTooManyTypeClasses: ActionTypeTooManyTypeClasses;
}

export interface ErrorType_actionTypeTypeClassKindTooLong {
  type: "actionTypeTypeClassKindTooLong";
  actionTypeTypeClassKindTooLong: ActionTypeTypeClassKindTooLong;
}

export interface ErrorType_actionTypeTypeClassValueTooLong {
  type: "actionTypeTypeClassValueTooLong";
  actionTypeTypeClassValueTooLong: ActionTypeTypeClassValueTooLong;
}

export interface ErrorType_actionTypeInvalidApiNamePrefixes {
  type: "actionTypeInvalidApiNamePrefixes";
  actionTypeInvalidApiNamePrefixes: ActionTypeInvalidApiNamePrefixes;
}

export interface ErrorType_typeGroupCountExceeded {
  type: "typeGroupCountExceeded";
  typeGroupCountExceeded: TypeGroupCountExceeded;
}

export interface ErrorType_typeGroupDisplayNameTooLong {
  type: "typeGroupDisplayNameTooLong";
  typeGroupDisplayNameTooLong: TypeGroupDisplayNameTooLong;
}

export interface ErrorType_typeGroupDescriptionTooLong {
  type: "typeGroupDescriptionTooLong";
  typeGroupDescriptionTooLong: TypeGroupDescriptionTooLong;
}
/**
 * A union that represents all possible ontology modification validation errors.
 */
export type ErrorType =
  | ErrorType_ontologyEntityApiNameConflicts
  | ErrorType_intermediaryLinkTypeInvalidAssociatedLinkType
  | ErrorType_intermediaryLinkTypeMustBeOsv2
  | ErrorType_intermediaryLinkTypeReferencedObjectTypesMustBeOsv2
  | ErrorType_linkTypeStreamDatasourceInvalidRetentionWindow
  | ErrorType_linkTypeReferencedDatasourceNotFound
  | ErrorType_linkTypePropertiesReferenceSameColumn
  | ErrorType_linkTypeDatasourceSchemaNotFound
  | ErrorType_linkTypeColumnMissingFromBackingDatasource
  | ErrorType_linkTypePropertyIncompatibleBackingColumnType
  | ErrorType_linkTypeManyToManyWritebackDatasetPresentOnOsv2
  | ErrorType_linkTypeDatasourceAlreadyExists
  | ErrorType_linkTypeStatusAndObjectTypeStatusConflict
  | ErrorType_linkTypeReferencedLinkTypesNotFound
  | ErrorType_linkTypeReferencedLinkTypesDeleted
  | ErrorType_linkTypeHasMultipleDatasources
  | ErrorType_linkTypeToDeleteIsReferencedByExistingTypes
  | ErrorType_linkTypeHasNoDatasources
  | ErrorType_linkTypeOneToManyWithDatasourcesNotAllowed
  | ErrorType_linkTypeStatusAndObjectTypePropertyTypeStatusConflict
  | ErrorType_linkTypeInvalidOneToManyCardinalityHint
  | ErrorType_linkTypeReferencedObjectTypesNotFound
  | ErrorType_linkTypeReferencedObjectTypesDeleted
  | ErrorType_linkTypeInvalidApiName
  | ErrorType_linkTypeInvalidDeletionsWithReferencingDatasources
  | ErrorType_linkTypeStatusAndPropertyTypeStatusConflict
  | ErrorType_linkTypeInvalidVisibility
  | ErrorType_linkTypeCannotEditPrivilegedProvenance
  | ErrorType_linkTypeReadOnlyV1V2NotAllowed
  | ErrorType_linkTypeEntityMetadataModifyRequestWithInvalidObjectDbType
  | ErrorType_linkTypeEntityMetadataModifyRequestWithInvalidObjectDbRid
  | ErrorType_linkTypeOsv1NotAllowed
  | ErrorType_linkTypeReadOnlyV2WithPatchesEnabled
  | ErrorType_linkTypeV1WithOsv2ObjectDbsEnabled
  | ErrorType_linkTypeInvalidRevertV1ToV2Migration
  | ErrorType_linkTypeOsv2WithMultipleClustersEnabled
  | ErrorType_linkTypeEditabilityChangeDuringV1ToV2Migration
  | ErrorType_linkTypeInvalidPrimaryKeyReference
  | ErrorType_linkTypeForeignKeyTypeMismatch
  | ErrorType_linkTypeForeignKeyReferenceDoesNotExist
  | ErrorType_linkTypePrimaryAndForeignKeyTypeMismatch
  | ErrorType_linkTypeInvalidDerivedForeignKey
  | ErrorType_linkTypeManyToManyDatasourcePrimaryKeyDoesNotExist
  | ErrorType_linkTypeManyToManyCountExceeded
  | ErrorType_linkTypeOneToManyCountExceeded
  | ErrorType_linkTypeDisplayNameTooLong
  | ErrorType_linkTypeTooManyTypeClasses
  | ErrorType_linkTypeTypeClassKindTooLong
  | ErrorType_linkTypeTypeClassValueTooLong
  | ErrorType_linkTypeInvalidApiNamePrefixes
  | ErrorType_sensorLinkTypeCannotBeSelfReferential
  | ErrorType_sensorLinkTypeNotAttachedToObjectType
  | ErrorType_sensorLinkTypesNotFound
  | ErrorType_sensorLinkTypeLinkedSensorObjectTypeDoesNotHaveSensorTrait
  | ErrorType_interfaceTypeToDeleteIsReferencedByExistingTypes
  | ErrorType_interfaceTypeContainsDuplicateProperties
  | ErrorType_interfaceTypeExtendedDoesNotExistOrDeleted
  | ErrorType_interfaceTypeWithActiveStatusRemovingSharedPropertyTypes
  | ErrorType_interfaceTypeInvalidApiName
  | ErrorType_interfaceTypeDeclaresRequiredParentPropertyAsOptional
  | ErrorType_interfaceTypeReferencedSharedPropertyTypesDoNotExistOrDeleted
  | ErrorType_interfaceTypeExtendsTooManyInterfaces
  | ErrorType_interfaceTypeLinkedEntityTypeNotFound
  | ErrorType_interfaceTypeContainsTooManyProperties
  | ErrorType_interfaceLinkTypeApiNameConflict
  | ErrorType_interfaceTypeImplementedTooOften
  | ErrorType_interfaceTypeCountExceeded
  | ErrorType_interfaceTypeDisplayNameTooLong
  | ErrorType_interfaceTypeDescriptionTooLong
  | ErrorType_interfaceLinkTypeDisplayNameTooLong
  | ErrorType_interfaceLinkTypeDescriptionTooLong
  | ErrorType_interfaceTypeInvalidApiNamePrefixes
  | ErrorType_objectTypeRuleSetBindingAssociatedWithDerivedPropertyType
  | ErrorType_objectTypeMissingPropertiesAssociatedWithWorkflow
  | ErrorType_objectTypeWorkflowTraitMappingsDoNotExistOnTrait
  | ErrorType_objectTypeDatasourceGeotimeSeriesIntegrationRidIsInvalid
  | ErrorType_objectTypeGeotimeSeriesDatasourceDoesNotReferenceExistingProperties
  | ErrorType_objectTypeGeotimeSeriesDatasourceGeotimeCatalogIsNotInstalled
  | ErrorType_objectTypeGeotimeSeriesDatasourceDoesNotReferenceGeotimeSeriesProperties
  | ErrorType_objectTypeDataSecurityModifiedOnBranch
  | ErrorType_objectTypePropertiesReferenceSameColumnName
  | ErrorType_objectTypeTimeSeriesDatasourceDoesNotReferenceExistingProperties
  | ErrorType_objectTypeTimeSeriesSyncRidIsNotTimeSeriesSync
  | ErrorType_objectTypeTimeSeriesDatasourceDoesNotReferenceTimeDependentProperties
  | ErrorType_objectTypePropertyTypeDuplicateMappings
  | ErrorType_objectTypePropertyTypeMarkingMustBeBackedByDatasourceWithGranularPermissions
  | ErrorType_objectTypeRevDbIntegratedBackedByStreamDatasource
  | ErrorType_objectTypeDatasourceWithoutPrimaryKeyColumn
  | ErrorType_objectTypeDatasourceColumnMappingMismatch
  | ErrorType_objectTypeReferencedDatasourceNotFound
  | ErrorType_objectTypePrimaryKeyIsDerived
  | ErrorType_objectTypePropertyTypeMarkingMustBeReferencedInGranularPolicy
  | ErrorType_objectTypeDatasourceAlreadyExists
  | ErrorType_objectTypeWithUnmappedTitleProperty
  | ErrorType_objectTypeInvalidTypeChangeOfExistingDatasource
  | ErrorType_objectTypeMismatchedSecurityGroupGranularPolicyOperandDataTypes
  | ErrorType_objectTypeNonEmptyPropertyInSecurityGroupGranularPolicyNotCondition
  | ErrorType_objectTypeUnmappedPropertiesInPropertySecurityGroup
  | ErrorType_objectTypeUnexpectedPropertyTypeReferencedInSecurityGroupGranularPolicy
  | ErrorType_objectTypeUnsupportedSecurityGroupGranularPolicyOperands
  | ErrorType_objectTypeUnsupportedSecurityGroupGranularPolicyOperandDataType
  | ErrorType_objectTypeInvalidOperatorForSecurityGroupGranularPolicyOperands
  | ErrorType_objectTypeUnmappedPropertyInSecurityGroupGranularPolicy
  | ErrorType_objectTypeAssumedMarkingSpecifiedWithoutBackingDatasource
  | ErrorType_objectTypeNullablePropertyInSecurityGroupGranularPolicyMarkingCondition
  | ErrorType_objectTypeInvalidNumberOfPropertyReferencesInPropertySecurityGroup
  | ErrorType_objectTypePropertySecurityGroupsNotSupportedWithMultipleDatasources
  | ErrorType_objectTypePropertySecurityGroupsNotSupportedOnBranches
  | ErrorType_objectTypePropertyIncompatibleBackingColumnType
  | ErrorType_objectTypeStructColumnFieldMissingFromBackingDatasource
  | ErrorType_objectTypeDatasourceSchemaNotFound
  | ErrorType_objectTypeColumnMissingFromBackingDatasource
  | ErrorType_objectTypeDerivedPropertyTypeIsTitle
  | ErrorType_objectTypeNotAllPropertyTypesAreMappedToDatasource
  | ErrorType_objectTypePropertyTypeMarkingMustHaveAssociatedMarkingConstraintsOnDatasource
  | ErrorType_objectTypeGpsPolicyColumnsFromRestrictedViewsAreMapped
  | ErrorType_objectTypeDatasourceUpdateModificationCannotChangeAssumedMarkings
  | ErrorType_objectTypeMediaDatasourceDoesNotReferenceExistingProperties
  | ErrorType_objectTypeMediaSetViewLocatorsDoNotExist
  | ErrorType_objectTypeMediaDatasourceDoesNotReferenceMediaReferenceProperties
  | ErrorType_objectTypeMediaDatasourceDoesNotHaveAnyMediaSourceRids
  | ErrorType_objectTypeHasNoDatasources
  | ErrorType_objectTypePrimaryKeyPropertyTypeDoesNotExist
  | ErrorType_objectTypePrimaryKeyInvalidTypesWithWriteback
  | ErrorType_objectTypeInvalidApiName
  | ErrorType_objectTypeTooManyAliases
  | ErrorType_objectTypeDerivedPropertyDefinitionLinkTypeNotFoundOrDeleted
  | ErrorType_objectTypeDerivedPropertyMultiHopLinkExceedsMaximumStepCount
  | ErrorType_objectTypeDerivedPropertyIncompatibleDefinitionAndForeignPropertyBaseType
  | ErrorType_objectTypeDerivedPropertyLinkDefinitionCardinalityInvalid
  | ErrorType_objectTypeDerivedPropertyLinkDoesNotFormChain
  | ErrorType_objectTypeDerivedPropertyTypeDependOnAnotherDerivedProperty
  | ErrorType_objectTypeDerivedPropertyMultiHopLinkIsEmpty
  | ErrorType_objectTypeDerivedPropertyBaseTypeChangedWhenObjectTypeIsNotModified
  | ErrorType_objectTypeDerivedPropertyDefinitionDoesNotMatchSharedPropertyType
  | ErrorType_objectTypeForeignPropertyTypeInDerivedPropertyDefinitionNotFound
  | ErrorType_objectTypeTitlePropertyTypeNotFound
  | ErrorType_objectTypePrimaryKeyUsesEditOnlyPropertyTypeInDataBackedDatasource
  | ErrorType_objectTypeEventMetadataReferencesNonExistentProperty
  | ErrorType_objectTypeTimeseriesMetadataReferencesNonExistentProperty
  | ErrorType_objectTypeActionLogDeletionStillReferencesEnabledActionType
  | ErrorType_objectTypeSensorTraitReferencesNonExistentProperty
  | ErrorType_objectTypeReadingPropertyTypeMustBeTimeDependent
  | ErrorType_objectTypeCompositePrimaryKeysNotAllowed
  | ErrorType_objectTypeInvalidDeletionsWithReferencingDatasources
  | ErrorType_objectTypeInvalidStatus
  | ErrorType_objectTypeWithEditsHistoryCannotAddUnsupportedPropertyTypes
  | ErrorType_objectTypeCannotEnableEditsHistoryWithUnsupportedPropertyTypes
  | ErrorType_objectTypeGeotimeSeriesReferencePropertyIsTitle
  | ErrorType_objectTypeGeotimeSeriesReferencePropertyTypeHasNoDatasources
  | ErrorType_objectTypeGeotimeSeriesReferencePropertyShouldNotHaveRenderHints
  | ErrorType_objectTypeGeotimeSeriesReferenceIsNotOnObjectStorageV2
  | ErrorType_objectTypeInvalidTypeForDerivedProperty
  | ErrorType_objectTypeValueTypeAssociatedWithDerivedPropertyType
  | ErrorType_objectTypeDataConstraintAssociatedWithDerivedPropertyType
  | ErrorType_objectTypeInlineActionAssociatedWithDerivedPropertyType
  | ErrorType_objectTypeReferencedPropertyDoesNotExist
  | ErrorType_objectTypeTimeDependentPropertyShouldNotBeSearchable
  | ErrorType_objectTypeInvalidSeriesMetadata
  | ErrorType_objectTypeTimeDependentPropertyShouldNotBePrimaryKeyOrTitle
  | ErrorType_objectTypeTimeDependentPropertyMustBeReferencedByExactlyOneTimeSeriesDatasource
  | ErrorType_objectTypeInvalidNonNumericInternalInterpolation
  | ErrorType_objectTypeTimeDependentPropertyShouldNotHaveRenderHints
  | ErrorType_objectTypeInvalidNumericInternalInterpolation
  | ErrorType_objectTypeTimeDependentPropertyTypeHasNoDatasources
  | ErrorType_objectTypePhonographNumberOfReplicasTypeclassMustBeOnPrimaryKey
  | ErrorType_objectTypeInvalidArrayBasePropertyType
  | ErrorType_objectTypeInvalidPropertyTypeApiName
  | ErrorType_objectTypeAtMostOneOfReplacedByAndReplacedByIdCanBeSetOnPropertyTypeStatus
  | ErrorType_objectTypePropertyTypeWithReplaceByIdNotFound
  | ErrorType_objectTypeInvalidPropertyTypeVisibility
  | ErrorType_objectTypeStructPropertyTypeFieldDisplayNameTooLong
  | ErrorType_objectTypeStructPropertyTypeFieldsDuplicateApiNames
  | ErrorType_objectTypeStructPropertyTypeIsNotOnObjectStorageV2ObjectType
  | ErrorType_objectTypeStructPropertyTypeShouldNotHaveRenderHints
  | ErrorType_objectTypeStructPropertyCannotChangeBaseTypes
  | ErrorType_objectTypeStructPropertyTypeFieldTypeClassKindTooLong
  | ErrorType_objectTypeStructPropertyTypeFieldHasInvalidApiName
  | ErrorType_objectTypeStructPropertyTypeFieldAliasTooLong
  | ErrorType_objectTypeStructPropertyTypeMustHaveAtLeastOneField
  | ErrorType_objectTypeStructPropertyTypeFieldHasTooManyTypeClasses
  | ErrorType_objectTypeStructPropertyTypeFieldHasTooManyAliases
  | ErrorType_objectTypeStructPropertyTypeFieldTypeClassNameTooLong
  | ErrorType_objectTypeStructFieldBasePropertyTypeInvalid
  | ErrorType_objectTypeStructPropertyTypeIsTitle
  | ErrorType_objectTypeStructPropertyTypeFieldDescriptionTooLong
  | ErrorType_objectTypeStructPropertyTypeShouldNotHaveRenderHintsError
  | ErrorType_objectTypeReferencedPropertyMustBeDifferent
  | ErrorType_objectTypeReferencedPropertyTypeMismatch
  | ErrorType_objectTypeInvalidAnalyzer
  | ErrorType_objectTypeInvalidLanguageAnalyzer
  | ErrorType_objectTypeCannotUseAnalyzerExperimentalAndAnalyzerOverride
  | ErrorType_objectTypePrimaryKeyTypeForbidden
  | ErrorType_objectTypeReferenceDeletedInlineActionTypes
  | ErrorType_objectTypePrimaryKeyTimeDependentPropertyMustBeIndexedForSearch
  | ErrorType_objectTypePropertyTypeStatusAndObjectTypeStatusConflict
  | ErrorType_objectTypeBaseFormatterReferencedPropertiesDoNotExist
  | ErrorType_objectTypeAttachmentPropertyShouldNotBePrimaryKeyOrTitle
  | ErrorType_objectTypeAttachmentPropertyShouldNotBeSearchable
  | ErrorType_objectTypeAttachmentPropertyShouldNotHaveRenderHints
  | ErrorType_objectTypeInlineActionTypesCannotBeAssociatedWithObjectTypePrimaryKeys
  | ErrorType_objectTypeVectorPropertyIsNotOnObjectStorageV2ObjectType
  | ErrorType_objectTypeVectorPropertyTypeDimensionInvalid
  | ErrorType_objectTypeVectorPropertyTypeEmbeddingModelUnknown
  | ErrorType_objectTypeVectorPropertySimilarityFunctionConfigurationInvalid
  | ErrorType_objectTypeDataNullabilityV2NotEnabled
  | ErrorType_objectTypeMultipleDataNullabilitiesConfigured
  | ErrorType_objectTypeNoEmptyCollectionsDataConstraintOnlyAllowedForArrayType
  | ErrorType_objectTypeMediaReferencePropertyTypeHasNoDatasources
  | ErrorType_objectTypeMediaReferencePropertyIsReferencedByMoreThanOneMediaSourceDatasource
  | ErrorType_objectTypeMediaReferencePropertyIsReferencedByMoreThanOneMediaDatasourceType
  | ErrorType_objectTypeMediaReferenceIsNotOnObjectStorageV2ObjectType
  | ErrorType_objectTypeMediaReferencePropertyIsTitle
  | ErrorType_objectTypeMediaReferencePropertyShouldNotHaveRenderHints
  | ErrorType_objectTypeGothamMappingAlreadyInUse
  | ErrorType_objectTypeMissingPermissionToEnableTypeMapping
  | ErrorType_objectTypeObjectStorageV1MappedToGotham
  | ErrorType_objectTypeRevDbIntegrationHasNoMappedProperties
  | ErrorType_objectTypeContainsUnmappedSharedPropertyTypes
  | ErrorType_objectTypeHasModifiedLocalPropertyGothamMapping
  | ErrorType_objectTypeViewRestrictedContainsGothamMapping
  | ErrorType_objectTypeInPrivatePackageContainsGothamMapping
  | ErrorType_objectTypeHasModifiedGothamUris
  | ErrorType_objectTypeInvalidVisibility
  | ErrorType_objectTypeHasNoPrimaryKey
  | ErrorType_objectTypeHasTooManyDatasources
  | ErrorType_objectTypeCannotEditPrivilegedProvenance
  | ErrorType_objectTypeBothDerivedPropertyTypeAndObjectStorageV1MappedToGotham
  | ErrorType_objectTypeEditsResolutionStrategyModificationOnlyAllowedForOsv2
  | ErrorType_objectTypeInvalidRevertOsv1ToOsv2Migration
  | ErrorType_objectTypeEditsResolutionStrategyModificationTimestampPropertyNotInDatasource
  | ErrorType_objectTypeReadOnlyOsv2WithPatchesEnabled
  | ErrorType_objectTypeOsv1WithOsv2ObjectDbsEnabled
  | ErrorType_objectTypeEnablingEditsHistoryNotSupported
  | ErrorType_objectTypeStreamDatasourceSupportedOnlyWithObjectStorageV2
  | ErrorType_objectTypeOsv1CannotCreate
  | ErrorType_objectTypeReadOnlyV1V2NotAllowed
  | ErrorType_objectTypeRestrictedViewDatasourceV2SupportedOnlyWithObjectStorageV2
  | ErrorType_objectTypeOsv2WithMultipleClustersEnabled
  | ErrorType_objectTypeEntityMetadataModifyRequestWithInvalidObjectDbType
  | ErrorType_objectTypeDatasetDatasourceV2SupportedOnlyWithObjectStorageV2
  | ErrorType_objectTypeEntityMetadataModifyRequestWithInvalidObjectDbRid
  | ErrorType_objectTypeEditabilityChangeDuringV1ToV2Migration
  | ErrorType_objectTypeEditsResolutionStrategyModificationTimestampPropertyNotFound
  | ErrorType_objectTypeStreamDatasourceWithPatchesEnabled
  | ErrorType_objectTypeEntityMetadataModifyRequestWithInvalidObjectDbConfigValue
  | ErrorType_objectTypeToDeleteIsReferencedByExistingInterfaceLinkTypes
  | ErrorType_objectTypeImplementsTooManyInterfaces
  | ErrorType_objectTypeInterfaceImplementationInvalidIsIndexedForSearch
  | ErrorType_objectTypeInterfaceImplementationInvalidDataConstraints
  | ErrorType_objectTypeInterfaceImplementationConflictingPropertyImplementation
  | ErrorType_objectTypeInterfaceImplementationPropertyHasDifferentType
  | ErrorType_objectTypeInterfaceImplementationPropertyNotFound
  | ErrorType_objectTypeInterfaceImplementationPropertyTypesHaveConflictingApiNames
  | ErrorType_objectTypeInterfaceImplementationTypeClassesDoNotMatch
  | ErrorType_objectTypeInterfaceImplementationValueTypeDoesNotMatch
  | ErrorType_objectTypeInterfaceImplementationImplementsPropertyThatDoesNotExist
  | ErrorType_objectTypeInterfaceImplementationDoesNotImplementAllProperties
  | ErrorType_objectTypeInterfaceImplementationInvalidLinkedEntityImplementingLinkType
  | ErrorType_objectTypeInterfaceImplementationLinkTypeImplementedMoreThanOnce
  | ErrorType_objectTypePropertyImplementationImplicitAndExplicit
  | ErrorType_objectTypeInterfaceLinkNotFound
  | ErrorType_objectTypeInterfaceLinkTypeImplementedTooOften
  | ErrorType_objectTypeRequiredInterfaceLinkTypeNotImplemented
  | ErrorType_objectTypeCountExceeded
  | ErrorType_objectTypeTooManyPropertiesAndStructFields
  | ErrorType_objectTypeStreamDatasourceTooManyPropertiesAndStructFields
  | ErrorType_objectTypeDisplayNameTooLong
  | ErrorType_objectTypeDescriptionTooLong
  | ErrorType_objectTypePropertyTypeDisplayNameTooLong
  | ErrorType_objectTypePropertyTypeDescriptionTooLong
  | ErrorType_objectTypeTooManyTypeClasses
  | ErrorType_objectTypeTypeClassKindTooLong
  | ErrorType_objectTypeTypeClassValueTooLong
  | ErrorType_objectTypeAliasTooLong
  | ErrorType_objectTypeInvalidApiNamePrefixes
  | ErrorType_objectTypeInvalidIconColor
  | ErrorType_objectTypeInvalidIconType
  | ErrorType_objectTypeInvalidCardinalityImplementingInterfaceLinkType
  | ErrorType_objectTypeMarkingPropertyTypesOnlyAllowedOnOsv2
  | ErrorType_objectTypeInvalidMarkingPropertyType
  | ErrorType_objectTypeMarkingPropertyTypesMustBeNonNullable
  | ErrorType_objectTypeCbacMarkingPropertyTypeMustBeNonEmpty
  | ErrorType_objectTypeWithDerivedPropertiesMappedToGotham
  | ErrorType_ruleSetBindingReferencingMissingPropertyTypeIds
  | ErrorType_ruleSetCountExceeded
  | ErrorType_ruleSetNameTooLong
  | ErrorType_ruleSetDescriptionTooLong
  | ErrorType_ruleSetNamedTypeNameTooLong
  | ErrorType_workflowObjectTypeTraitPropertyTypeMismatch
  | ErrorType_workflowReferencedLinkTypeDeleted
  | ErrorType_workflowPropertiesAssociatedMissing
  | ErrorType_workflowReferencedLinkTypeNotFound
  | ErrorType_workflowReferencedObjectTypeDeleted
  | ErrorType_workflowReferencedObjectTypesNotFound
  | ErrorType_workflowCountExceeded
  | ErrorType_workflowDisplayNameTooLong
  | ErrorType_workflowDescriptionTooLong
  | ErrorType_workflowArchetypeIdTooLong
  | ErrorType_workflowArchetypeVersionTooLong
  | ErrorType_sharedPropertyTypeInvalidApiName
  | ErrorType_sharedPropertyTypeFormatterCannotReferenceOtherPropertyType
  | ErrorType_sharedPropertyTypeReferencesMissingValueType
  | ErrorType_sharedPropertyTypeStructPropertyCannotChangeBaseTypes
  | ErrorType_sharedPropertyTypesToModifyAreImported
  | ErrorType_sharedPropertyTypeInvalidVisibility
  | ErrorType_sharedPropertyTypeGothamMappingAlreadyInUse
  | ErrorType_sharedPropertyTypeHasModifiedGothamUris
  | ErrorType_sharedPropertyTypeValueTypeUsageMissingStructField
  | ErrorType_sharedPropertyTypeValueTypeUsageMismatchStructField
  | ErrorType_sharedPropertyTypeGeotimeSeriesReferencePropertyShouldNotHaveRenderHints
  | ErrorType_sharedPropertyTypeValueTypeUsageMismatchScaleOrPrecision
  | ErrorType_sharedPropertyTypeValueTypeUsageMismatch
  | ErrorType_sharedPropertyTypeAttachmentPropertyShouldNotHaveRenderHints
  | ErrorType_sharedPropertyTypeAttachmentPropertyShouldNotBeSearchable
  | ErrorType_sharedPropertyTypeToDeleteIsReferencedByExistingTypes
  | ErrorType_sharedPropertyTypeMediaReferencePropertyShouldNotHaveRenderHints
  | ErrorType_sharedPropertyTypeCountExceeded
  | ErrorType_sharedPropertyTypeDisplayNameTooLong
  | ErrorType_sharedPropertyTypeDescriptionTooLong
  | ErrorType_sharedPropertyTypeTooManyTypeClasses
  | ErrorType_sharedPropertyTypeTypeClassKindTooLong
  | ErrorType_sharedPropertyTypeTypeClassValueTooLong
  | ErrorType_sharedPropertyTypeAliasTooLong
  | ErrorType_sharedPropertyTypeTooManyAliases
  | ErrorType_sharedPropertyTypeInvalidMarking
  | ErrorType_sharedPropertyTypesMarkingMustBeNonNullable
  | ErrorType_sharedPropertyTypeCbacMarkingMustBeNonEmpty
  | ErrorType_sharedPropertyTypeInvalidApiNamePrefixes
  | ErrorType_sharedPropertyTypeBacksMultipleProperties
  | ErrorType_actionTypeHasRevertsEnabledButEmptyEnabledForConfiguration
  | ErrorType_actionTypeMissingRevertDuration
  | ErrorType_actionTypeInvalidRevertDuration
  | ErrorType_actionTypeFormContentOrderingNotExactlySameAsSectionSet
  | ErrorType_actionTypeParametersInFormContentOrderingDontMatchParameterOrdering
  | ErrorType_actionTypeFormContentOrderingContainsDuplicates
  | ErrorType_actionTypeFormContentOrderingNotExactlySameAsParameterSet
  | ErrorType_actionTypeLinkRuleDoesNotReferenceManyToManyLinkType
  | ErrorType_actionTypePrimaryKeyInAddObjectRuleDoesNotUseValidLogicRuleValue
  | ErrorType_actionTypeApiNameMissing
  | ErrorType_actionTypeDoesNotHaveActionTypeLevelValidation
  | ErrorType_actionTypeStructParametersNotAllowedInPropertyTypeLogicRuleValueMappings
  | ErrorType_actionTypeUserValidationFiltersExceedMaximum
  | ErrorType_actionTypeCannotFindObjectTypes
  | ErrorType_actionTypeCannotUpdateLegacyMediaPropertyWithLogicRuleValueFromAction
  | ErrorType_actionTypeStructPropertyFieldMappingHasIncompatibleCardinality
  | ErrorType_actionTypeStructPropertyFieldMappingHasInconsistentCardinality
  | ErrorType_actionTypeTypeclassUsageNotAllowed
  | ErrorType_actionTypeParameterOrderingNotExactlySameAsParameterSet
  | ErrorType_actionTypeParameterOrderingContainsDuplicates
  | ErrorType_actionTypeCannotPerformOperationWithRedactedValue
  | ErrorType_actionTypeStructPropertyFieldMappedToIncompatibleBaseType
  | ErrorType_actionTypeActionLogObjectsCannotBeEdited
  | ErrorType_actionTypeNonExistentParametersUsedInLogic
  | ErrorType_actionTypeObjectMissingPrimaryKey
  | ErrorType_actionTypeEditingNonEditablePropertyType
  | ErrorType_actionTypeObjectSetRidsNotAllowedInConditionValues
  | ErrorType_actionTypeApiNameInvalidFormat
  | ErrorType_actionTypePropertyTypeDoesNotMatchMappedLogicRuleValue
  | ErrorType_actionTypeStructPropertyTypesNotAllowedInPropertyTypeLogicRuleValueMappings
  | ErrorType_actionTypeStructFieldLogicMappingDoesNotMatchStructPropertyDefinition
  | ErrorType_actionTypeObjectParameterPropertyValueInPrefillsCannotReferenceStructProperty
  | ErrorType_actionTypeParameterTypeDoesNotMatchParameterValidationType
  | ErrorType_actionTypeConditionValueCannotReferenceHighCardinalityObjectReferenceParameter
  | ErrorType_actionTypeStructParameterFieldPrefillReferencesNonexistentObjectPropertyTypeStructField
  | ErrorType_actionTypeNonExistentParametersUsedInConditionValue
  | ErrorType_actionTypeModifyObjectRuleDoesNotReferenceObjectTypeParameter
  | ErrorType_actionTypeCannotUseMediaReferenceForObjectOrInterfaceParameterProperty
  | ErrorType_actionTypeStructParameterFieldPrefillReferencesIncompatibleObjectPropertyTypeStructField
  | ErrorType_actionTypeCannotUseTimeSeriesReferenceForObjectOrInterfaceParameterProperty
  | ErrorType_actionTypeParameterValidationNotFound
  | ErrorType_actionTypeInvalidObjectDropdownStartingParameter
  | ErrorType_actionTypeObjectSetObjectTypeDoesntMatchParameterObjectType
  | ErrorType_actionTypeTooManyObjectDropdownSearchArounds
  | ErrorType_actionTypeMissingConditionValuesInActionsObjectSet
  | ErrorType_actionTypeStructParameterPrefillsMustBeDefinedForAllFieldsOrNone
  | ErrorType_actionTypeParametersDoNotMatchParameterOrdering
  | ErrorType_actionTypeParameterPrefillCannotReferenceHighCardinalityObjectReferenceParameter
  | ErrorType_actionTypeParameterValidationReferencesLaterParameters
  | ErrorType_actionTypeDeletingAndEditingSameParameterRid
  | ErrorType_actionTypeAddingAndEditingSameParameterId
  | ErrorType_actionTypeDataConstraintsPropertyMappedToOptionalParameter
  | ErrorType_actionTypeNonExistentParametersUsedInParameterPrefill
  | ErrorType_actionTypeObjectReferenceTypeCreateObjectOptionValue
  | ErrorType_actionTypeStructParameterPrefillReferencesStructPropertyWithIncompatibleCardinality
  | ErrorType_actionTypeStructParameterPrefillsNotReferencingSameObjectTypeProperty
  | ErrorType_actionTypeInvalidLogicRuleForObjectType
  | ErrorType_actionTypeConditionsAreNotIndexedCorrectly
  | ErrorType_actionTypeApiNameConflict
  | ErrorType_actionTypeObjectParameterPropertyValueCannotReferenceStructProperty
  | ErrorType_actionTypeHasRevertsEnabledAndSynchronousWebhook
  | ErrorType_actionTypeValidationsOrderingNotExactlySameAsValidationRuleSet
  | ErrorType_actionTypeValidationsOrderingContainsDuplicates
  | ErrorType_actionTypeHasRevertsEnabledForInvalidObjectTypeStorageBackendCategory
  | ErrorType_actionTypeHasRevertsEnabledForInvalidLinkTypeStorageBackendCategory
  | ErrorType_actionTypeReferencesNonExistentSharedPropertyTypesInInterfaceTypes
  | ErrorType_actionTypeReferencesNonExistentPropertyTypesInObjectTypes
  | ErrorType_actionTypeReferencesNonExistentEntityTypes
  | ErrorType_actionTypeReferencesOptionalSharedPropertyTypesInInterfaceTypes
  | ErrorType_actionTypeActionLogConfiguredForFunctionButFunctionProvenanceIsNotSet
  | ErrorType_actionTypeActionLogReferencesPropertiesOfNonSingletonObject
  | ErrorType_actionTypeActionTypeParametersReferencedInActionLogRuleDoNotExist
  | ErrorType_actionTypeActionLogSummaryContainsObjectParameters
  | ErrorType_actionTypeActionLogReasonCodePropertiesNotMapped
  | ErrorType_actionTypeActionTypeObjectTypesEditedDoNotHaveCorrespondingActionLogValue
  | ErrorType_actionTypeActionLogContainsValuesNotGeneratedByAction
  | ErrorType_actionTypeActionLogRequiredValuesNotAllPresentExactlyOnce
  | ErrorType_actionTypeActionLogObjectTypeIdSuppliedEmpty
  | ErrorType_actionTypeActionLogObjectTypeDoesNotExist
  | ErrorType_actionTypeActionLogPropertyTypeIdReferencedDoesNotExist
  | ErrorType_actionTypeActionLogValueDoesNotMatchObjectPropertyTypes
  | ErrorType_actionTypeActionLogRequiredButNotEnabled
  | ErrorType_actionTypeActionLogSummaryMessagePartTooLong
  | ErrorType_actionTypeActionLogSummaryTooManyMessageParts
  | ErrorType_actionTypeCountExceeded
  | ErrorType_actionTypeButtonTextTooLong
  | ErrorType_actionTypeSuccessMessageTooLong
  | ErrorType_actionTypeTooManyLogicRules
  | ErrorType_actionTypeTooManyParameters
  | ErrorType_actionTypeTooManySections
  | ErrorType_actionTypeTooManySubmissionCriteria
  | ErrorType_actionTypeFailureMessageTooLong
  | ErrorType_actionTypeStaticValueTooLong
  | ErrorType_actionTypeDefaultStringTooLong
  | ErrorType_actionTypeDisplayNameTooLong
  | ErrorType_actionTypeDescriptionTooLong
  | ErrorType_actionTypeSectionDisplayNameTooLong
  | ErrorType_actionTypeSectionDescriptionTooLong
  | ErrorType_actionTypeParameterDisplayNameTooLong
  | ErrorType_actionTypeParameterDescriptionTooLong
  | ErrorType_actionTypeStructParameterFieldsListLengthValidationCannotBeDefined
  | ErrorType_actionTypeStructParameterShouldNotHaveTopLevelPrefillDefined
  | ErrorType_actionTypeStructParameterFieldAllowedValueIsIncompatibleWithFieldType
  | ErrorType_actionTypeStructParameterFieldRenderHintIsIncompatibleWithFieldTypeAndAllowedValue
  | ErrorType_actionTypeStructParameterHasInvalidTopLevelAllowedValues
  | ErrorType_actionTypeParameterCbacConstraintContainsInvalidMaxClassification
  | ErrorType_actionTypeCbacConstraintOnNonSecuringCbacParameterMissingMaxClassification
  | ErrorType_actionTypeStringCbacPickerTypeclassUsedOnNonStringParameter
  | ErrorType_actionTypeInsufficientPermissionsToAddStringCbacPickerTypeclass
  | ErrorType_actionTypeInsufficientPermissionsToModifyMaxClassificationOfNonSecuringCbacParameter
  | ErrorType_actionTypeTooManyTypeClasses
  | ErrorType_actionTypeTypeClassKindTooLong
  | ErrorType_actionTypeTypeClassValueTooLong
  | ErrorType_actionTypeInvalidApiNamePrefixes
  | ErrorType_typeGroupCountExceeded
  | ErrorType_typeGroupDisplayNameTooLong
  | ErrorType_typeGroupDescriptionTooLong;

export interface IndeterminateErrorCategory {
}
/**
 * Two interface link types have the same API name. API Names must be unique within the context of an interface. I.e. across all links in an interface and its super interfaces.
 */
export interface InterfaceLinkTypeApiNameConflict {
}
/**
 * The description of an interface link type exceeds the maximum length.
 */
export interface InterfaceLinkTypeDescriptionTooLong {
}
/**
 * The display name of an interface link type exceeds the maximum length.
 */
export interface InterfaceLinkTypeDisplayNameTooLong {
}
/**
 * The interface contains duplicate properties. This may be due to declaring a property as both required and optional.
 */
export interface InterfaceTypeContainsDuplicateProperties {
}
/**
 * An interface contains too many properties. This includes both properties coming from the interface as well as those coming from extended interfaces. It also counts both optional and required properties.
 */
export interface InterfaceTypeContainsTooManyProperties {
}
/**
 * Interfaces are currently prevented from being implemented by large numbers of object types for stability purposes.
 */
export interface InterfaceTypeCountExceeded {
}
/**
 * The interface specifies a property as optional even though it inherits the same property as required from an extended interface.
 */
export interface InterfaceTypeDeclaresRequiredParentPropertyAsOptional {
}
/**
 * The description of an interface type exceeds the maximum length.
 */
export interface InterfaceTypeDescriptionTooLong {
}
/**
 * The display name of an interface type exceeds the maximum length.
 */
export interface InterfaceTypeDisplayNameTooLong {
}
export interface InterfaceTypeErrorCategory_definition {
  type: "definition";
  definition: InvalidInterfaceTypeDefinition;
}

export interface InterfaceTypeErrorCategory_reference {
  type: "reference";
  reference: InvalidInterfaceTypeReference;
}

export interface InterfaceTypeErrorCategory_indeterminate {
  type: "indeterminate";
  indeterminate: IndeterminateErrorCategory;
}
export type InterfaceTypeErrorCategory =
  | InterfaceTypeErrorCategory_definition
  | InterfaceTypeErrorCategory_reference
  | InterfaceTypeErrorCategory_indeterminate;

/**
 * An interface cannot extend interface types that do not exist or are deleted in the same request.
 */
export interface InterfaceTypeExtendedDoesNotExistOrDeleted {
}
/**
 * An interface extends, including inherited extensions, more than the maximum allowed. If InterfaceC extends InterfaceB which extends InterfaceA, then InterfaceC has an extension count of 2.
 */
export interface InterfaceTypeExtendsTooManyInterfaces {
}
/**
 * Interfaces are currently prevented from being implemented by large numbers of object types for stability purposes.
 */
export interface InterfaceTypeImplementedTooOften {
}
/**
 * The specified API name for the interface type is invalid. See documentation for details.
 */
export interface InterfaceTypeInvalidApiName {
}
/**
 * The interfaces' API name prefixes do not match the API Namespace ID stored in Compass and therefore are invalid.
 */
export interface InterfaceTypeInvalidApiNamePrefixes {
}
/**
 * A linked entity is not present in the ontology.
 */
export interface InterfaceTypeLinkedEntityTypeNotFound {
}
/**
 * An interface cannot refer to shared property types that do not exist or are deleted in the same request.
 */
export interface InterfaceTypeReferencedSharedPropertyTypesDoNotExistOrDeleted {
}
/**
 * Interfaces cannot be deleted if they are referenced by object types or other interface types.
 */
export interface InterfaceTypeToDeleteIsReferencedByExistingTypes {
}
/**
 * Cannot remove shared property types from interfaces that have an active status.
 */
export interface InterfaceTypeWithActiveStatusRemovingSharedPropertyTypes {
}
/**
 * The Intermediary LinkType is referencing ObjectTypes with a non-one-to-many relationship on one of the sides.
 */
export interface IntermediaryLinkTypeInvalidAssociatedLinkType {
}
/**
 * The Intermediary LinkType is not in Object Storage V2.
 */
export interface IntermediaryLinkTypeMustBeOsv2 {
}
/**
 * The Intermediary LinkType is referencing ObjectTypes that are not in Object Storage V2.
 */
export interface IntermediaryLinkTypeReferencedObjectTypesMustBeOsv2 {
}
export interface InvalidActionTypeDefinition_indeterminate {
  type: "indeterminate";
  indeterminate: IndeterminateErrorCategory;
}
export type InvalidActionTypeDefinition =
  InvalidActionTypeDefinition_indeterminate;

export interface InvalidActionTypeParameterDefinition_indeterminate {
  type: "indeterminate";
  indeterminate: IndeterminateErrorCategory;
}
export type InvalidActionTypeParameterDefinition =
  InvalidActionTypeParameterDefinition_indeterminate;

export interface InvalidActionTypeParameterReference_indeterminate {
  type: "indeterminate";
  indeterminate: IndeterminateErrorCategory;
}

export interface InvalidActionTypeParameterReference_notFound {
  type: "notFound";
  notFound: NotFoundErrorCategory;
}
export type InvalidActionTypeParameterReference =
  | InvalidActionTypeParameterReference_indeterminate
  | InvalidActionTypeParameterReference_notFound;

export interface InvalidActionTypeParameterWithIdentifier {
  errorCategory: ActionTypeParameterErrorCategory;
  identifier: _api_ActionTypeParameterIdentifier;
}
export interface InvalidActionTypeReference_indeterminate {
  type: "indeterminate";
  indeterminate: IndeterminateErrorCategory;
}

export interface InvalidActionTypeReference_notFound {
  type: "notFound";
  notFound: NotFoundErrorCategory;
}
export type InvalidActionTypeReference =
  | InvalidActionTypeReference_indeterminate
  | InvalidActionTypeReference_notFound;

export interface InvalidActionTypeWithIdentifier {
  errorCategory: ActionTypeErrorCategory;
  identifier: _api_ActionTypeIdentifier;
}
export interface InvalidEntity_objectType {
  type: "objectType";
  objectType: InvalidObjectTypeWithIdentifier;
}

export interface InvalidEntity_linkType {
  type: "linkType";
  linkType: InvalidLinkTypeWithIdentifier;
}

export interface InvalidEntity_interfaceType {
  type: "interfaceType";
  interfaceType: InvalidInterfaceTypeWithIdentifier;
}

export interface InvalidEntity_actionType {
  type: "actionType";
  actionType: InvalidActionTypeWithIdentifier;
}

export interface InvalidEntity_sharedPropertyType {
  type: "sharedPropertyType";
  sharedPropertyType: InvalidSharedPropertyTypeWithIdentifier;
}

export interface InvalidEntity_typeGroup {
  type: "typeGroup";
  typeGroup: InvalidTypeGroupWithIdentifier;
}

export interface InvalidEntity_ruleSet {
  type: "ruleSet";
  ruleSet: InvalidRuleSetWithIdentifier;
}

export interface InvalidEntity_workflow {
  type: "workflow";
  workflow: InvalidWorkflowWithIdentifier;
}
/**
 * InvalidEntity includes the identifiers of the entity, as well as the {entity}ErrorCategory.
 *
 * Examples of error categories are InvalidObjectTypeDefinition (which could be extended to one category per OT
 * field: invalidObjectTypeApiName, invalidStatus, etc.), InvalidObjectPropertyTypeDefinition, and others.
 * These can also contain non-identifier strongly typed fields.
 */
export type InvalidEntity =
  | InvalidEntity_objectType
  | InvalidEntity_linkType
  | InvalidEntity_interfaceType
  | InvalidEntity_actionType
  | InvalidEntity_sharedPropertyType
  | InvalidEntity_typeGroup
  | InvalidEntity_ruleSet
  | InvalidEntity_workflow;

export interface InvalidInterfaceTypeDefinition_indeterminate {
  type: "indeterminate";
  indeterminate: IndeterminateErrorCategory;
}
export type InvalidInterfaceTypeDefinition =
  InvalidInterfaceTypeDefinition_indeterminate;

export interface InvalidInterfaceTypeReference_indeterminate {
  type: "indeterminate";
  indeterminate: IndeterminateErrorCategory;
}

export interface InvalidInterfaceTypeReference_notFound {
  type: "notFound";
  notFound: NotFoundErrorCategory;
}
export type InvalidInterfaceTypeReference =
  | InvalidInterfaceTypeReference_indeterminate
  | InvalidInterfaceTypeReference_notFound;

export interface InvalidInterfaceTypeWithIdentifier {
  errorCategory: InterfaceTypeErrorCategory;
  identifier: _api_InterfaceTypeRidOrIdInRequest;
}
export interface InvalidLinkTypeDefinition_indeterminate {
  type: "indeterminate";
  indeterminate: IndeterminateErrorCategory;
}
export type InvalidLinkTypeDefinition = InvalidLinkTypeDefinition_indeterminate;

export interface InvalidLinkTypeReference_indeterminate {
  type: "indeterminate";
  indeterminate: IndeterminateErrorCategory;
}

export interface InvalidLinkTypeReference_notFound {
  type: "notFound";
  notFound: NotFoundErrorCategory;
}
export type InvalidLinkTypeReference =
  | InvalidLinkTypeReference_indeterminate
  | InvalidLinkTypeReference_notFound;

export interface InvalidLinkTypeWithIdentifier {
  errorCategory: LinkTypeErrorCategory;
  identifier: _api_LinkTypeIdentifier;
}
export interface InvalidObjectDatasourceDefinition_indeterminate {
  type: "indeterminate";
  indeterminate: IndeterminateErrorCategory;
}
export type InvalidObjectDatasourceDefinition =
  InvalidObjectDatasourceDefinition_indeterminate;

export interface InvalidObjectPropertyTypeDefinition_indeterminate {
  type: "indeterminate";
  indeterminate: IndeterminateErrorCategory;
}
export type InvalidObjectPropertyTypeDefinition =
  InvalidObjectPropertyTypeDefinition_indeterminate;

export interface InvalidObjectPropertyTypeReference_indeterminate {
  type: "indeterminate";
  indeterminate: IndeterminateErrorCategory;
}

export interface InvalidObjectPropertyTypeReference_notFound {
  type: "notFound";
  notFound: NotFoundErrorCategory;
}
export type InvalidObjectPropertyTypeReference =
  | InvalidObjectPropertyTypeReference_indeterminate
  | InvalidObjectPropertyTypeReference_notFound;

export interface InvalidObjectPropertyTypeWithIdentifier {
  errorCategory: ObjectPropertyTypeErrorCategory;
  identifier: _api_PropertyTypeIdentifier;
}
export interface InvalidObjectTypeDatasourceWithIdentifier {
  errorCategory: ObjectTypeDatasourceErrorCategory;
  identifier: _api_DatasourceIdentifier;
}
export interface InvalidObjectTypeDefinition_indeterminate {
  type: "indeterminate";
  indeterminate: IndeterminateErrorCategory;
}
export type InvalidObjectTypeDefinition =
  InvalidObjectTypeDefinition_indeterminate;

export interface InvalidObjectTypeReference_indeterminate {
  type: "indeterminate";
  indeterminate: IndeterminateErrorCategory;
}

export interface InvalidObjectTypeReference_notFound {
  type: "notFound";
  notFound: NotFoundErrorCategory;
}
export type InvalidObjectTypeReference =
  | InvalidObjectTypeReference_indeterminate
  | InvalidObjectTypeReference_notFound;

export interface InvalidObjectTypeWithIdentifier {
  errorCategory: ObjectTypeErrorCategory;
  identifier: _api_ObjectTypeIdentifier;
}
export interface InvalidRuleSetWithIdentifier {
  identifier: _api_formatting_RuleSetIdentifier;
}
export interface InvalidSharedPropertyTypeDefinition_indeterminate {
  type: "indeterminate";
  indeterminate: IndeterminateErrorCategory;
}
export type InvalidSharedPropertyTypeDefinition =
  InvalidSharedPropertyTypeDefinition_indeterminate;

export interface InvalidSharedPropertyTypeReference_indeterminate {
  type: "indeterminate";
  indeterminate: IndeterminateErrorCategory;
}

export interface InvalidSharedPropertyTypeReference_notFound {
  type: "notFound";
  notFound: NotFoundErrorCategory;
}
export type InvalidSharedPropertyTypeReference =
  | InvalidSharedPropertyTypeReference_indeterminate
  | InvalidSharedPropertyTypeReference_notFound;

export interface InvalidSharedPropertyTypeWithIdentifier {
  errorCategory: SharedPropertyTypeErrorCategory;
  identifier: _api_SharedPropertyTypeRidOrIdInRequest;
}
export interface InvalidTypeGroupWithIdentifier {
  identifier: _api_TypeGroupRidOrIdInRequest;
}
/**
 * Workflows are deprecated.
 */
export interface InvalidWorkflowWithIdentifier {
}
/**
 * The user does not have permissions to edit privileged provenance on ontology entities metadata.
 */
export interface LinkTypeCannotEditPrivilegedProvenance {
}
/**
 * An error representing when the property of a many-to-many link type is backed by a column and that column is missing from the backing datasource.
 */
export interface LinkTypeColumnMissingFromBackingDatasource {
}
/**
 * The same datasource is being re-used across multiple link types which do not allow re-use. Datasources can only be re-used if all the link types are on object storage V2.
 */
export interface LinkTypeDatasourceAlreadyExists {
}
/**
 * An error representing when the schema for a datasource on a link type cannot be found.
 */
export interface LinkTypeDatasourceSchemaNotFound {
}
/**
 * The display name of a link type exceeds the maximum length.
 */
export interface LinkTypeDisplayNameTooLong {
}
/**
 * Attempted to change editability of an ObjectType during the migration to ObjectStorageV2. Wait until the migration has completed before changing value of `arePatchesEnabled`.
 */
export interface LinkTypeEditabilityChangeDuringV1ToV2Migration {
}
/**
 * Invalid LinkTypeEntityMetadata encountered. An ObjectDbRid identifier cannot be longer than 80 bytes, when encoded in UTF-8.
 */
export interface LinkTypeEntityMetadataModifyRequestWithInvalidObjectDbRid {
}
/**
 * Invalid LinkTypeEntityMetadata encountered. An ObjectDbType identifier cannot be longer than 20 bytes, when encoded in UTF-8.
 */
export interface LinkTypeEntityMetadataModifyRequestWithInvalidObjectDbType {
}
export interface LinkTypeErrorCategory_definition {
  type: "definition";
  definition: InvalidLinkTypeDefinition;
}

export interface LinkTypeErrorCategory_reference {
  type: "reference";
  reference: InvalidLinkTypeReference;
}

export interface LinkTypeErrorCategory_indeterminate {
  type: "indeterminate";
  indeterminate: IndeterminateErrorCategory;
}
export type LinkTypeErrorCategory =
  | LinkTypeErrorCategory_definition
  | LinkTypeErrorCategory_reference
  | LinkTypeErrorCategory_indeterminate;

/**
 * The foreign key specified by a link type doesn't exist as a property on the specified object type.
 */
export interface LinkTypeForeignKeyReferenceDoesNotExist {
}
/**
 * The foreign key property is an invalid type.
 */
export interface LinkTypeForeignKeyTypeMismatch {
}
/**
 * A LinkType cannot have more than one datasource.
 */
export interface LinkTypeHasMultipleDatasources {
}
/**
 * A LinkType must have a datasource.
 */
export interface LinkTypeHasNoDatasources {
}
/**
 * The specified API Name for the LinkType is invalid. See documentation for ApiName for details.
 */
export interface LinkTypeInvalidApiName {
}
/**
 * The entities' API name prefixes do not match the API Namespace ID stored in Compass and therefore are invalid.
 */
export interface LinkTypeInvalidApiNamePrefixes {
}
/**
 * Deleting a LinkType without deleting all its datasources is not allowed.
 */
export interface LinkTypeInvalidDeletionsWithReferencingDatasources {
}
/**
 * The foreign key is a derived property type, this is not allowed.
 */
export interface LinkTypeInvalidDerivedForeignKey {
}
/**
 * The supplied value for object type Visibility was invalid.
 */
export interface LinkTypeInvalidOneToManyCardinalityHint {
}
/**
 * The primary key specified by a link type doesn't exist as a property on the specified object type or if the specified primary key is not actually the primary key on the object.
 */
export interface LinkTypeInvalidPrimaryKeyReference {
}
/**
 * Attempted revert of migration to ObjectStorageV2 is invalid. StorageBackend has to be set to the value before the migration (ObjectStorageV1 or ReadOnlyV1V2).
 */
export interface LinkTypeInvalidRevertV1ToV2Migration {
}
/**
 * The supplied value for LinkType Visibility was invalid.
 */
export interface LinkTypeInvalidVisibility {
}
/**
 * The count of many-to-many link types exceeds the allowed limit.
 */
export interface LinkTypeManyToManyCountExceeded {
}
/**
 * An error representing when a many-to-many link type datasource has a column referencing a primary key that does not exist on the referenced object type.
 */
export interface LinkTypeManyToManyDatasourcePrimaryKeyDoesNotExist {
}
/**
 * A writeback dataset is present on an ontology storage V2 link type.
 */
export interface LinkTypeManyToManyWritebackDatasetPresentOnOsv2 {
}
/**
 * The count of one-to-many link types exceeds the allowed limit.
 */
export interface LinkTypeOneToManyCountExceeded {
}
/**
 * One to many LinkTypes cannot have any datasources.
 */
export interface LinkTypeOneToManyWithDatasourcesNotAllowed {
}
/**
 * Cannot create Link Type with Storage Backend set to ObjectStorageV1. Please use ObjectStorageV2 instead.
 */
export interface LinkTypeOsv1NotAllowed {
}
/**
 * Invalid LinkTypeEntityMetadata encountered. More than one cluster is enabled for an ObjectDbType, but this is currently unsupported.
 */
export interface LinkTypeOsv2WithMultipleClustersEnabled {
}
/**
 * There is a primary and foreign key type mismatch.
 */
export interface LinkTypePrimaryAndForeignKeyTypeMismatch {
}
/**
 * Multiple properties of the link type reference the same backing column.
 */
export interface LinkTypePropertiesReferenceSameColumn {
}
/**
 * The property of the many-to-many link type has a type that is incompatible with the type of the backing data.
 */
export interface LinkTypePropertyIncompatibleBackingColumnType {
}
/**
 * StorageBackend ReadOnlyV1V2 is not allowed. Use StorageBackend ObjectStorageV2 instead.
 */
export interface LinkTypeReadOnlyV1V2NotAllowed {
}
/**
 * Invalid LinkTypeEntityMetadata encountered. Storage Backend set to ReadOnlyV1V2 but patches are enabled.
 */
export interface LinkTypeReadOnlyV2WithPatchesEnabled {
}
/**
 * The specified datasources do not exist.
 */
export interface LinkTypeReferencedDatasourceNotFound {
}
/**
 * The request to modify the ontology deletes LinkTypes that are still in use.
 */
export interface LinkTypeReferencedLinkTypesDeleted {
}
/**
 * The request to modify the ontology references some missing LinkTypes.
 */
export interface LinkTypeReferencedLinkTypesNotFound {
}
/**
 * The request to modify the ontology deletes ObjectTypes that are still in use.
 */
export interface LinkTypeReferencedObjectTypesDeleted {
}
/**
 * A link type references missing ObjectTypes.
 */
export interface LinkTypeReferencedObjectTypesNotFound {
}
/**
 * There is a conflict between Link Type Status, they must be compatible.
 */
export interface LinkTypeStatusAndObjectTypePropertyTypeStatusConflict {
}
/**
 * Link Type Status conflicts with Object types' statuses.
 */
export interface LinkTypeStatusAndObjectTypeStatusConflict {
}
/**
 * Link Type status conflicts with property types' statuses of the associated object types.
 */
export interface LinkTypeStatusAndPropertyTypeStatusConflict {
}
/**
 * The many to many datasource backing a link type has an invalid retention policy.
 */
export interface LinkTypeStreamDatasourceInvalidRetentionWindow {
}
/**
 * Link types cannot be deleted if they are referenced by an object type's interface implementation.
 */
export interface LinkTypeToDeleteIsReferencedByExistingTypes {
}
/**
 * The number of type classes for a link type exceeds the allowed limit.
 */
export interface LinkTypeTooManyTypeClasses {
}
/**
 * The type class kind of a link type exceeds the maximum length.
 */
export interface LinkTypeTypeClassKindTooLong {
}
/**
 * The type class value of a link type exceeds the maximum length.
 */
export interface LinkTypeTypeClassValueTooLong {
}
/**
 * Invalid LinkTypeEntityMetadata encountered. Storage Backend set to ObjectStorageV1 but one or more ObjectStorageV2 ObjectDbs are enabled.
 */
export interface LinkTypeV1WithOsv2ObjectDbsEnabled {
}
export interface NotFoundErrorCategory {
}
export interface ObjectPropertyTypeErrorCategory_definition {
  type: "definition";
  definition: InvalidObjectPropertyTypeDefinition;
}

export interface ObjectPropertyTypeErrorCategory_reference {
  type: "reference";
  reference: InvalidObjectPropertyTypeReference;
}

export interface ObjectPropertyTypeErrorCategory_indeterminate {
  type: "indeterminate";
  indeterminate: IndeterminateErrorCategory;
}
export type ObjectPropertyTypeErrorCategory =
  | ObjectPropertyTypeErrorCategory_definition
  | ObjectPropertyTypeErrorCategory_reference
  | ObjectPropertyTypeErrorCategory_indeterminate;

/**
 * An object type attempting to be deleted is still an enabled Action Log object type.
 */
export interface ObjectTypeActionLogDeletionStillReferencesEnabledActionType {
}
/**
 * The alias of an object type exceeds the maximum length.
 */
export interface ObjectTypeAliasTooLong {
}
/**
 * Assumed markings were specified in security definition of a property security group that does not have a backing datasource (currently this applies only to edits-only datasources).
 */
export interface ObjectTypeAssumedMarkingSpecifiedWithoutBackingDatasource {
}
/**
 * The specified ObjectTypeModification is invalid. Only one of the fields replaceBy and replaceById can be set in DeprecatedPropertyTypeStatusModification.
 */
export interface ObjectTypeAtMostOneOfReplacedByAndReplacedByIdCanBeSetOnPropertyTypeStatus {
}
/**
 * Attachment properties should not be primary keys or titles.
 */
export interface ObjectTypeAttachmentPropertyShouldNotBePrimaryKeyOrTitle {
}
/**
 * Attachment properties should not be marked as indexed for search.
 */
export interface ObjectTypeAttachmentPropertyShouldNotBeSearchable {
}
/**
 * Attachment properties should not have any render hints defined.
 */
export interface ObjectTypeAttachmentPropertyShouldNotHaveRenderHints {
}
/**
 * One or more property types referenced in a BaseFormatter definition do not exist.
 */
export interface ObjectTypeBaseFormatterReferencedPropertiesDoNotExist {
}
/**
 * Mapping both OSv1 types and types with derived properties is disallowed.
 */
export interface ObjectTypeBothDerivedPropertyTypeAndObjectStorageV1MappedToGotham {
}
/**
 * The user does not have permissions to edit privileged provenance on ontology entities metadata.
 */
export interface ObjectTypeCannotEditPrivilegedProvenance {
}
/**
 * Cannot enable edits history for an object type with unsupported property types.
 */
export interface ObjectTypeCannotEnableEditsHistoryWithUnsupportedPropertyTypes {
}
/**
 * It is not possible to specify both 'analyzer' and 'experimental-analyzer' type classes kind.
 */
export interface ObjectTypeCannotUseAnalyzerExperimentalAndAnalyzerOverride {
}
/**
 * Cbac marking properties must be set as non empty properties.
 */
export interface ObjectTypeCbacMarkingPropertyTypeMustBeNonEmpty {
}
/**
 * A property within the object type is backed by a column and that column is missing from the backing datasource.
 */
export interface ObjectTypeColumnMissingFromBackingDatasource {
}
/**
 * Composite primary keys are not supported.
 */
export interface ObjectTypeCompositePrimaryKeysNotAllowed {
}
/**
 * An ObjectType cannot be mapped to Gotham if it contains unmapped SharedPropertyType(s).
 */
export interface ObjectTypeContainsUnmappedSharedPropertyTypes {
}
/**
 * The count of object types exceeds the allowed limit.
 */
export interface ObjectTypeCountExceeded {
}
/**
 * Data constraints cannot be associated with a derived property type. Derived property types are always nullable.
 */
export interface ObjectTypeDataConstraintAssociatedWithDerivedPropertyType {
}
/**
 * The configuration to allow DataNullabilityV2 data constraint has not been enabled.
 */
export interface ObjectTypeDataNullabilityV2NotEnabled {
}
/**
 * Modifying the DataSecurity of an object type datasource is not supported on a branch.
 */
export interface ObjectTypeDataSecurityModifiedOnBranch {
}
/**
 * Invalid ObjectTypeEntityMetadata encountered. Dataset datasource V2 is supported only by object storage v2.
 */
export interface ObjectTypeDatasetDatasourceV2SupportedOnlyWithObjectStorageV2 {
}
/**
 * The same datasource is being re-used across multiple object types which do not allow re-use. Datasources can only be re-used if all the object types are on object storage V2.
 */
export interface ObjectTypeDatasourceAlreadyExists {
}
/**
 * An error representing when an object type datasource has columns that do not map to a property on the corresponding object type.
 */
export interface ObjectTypeDatasourceColumnMappingMismatch {
}
export interface ObjectTypeDatasourceErrorCategory_definition {
  type: "definition";
  definition: InvalidObjectDatasourceDefinition;
}
export type ObjectTypeDatasourceErrorCategory =
  ObjectTypeDatasourceErrorCategory_definition;

/**
 * The GeotimeSeriesIntegrationRid for a GEOTIME_SERIES datasource must have service 'geotime-catalog' and type 'integration'.
 */
export interface ObjectTypeDatasourceGeotimeSeriesIntegrationRidIsInvalid {
}
/**
 * The schema for a datasource on an object type cannot be found.
 */
export interface ObjectTypeDatasourceSchemaNotFound {
}
/**
 * Object type datasources cannot have their assumed markings updated. Datasource needs to recreated with new rid, when the set of assumed marking changes.
 */
export interface ObjectTypeDatasourceUpdateModificationCannotChangeAssumedMarkings {
}
/**
 * An error representing when an object type datasource does not include the primary key property of the corresponding object type.
 */
export interface ObjectTypeDatasourceWithoutPrimaryKeyColumn {
}
/**
 * The derived property's base type has changed, either because the type it is deriving from has changed, or because the derived property definition has changed. However, the object type it belongs to is not part of the modification, so this change is not allowed. The object type must be modified in the same request for it to accept the new derived property base type. A no-op modification suffices.
 */
export interface ObjectTypeDerivedPropertyBaseTypeChangedWhenObjectTypeIsNotModified {
}
/**
 * The derived properties definition backs a shared property type, but its definition does not match the shared property type definition.
 */
export interface ObjectTypeDerivedPropertyDefinitionDoesNotMatchSharedPropertyType {
}
/**
 * The derived properties definition is referring to link type that does not exist or is deleted.
 */
export interface ObjectTypeDerivedPropertyDefinitionLinkTypeNotFoundOrDeleted {
}
/**
 * The type of the foreign property type that the derived property definition is deriving from is not compatible with the derived property definition. For example, if the definition is "average", the foreign property type must be of a numeric base type.
 */
export interface ObjectTypeDerivedPropertyIncompatibleDefinitionAndForeignPropertyBaseType {
}
/**
 * The link type in the derived property definition is not valid for the derived property definition. For example, aggregation must be performed on a "many" side of a link, and linked property must be on an "one" side.
 */
export interface ObjectTypeDerivedPropertyLinkDefinitionCardinalityInvalid {
}
/**
 * The derived properties definition does not form a valid chain with the given link definitions.
 */
export interface ObjectTypeDerivedPropertyLinkDoesNotFormChain {
}
/**
 * Multi-hop link derived properties cannot specify more steps than the allowed maximum number of steps.
 */
export interface ObjectTypeDerivedPropertyMultiHopLinkExceedsMaximumStepCount {
}
/**
 * Multi-hop link derived properties must specify at least one step.
 */
export interface ObjectTypeDerivedPropertyMultiHopLinkIsEmpty {
}
/**
 * A derived property type is deriving from another derived property. This is not allowed.
 */
export interface ObjectTypeDerivedPropertyTypeDependOnAnotherDerivedProperty {
}
/**
 * The title property type of an object type cannot be backed by a derived properties datasource.
 */
export interface ObjectTypeDerivedPropertyTypeIsTitle {
}
/**
 * The description of an object type exceeds the maximum length.
 */
export interface ObjectTypeDescriptionTooLong {
}
/**
 * The display name of an object type exceeds the maximum length.
 */
export interface ObjectTypeDisplayNameTooLong {
}
/**
 * Attempted to change editability of an ObjectType during the migration to ObjectStorageV2. Wait until the migration has completed before changing value of `arePatchesEnabled`.
 */
export interface ObjectTypeEditabilityChangeDuringV1ToV2Migration {
}
/**
 * The requested edits resolution strategy modification only allowed for V2 objects.
 */
export interface ObjectTypeEditsResolutionStrategyModificationOnlyAllowedForOsv2 {
}
/**
 * The timestamp property of a requested edits resolution strategy modification was not found.
 */
export interface ObjectTypeEditsResolutionStrategyModificationTimestampPropertyNotFound {
}
/**
 * The timestamp property of a requested edits resolution strategy modification was not present on the datasource.
 */
export interface ObjectTypeEditsResolutionStrategyModificationTimestampPropertyNotInDatasource {
}
/**
 * Modification attempted to enable edits history for an object type, but Edits History is disallowed in this stack.
 */
export interface ObjectTypeEnablingEditsHistoryNotSupported {
}
/**
 * Invalid ObjectTypeEntityMetadata encountered. The ObjectDbConfig has invalid content.
 */
export interface ObjectTypeEntityMetadataModifyRequestWithInvalidObjectDbConfigValue {
}
/**
 * Invalid ObjectTypeEntityMetadata encountered. An ObjectDbRid identifier cannot be longer than 80 bytes, when encoded in UTF-8.
 */
export interface ObjectTypeEntityMetadataModifyRequestWithInvalidObjectDbRid {
}
/**
 * Invalid ObjectTypeEntityMetadata encountered. An ObjectDbType identifier cannot be longer than 20 bytes, when encoded in UTF-8.
 */
export interface ObjectTypeEntityMetadataModifyRequestWithInvalidObjectDbType {
}
export interface ObjectTypeErrorCategory_definition {
  type: "definition";
  definition: InvalidObjectTypeDefinition;
}

export interface ObjectTypeErrorCategory_propertyType {
  type: "propertyType";
  propertyType: InvalidObjectPropertyTypeWithIdentifier;
}

export interface ObjectTypeErrorCategory_datasource {
  type: "datasource";
  datasource: InvalidObjectTypeDatasourceWithIdentifier;
}

export interface ObjectTypeErrorCategory_reference {
  type: "reference";
  reference: InvalidObjectTypeReference;
}

export interface ObjectTypeErrorCategory_indeterminate {
  type: "indeterminate";
  indeterminate: IndeterminateErrorCategory;
}
export type ObjectTypeErrorCategory =
  | ObjectTypeErrorCategory_definition
  | ObjectTypeErrorCategory_propertyType
  | ObjectTypeErrorCategory_datasource
  | ObjectTypeErrorCategory_reference
  | ObjectTypeErrorCategory_indeterminate;

/**
 * The event metadata contains a property type id that is not present in the object's properties.
 */
export interface ObjectTypeEventMetadataReferencesNonExistentProperty {
}
/**
 * The derived properties definition is referring to a foreign property type that does not exist or is deleted.
 */
export interface ObjectTypeForeignPropertyTypeInDerivedPropertyDefinitionNotFound {
}
/**
 * Geotime series datasource references properties that do not exist on the object type.
 */
export interface ObjectTypeGeotimeSeriesDatasourceDoesNotReferenceExistingProperties {
}
/**
 * A geotime series datasource references non-GTSR properties.
 */
export interface ObjectTypeGeotimeSeriesDatasourceDoesNotReferenceGeotimeSeriesProperties {
}
/**
 * Geotime series datasources and Geotime series reference properties can only be used if Geotime Catalog is installed.
 */
export interface ObjectTypeGeotimeSeriesDatasourceGeotimeCatalogIsNotInstalled {
}
/**
 * Geotime series reference properties can only be used on ObjectTypes stored in Object Storage V2.
 */
export interface ObjectTypeGeotimeSeriesReferenceIsNotOnObjectStorageV2 {
}
/**
 * Geotime series reference properties cannot be the title property.
 */
export interface ObjectTypeGeotimeSeriesReferencePropertyIsTitle {
}
/**
 * Geotime series reference properties should not have any render hints defined.
 */
export interface ObjectTypeGeotimeSeriesReferencePropertyShouldNotHaveRenderHints {
}
/**
 * Geotime series reference properties are not referenced by any datasources.
 */
export interface ObjectTypeGeotimeSeriesReferencePropertyTypeHasNoDatasources {
}
/**
 * An ObjectType cannot be created with a GothamMapping URI that has been used already. This means that a Gotham object is being attempted to be imported more than once, which is not allowed.
 */
export interface ObjectTypeGothamMappingAlreadyInUse {
}
/**
 * The restricted view backing the object has a policy which references the column name of a column which is not mapped to any property of the object.
 */
export interface ObjectTypeGpsPolicyColumnsFromRestrictedViewsAreMapped {
}
/**
 * Only privileged user can modify the URI for an OT's GothamMapping once it has already been mapped.
 */
export interface ObjectTypeHasModifiedGothamUris {
}
/**
 * Only privileged user can modify propertyMapping. Returns ObjectTypeRids of OTs that were attempted to have their local property gotham mapping modified.
 */
export interface ObjectTypeHasModifiedLocalPropertyGothamMapping {
}
/**
 * An object type must have a datasource.
 */
export interface ObjectTypeHasNoDatasources {
}
/**
 * ObjectType must specify a primary key.
 */
export interface ObjectTypeHasNoPrimaryKey {
}
/**
 * Object type has more backing datasources than allowed.
 */
export interface ObjectTypeHasTooManyDatasources {
}
/**
 * An object type implements more than the allowed number of interfaces. The number of interfaces implemented includes both explicit and implicit implementations. If an object type implements InterfaceB which extends InterfaceA, then the number of implementations the object type has is 2.
 */
export interface ObjectTypeImplementsTooManyInterfaces {
}
/**
 * Inline actions cannot be associated with a derived property type.
 */
export interface ObjectTypeInlineActionAssociatedWithDerivedPropertyType {
}
/**
 * Inline ActionTypes cannot be associated with primary key PropertyTypes.
 */
export interface ObjectTypeInlineActionTypesCannotBeAssociatedWithObjectTypePrimaryKeys {
}
/**
 * ObjectTypes in private packages cannot be mapped to Gotham.
 */
export interface ObjectTypeInPrivatePackageContainsGothamMapping {
}
/**
 * An interface property is fulfilled more than once for an interface and the multiple implementations are not the same. When an interface and its super interface are both explicitly implemented by an object type, the implementation for an inherited property on the interface must be the same as the implementation of the property for the super interface. Additionally, the implementation of two child interfaces of the same super interface must have the same implementation for any inherited properties.
 */
export interface ObjectTypeInterfaceImplementationConflictingPropertyImplementation {
}
/**
 * The object type was declared to implement the interface but is missing one or more shared property types from the interface.
 */
export interface ObjectTypeInterfaceImplementationDoesNotImplementAllProperties {
}
/**
 * The object type implementing the interface has a property fulfilling the shared property that does not exist.
 */
export interface ObjectTypeInterfaceImplementationImplementsPropertyThatDoesNotExist {
}
/**
 * The object type implements the interface but the data constraints of the property do not match.
 */
export interface ObjectTypeInterfaceImplementationInvalidDataConstraints {
}
/**
 * Expected local property implementing interface property to have the same value for indexed for search, but it did not.
 */
export interface ObjectTypeInterfaceImplementationInvalidIsIndexedForSearch {
}
/**
 * An interface link type constraint is not fulfilled because the local linked entity type is different than the interface link type's linked entity type.
 */
export interface ObjectTypeInterfaceImplementationInvalidLinkedEntityImplementingLinkType {
}
/**
 * An interface link type constraint is fulfilled more than once for an interface and the multiple implementations are not the same. When an interface and its super interface are both explicitly implemented by an object type, the implementation for an inherited link on the interface must be the same as the implementation of the link for the super interface. Additionally, the implementation of two child interfaces of the same super interface must have the same implementation for any inherited links.
 */
export interface ObjectTypeInterfaceImplementationLinkTypeImplementedMoreThanOnce {
}
/**
 * Expected local property implementing interface property to have the same type, but it did not.
 */
export interface ObjectTypeInterfaceImplementationPropertyHasDifferentType {
}
/**
 * The object type specifies an implementation mapping for an interface property which does not exist.
 */
export interface ObjectTypeInterfaceImplementationPropertyNotFound {
}
/**
 * The object type implements an interface by explicitly mapping properties. One of the SPTs on the interface has the same apiName as a local property on the object type without the two being explicitly mapped. This is disallowed.
 */
export interface ObjectTypeInterfaceImplementationPropertyTypesHaveConflictingApiNames {
}
/**
 * The object type implements the interface but the property type classes do not match.
 */
export interface ObjectTypeInterfaceImplementationTypeClassesDoNotMatch {
}
/**
 * The object type implements the interface but the value type of the property does not match the value type of the interface property.
 */
export interface ObjectTypeInterfaceImplementationValueTypeDoesNotMatch {
}
/**
 * The object type specifies an interface link mapping for an interface link which does not exist.
 */
export interface ObjectTypeInterfaceLinkNotFound {
}
/**
 * Interface link type with a SINGLE cardinality is implemented more than once.
 */
export interface ObjectTypeInterfaceLinkTypeImplementedTooOften {
}
/**
 * The supplied value for Analyzer in a string property was invalid.
 */
export interface ObjectTypeInvalidAnalyzer {
}
/**
 * The specified ObjectType API Name is invalid. See documentation for ApiName for details.
 */
export interface ObjectTypeInvalidApiName {
}
/**
 * The entities' API name prefixes do not match the API Namespace ID stored in Compass and therefore are invalid.
 */
export interface ObjectTypeInvalidApiNamePrefixes {
}
/**
 * The base property type of an array property type is not supported.
 */
export interface ObjectTypeInvalidArrayBasePropertyType {
}
/**
 * Interface link type with a SINGLE cardinality is implemented by a link type with a many-to-many or a one-to-many cardinality.
 */
export interface ObjectTypeInvalidCardinalityImplementingInterfaceLinkType {
}
/**
 * Deleting an object type without deleting all its datasources is not allowed.
 */
export interface ObjectTypeInvalidDeletionsWithReferencingDatasources {
}
/**
 * The supplied value for Icon color is invalid.
 */
export interface ObjectTypeInvalidIconColor {
}
/**
 * The supplied value for Icon type is invalid.
 */
export interface ObjectTypeInvalidIconType {
}
/**
 * The supplied value for Language Analyzer in a string property was invalid.
 */
export interface ObjectTypeInvalidLanguageAnalyzer {
}
/**
 * The provided MarkingType wasn't an allowed value.
 */
export interface ObjectTypeInvalidMarkingPropertyType {
}
/**
 * NonNumericInternalInterpolation had an unknown variant.
 */
export interface ObjectTypeInvalidNonNumericInternalInterpolation {
}
/**
 * A property specified in the datasource definition is not mapped to a property security group or is mapped to more than one property security group.
 */
export interface ObjectTypeInvalidNumberOfPropertyReferencesInPropertySecurityGroup {
}
/**
 * NumericInternalInterpolation had an unknown variant.
 */
export interface ObjectTypeInvalidNumericInternalInterpolation {
}
/**
 * The specified comparison operator cannot be applied to the comparison operands.
 */
export interface ObjectTypeInvalidOperatorForSecurityGroupGranularPolicyOperands {
}
/**
 * The specified API Name for the PropertyType is invalid. See documentation for ApiName for details.
 */
export interface ObjectTypeInvalidPropertyTypeApiName {
}
/**
 * The supplied value for property type Visibility is invalid.
 */
export interface ObjectTypeInvalidPropertyTypeVisibility {
}
/**
 * Attempted revert of migration to ObjectStorageV2 is invalid. StorageBackend has to be set to the value before the migration (ObjectStorageV1 or ReadOnlyV1V2).
 */
export interface ObjectTypeInvalidRevertOsv1ToOsv2Migration {
}
/**
 * SeriesMetadata had an unknown variant.
 */
export interface ObjectTypeInvalidSeriesMetadata {
}
/**
 * The specified ObjectTypeStatus is invalid.
 */
export interface ObjectTypeInvalidStatus {
}
/**
 * The type of this datasource cannot be changed in the requested way. Consider creating a new datasource.
 */
export interface ObjectTypeInvalidTypeChangeOfExistingDatasource {
}
/**
 * The property type is derived from another property type, but its base type is invalid for this purpose.
 */
export interface ObjectTypeInvalidTypeForDerivedProperty {
}
/**
 * The supplied value for object type Visibility is invalid.
 */
export interface ObjectTypeInvalidVisibility {
}
/**
 * All marking properties must be set as non-nullable properties.
 */
export interface ObjectTypeMarkingPropertyTypesMustBeNonNullable {
}
/**
 * Marking property types can only be used on OSv2 backed ObjectTypes.
 */
export interface ObjectTypeMarkingPropertyTypesOnlyAllowedOnOsv2 {
}
/**
 * Media datasources must have at least one media source rid.
 */
export interface ObjectTypeMediaDatasourceDoesNotHaveAnyMediaSourceRids {
}
/**
 * Media set or media set view datasource references properties that do not exist on the object type.
 */
export interface ObjectTypeMediaDatasourceDoesNotReferenceExistingProperties {
}
/**
 * Media set datasource references non-media reference properties.
 */
export interface ObjectTypeMediaDatasourceDoesNotReferenceMediaReferenceProperties {
}
/**
 * Media reference properties can only be used on ObjectTypes stored in object storage V2.
 */
export interface ObjectTypeMediaReferenceIsNotOnObjectStorageV2ObjectType {
}
/**
 * Media reference properties must be mentioned in the 'properties' set of exactly zero or one media source datasource.
 */
export interface ObjectTypeMediaReferencePropertyIsReferencedByMoreThanOneMediaDatasourceType {
}
/**
 * Media reference properties must be mentioned in the 'properties' set of exactly zero or one media source datasource.
 */
export interface ObjectTypeMediaReferencePropertyIsReferencedByMoreThanOneMediaSourceDatasource {
}
/**
 * Media reference properties cannot be the title property.
 */
export interface ObjectTypeMediaReferencePropertyIsTitle {
}
/**
 * Media reference properties should not have any render hints defined.
 */
export interface ObjectTypeMediaReferencePropertyShouldNotHaveRenderHints {
}
/**
 * Media reference property is not referenced by any media datasources.
 */
export interface ObjectTypeMediaReferencePropertyTypeHasNoDatasources {
}
/**
 * The provided media set view locators do not point to any existing media set view.
 */
export interface ObjectTypeMediaSetViewLocatorsDoNotExist {
}
/**
 * The left and right operand data types are not the same.
 */
export interface ObjectTypeMismatchedSecurityGroupGranularPolicyOperandDataTypes {
}
/**
 * Type mapping is restricted and the user does not have the required permissions to enable type mapping on an object type for the first time. Once an object type has been mapped, its integration can be turned off and on by anyone.
 */
export interface ObjectTypeMissingPermissionToEnableTypeMapping {
}
/**
 * Some of the properties associated with the workflow are missing in the object type.
 */
export interface ObjectTypeMissingPropertiesAssociatedWithWorkflow {
}
/**
 * Both DataNullabity and DataNullabilityV2 are configured. This is most likely a misconfiguration as there is no reason to send both.
 */
export interface ObjectTypeMultipleDataNullabilitiesConfigured {
}
/**
 * Can only set noEmptyCollections data constraint for Array type. Use noNulls for non collection types.
 */
export interface ObjectTypeNoEmptyCollectionsDataConstraintOnlyAllowedForArrayType {
}
/**
 * Cannot negate comparisons on potentially empty properties. In order to use NOT conditions in granular policies, configure the property to have a non-empty constraint.
 */
export interface ObjectTypeNonEmptyPropertyInSecurityGroupGranularPolicyNotCondition {
}
/**
 * All property types in each object type must be mapped to a datasource or explicitly labeled as edit-only (if the object type backing datasource supports edit-only).
 */
export interface ObjectTypeNotAllPropertyTypesAreMappedToDatasource {
}
/**
 * Nullable marking properties are not allowed to be used in granular policies in the ontology. In order to reference marking property types in granular policies, configure the property to have a non-nullable constraint.
 */
export interface ObjectTypeNullablePropertyInSecurityGroupGranularPolicyMarkingCondition {
}
/**
 * ObjectStorageV1 object types cannot be mapped to Gotham. Please use ObjectStorageV2 for all new object types. Any existing ObjectStorageV1 object types already mapped to Gotham can still be edited, but new or previously unmapped ObjectStorageV1 object types cannot be mapped to Gotham.
 */
export interface ObjectTypeObjectStorageV1MappedToGotham {
}
/**
 * Cannot create Object Type with Storage Backend set to ObjectStorageV1. Please use ObjectStorageV2 instead.
 */
export interface ObjectTypeOsv1CannotCreate {
}
/**
 * Invalid ObjectTypeEntityMetadata encountered. Storage Backend set to ObjectStorageV1 but one or more ObjectStorageV2 ObjectDbs are enabled.
 */
export interface ObjectTypeOsv1WithOsv2ObjectDbsEnabled {
}
/**
 * Invalid ObjectTypeEntityMetadata encountered. More than one cluster is enabled for an ObjectDbType, but this is currently unsupported.
 */
export interface ObjectTypeOsv2WithMultipleClustersEnabled {
}
/**
 * The typeclass with kind `phonograph2_index_replicas` should only be present on the primary key property.
 */
export interface ObjectTypePhonographNumberOfReplicasTypeclassMustBeOnPrimaryKey {
}
/**
 * Primary keys of type FLOAT, DOUBLE or DECIMAL are not allowed with writeback datasets.
 */
export interface ObjectTypePrimaryKeyInvalidTypesWithWriteback {
}
/**
 * The primary key of an object type cannot be backed by a derived properties datasource.
 */
export interface ObjectTypePrimaryKeyIsDerived {
}
/**
 * Having a primary key with the given type is not supported.
 */
export interface ObjectTypePrimaryKeyPropertyTypeDoesNotExist {
}
/**
 * Time dependent properties which are primary keys must be indexedForSearch.
 */
export interface ObjectTypePrimaryKeyTimeDependentPropertyMustBeIndexedForSearch {
}
/**
 * The type of the primary key is not supported.
 */
export interface ObjectTypePrimaryKeyTypeForbidden {
}
/**
 * Edit only property types are not allowed as primary keys with data backed datasource.
 */
export interface ObjectTypePrimaryKeyUsesEditOnlyPropertyTypeInDataBackedDatasource {
}
/**
 * Multiple object type property types reference the same column name.
 */
export interface ObjectTypePropertiesReferenceSameColumnName {
}
/**
 * An object type implements multiple interfaces and explicitly provides some property mappings for some interfaces but not for others. It is required to explicitly provide property mappings for all interfaces or for none.
 */
export interface ObjectTypePropertyImplementationImplicitAndExplicit {
}
/**
 * The property of the object type has a type that is incompatible with the type of the backing data.
 */
export interface ObjectTypePropertyIncompatibleBackingColumnType {
}
/**
 * A referenced PropertyTypeId was the same as the referencing PropertyTypeId, which is not allowed.
 */
export interface ObjectTypePropertyReferencedPropertyMustBeDifferent {
}
/**
 * Property security groups are not yet supported on branches.
 */
export interface ObjectTypePropertySecurityGroupsNotSupportedOnBranches {
}
/**
 * Property security groups are not yet supported with MDOs.
 */
export interface ObjectTypePropertySecurityGroupsNotSupportedWithMultipleDatasources {
}
/**
 * The description of an object type property exceeds the maximum length.
 */
export interface ObjectTypePropertyTypeDescriptionTooLong {
}
/**
 * The display name of an object type property exceeds the maximum length.
 */
export interface ObjectTypePropertyTypeDisplayNameTooLong {
}
/**
 * Multiple non-primary key properties are mapped to the same column.
 */
export interface ObjectTypePropertyTypeDuplicateMappings {
}
/**
 * A marking property must be backed by a datasource that uses granular permissions, either with property security groups, or using RVs.
 */
export interface ObjectTypePropertyTypeMarkingMustBeBackedByDatasourceWithGranularPermissions {
}
/**
 * A marking property must be referenced by a granular policy in a property security group, or must map to a column that is referenced by an RV granular policy.
 */
export interface ObjectTypePropertyTypeMarkingMustBeReferencedInGranularPolicy {
}
/**
 * Marking properties must have a corresponding marking constraint on the datasource.
 */
export interface ObjectTypePropertyTypeMarkingMustHaveAssociatedMarkingConstraintsOnDatasource {
}
/**
 * Property type status conflicts with Object Type status.
 */
export interface ObjectTypePropertyTypeStatusAndObjectTypeStatusConflict {
}
/**
 * The specified ObjectTypeModification is invalid. Field replaceById contains a PropertyId which is not present in the same ObjectType.
 */
export interface ObjectTypePropertyTypeWithReplaceByIdNotFound {
}
/**
 * The reading property on the sensor trait must have the TIME_DEPENDENT type.
 */
export interface ObjectTypeReadingPropertyTypeMustBeTimeDependent {
}
/**
 * Invalid ObjectTypeEntityMetadata encountered. Storage Backend set to ReadOnlyV1V2 but patches are enabled.
 */
export interface ObjectTypeReadOnlyOsv2WithPatchesEnabled {
}
/**
 * StorageBackend ReadOnlyV1V2 is not allowed. Use StorageBackend ObjectStorageV2 instead.
 */
export interface ObjectTypeReadOnlyV1V2NotAllowed {
}
/**
 * The specified datasources do not exist.
 */
export interface ObjectTypeReferencedDatasourceNotFound {
}
/**
 * ObjectTypes cannot reference deleted inline ActionTypes.
 */
export interface ObjectTypeReferenceDeletedInlineActionTypes {
}
/**
 * Property references PropertyTypeId that does not exist on the ObjectType.
 */
export interface ObjectTypeReferencedPropertyDoesNotExist {
}
/**
 * Property references PropertyTypeId that does not exist on the ObjectType.
 */
export interface ObjectTypeReferencedPropertyMustBeDifferent {
}
/**
 * Referenced PropertyTypeId has the incorrect type.
 */
export interface ObjectTypeReferencedPropertyTypeMismatch {
}
/**
 * Required interface link type is missing an implementation.
 */
export interface ObjectTypeRequiredInterfaceLinkTypeNotImplemented {
}
/**
 * Invalid ObjectTypeEntityMetadata encountered. Restricted view datasource V2 is supported only by object storage v2.
 */
export interface ObjectTypeRestrictedViewDatasourceV2SupportedOnlyWithObjectStorageV2 {
}
/**
 * An object type which is synced to RevDB has a stream datasource, which is not supported.
 */
export interface ObjectTypeRevDbIntegratedBackedByStreamDatasource {
}
/**
 * This object type has a RevDb integration enabled, but no Foundry properties have been mapped to a Gotham property. At least one property has to be mapped in order to enable a RevDb integration.
 */
export interface ObjectTypeRevDbIntegrationHasNoMappedProperties {
}
/**
 * RuleSetBindings cannot be associated with a derived property type. Derived property types may not always get loaded so they cannot be trusted for conditional formatting.
 */
export interface ObjectTypeRuleSetBindingAssociatedWithDerivedPropertyType {
}
/**
 * The sensor trait contains a property type id that is not present in the ObjectType's properties.
 */
export interface ObjectTypeSensorTraitReferencesNonExistentProperty {
}
/**
 * Invalid ObjectTypeEntityMetadata encountered. Stream datasource is supported only by object storage v2.
 */
export interface ObjectTypeStreamDatasourceSupportedOnlyWithObjectStorageV2 {
}
/**
 * The number of properties and struct fields in a stream data source object type exceeds the allowed limit.
 */
export interface ObjectTypeStreamDatasourceTooManyPropertiesAndStructFields {
}
/**
 * Invalid ObjectTypeEntityMetadata encountered. Patches are not supported for entities with stream datasource.
 */
export interface ObjectTypeStreamDatasourceWithPatchesEnabled {
}
/**
 * A struct property type of an object type is not mapped to a struct column field on the backing datasource.
 */
export interface ObjectTypeStructColumnFieldMissingFromBackingDatasource {
}
/**
 * The base property type of a struct property type field is not supported.
 */
export interface ObjectTypeStructFieldBasePropertyTypeInvalid {
}
/**
 * Cannot change a property to or from a struct property type.
 */
export interface ObjectTypeStructPropertyCannotChangeBaseTypes {
}
/**
 * There are some struct fields that have aliases that are too long.
 */
export interface ObjectTypeStructPropertyTypeFieldAliasTooLong {
}
/**
 * There are some struct fields that have descriptions that are too long.
 */
export interface ObjectTypeStructPropertyTypeFieldDescriptionTooLong {
}
/**
 * There are some struct fields that have display names that are too long.
 */
export interface ObjectTypeStructPropertyTypeFieldDisplayNameTooLong {
}
/**
 * There are some struct fields that have invalid API names.
 */
export interface ObjectTypeStructPropertyTypeFieldHasInvalidApiName {
}
/**
 * There are some struct fields that have too many aliases.
 */
export interface ObjectTypeStructPropertyTypeFieldHasTooManyAliases {
}
/**
 * There are some struct fields that have too many type classes.
 */
export interface ObjectTypeStructPropertyTypeFieldHasTooManyTypeClasses {
}
/**
 * There are some struct fields that have duplicate API names.
 */
export interface ObjectTypeStructPropertyTypeFieldsDuplicateApiNames {
}
/**
 * There are some struct fields that have kinds that are too long.
 */
export interface ObjectTypeStructPropertyTypeFieldTypeClassKindTooLong {
}
/**
 * There are some struct fields that have names that are too long.
 */
export interface ObjectTypeStructPropertyTypeFieldTypeClassNameTooLong {
}
/**
 * Struct property types can only be used on OSv2 object types.
 */
export interface ObjectTypeStructPropertyTypeIsNotOnObjectStorageV2ObjectType {
}
/**
 * A struct property cannot be the title property of an object.
 */
export interface ObjectTypeStructPropertyTypeIsTitle {
}
/**
 * Struct property types must have at least one field.
 */
export interface ObjectTypeStructPropertyTypeMustHaveAtLeastOneField {
}
/**
 * Struct property types cannot have render hints.
 */
export interface ObjectTypeStructPropertyTypeShouldNotHaveRenderHints {
}
/**
 * Struct property types cannot have render hints.
 */
export interface ObjectTypeStructPropertyTypeShouldNotHaveRenderHintsError {
}
/**
 * Time-dependent properties must be mentioned in the 'properties' set of exactly one time series datasource when using Object Storage V1.
 */
export interface ObjectTypeTimeDependentPropertyMustBeReferencedByExactlyOneTimeSeriesDatasource {
}
/**
 * Time dependent properties should not be primary keys or titles.
 */
export interface ObjectTypeTimeDependentPropertyShouldNotBePrimaryKeyOrTitle {
}
/**
 * Time dependent properties should not be marked as indexed for search.
 */
export interface ObjectTypeTimeDependentPropertyShouldNotBeSearchable {
}
/**
 * Time dependent properties should not have any render hints defined.
 */
export interface ObjectTypeTimeDependentPropertyShouldNotHaveRenderHints {
}
/**
 * Time dependent property is not referenced by any datasources.
 */
export interface ObjectTypeTimeDependentPropertyTypeHasNoDatasources {
}
/**
 * Time series datasource references properties that do not exist on the object type.
 */
export interface ObjectTypeTimeSeriesDatasourceDoesNotReferenceExistingProperties {
}
/**
 * Time series datasource references non-time-dependent properties.
 */
export interface ObjectTypeTimeSeriesDatasourceDoesNotReferenceTimeDependentProperties {
}
/**
 * The timeseries metadata contains a property type id that is not present in the object's properties.
 */
export interface ObjectTypeTimeseriesMetadataReferencesNonExistentProperty {
}
/**
 * The timeSeriesSyncRid for a TIME_SERIES datasource must have service 'time-series-catalog' and type 'sync'.
 */
export interface ObjectTypeTimeSeriesSyncRidIsNotTimeSeriesSync {
}
/**
 * There is no corresponding property type for the given title property.
 */
export interface ObjectTypeTitlePropertyTypeNotFound {
}
/**
 * Object types cannot be deleted if they are referenced by an interface link type.
 */
export interface ObjectTypeToDeleteIsReferencedByExistingInterfaceLinkTypes {
}
/**
 * Object type has too many aliases.
 */
export interface ObjectTypeTooManyAliases {
}
/**
 * The number of properties and struct fields in an object type exceeds the allowed limit.
 */
export interface ObjectTypeTooManyPropertiesAndStructFields {
}
/**
 * The number of type classes for an object type exceeds the allowed limit.
 */
export interface ObjectTypeTooManyTypeClasses {
}
/**
 * The type class kind of an object type exceeds the maximum length.
 */
export interface ObjectTypeTypeClassKindTooLong {
}
/**
 * The type class value of an object type exceeds the maximum length.
 */
export interface ObjectTypeTypeClassValueTooLong {
}
/**
 * A property referenced in granular policy security is not of expected type.
 */
export interface ObjectTypeUnexpectedPropertyTypeReferencedInSecurityGroupGranularPolicy {
}
/**
 * A property specified in a property security group does not have a mapping in the datasource definition.
 */
export interface ObjectTypeUnmappedPropertiesInPropertySecurityGroup {
}
/**
 * Some property types in granular policy security are not mapped in the corresponding property security group.
 */
export interface ObjectTypeUnmappedPropertyInSecurityGroupGranularPolicy {
}
/**
 * Either the specified property type or constant is of an unsupported data type.
 */
export interface ObjectTypeUnsupportedSecurityGroupGranularPolicyOperandDataType {
}
/**
 * Both left and right comparison values are specified as property types, which is not supported.
 */
export interface ObjectTypeUnsupportedSecurityGroupGranularPolicyOperands {
}
/**
 * Value Types cannot be associated with a derived property type.
 */
export interface ObjectTypeValueTypeAssociatedWithDerivedPropertyType {
}
/**
 * Vector properties can only be used on ObjectTypes stored in object storage V2.
 */
export interface ObjectTypeVectorPropertyIsNotOnObjectStorageV2ObjectType {
}
/**
 * The vector similarity function list must be of size 1.
 */
export interface ObjectTypeVectorPropertySimilarityFunctionConfigurationInvalid {
}
/**
 * The dimension of a vector must be positive and lower than 2048 unless otherwise specified otherwise by the vectorPropertyDimensionLimit config.
 */
export interface ObjectTypeVectorPropertyTypeDimensionInvalid {
}
/**
 * Vector property uses an unknown embedding model.
 */
export interface ObjectTypeVectorPropertyTypeEmbeddingModelUnknown {
}
/**
 * View restricted ObjectTypes cannot be mapped to Gotham.
 */
export interface ObjectTypeViewRestrictedContainsGothamMapping {
}
/**
 * Object types with derived properties can be mapped to Gotham, but the derived properties themselves cannot be mapped unless the user is privileged. Type mapped derived properties currently frequently break Gotham queries. Any existing object types with derived properties already mapped to Gotham can still be edited, but new or previously unmapped derived properties cannot be mapped to Gotham.
 */
export interface ObjectTypeWithDerivedPropertiesMappedToGotham {
}
/**
 * Cannot add unsupported property type to an object type with edits history already enabled.
 */
export interface ObjectTypeWithEditsHistoryCannotAddUnsupportedPropertyTypes {
}
/**
 * An error representing when none of an object type's datasources map the title property of the object type.
 */
export interface ObjectTypeWithUnmappedTitleProperty {
}
/**
 * Some of the properties mapped on the workflow object type do not exist on the corresponding workflow object type trait.
 */
export interface ObjectTypeWorkflowTraitMappingsDoNotExistOnTrait {
}
/**
 * There are API name conflicts between Object types, Interface types, Object and Interface types, or Shared Property types.
 */
export interface OntologyEntityApiNameConflicts {
}
export interface OntologyValidationError {
  errorData: ErrorData;
  errorTags: Array<ErrorTag>;
  errorType: ErrorType;
  invalidEntities: Array<InvalidEntity>;
}
/**
 * A RuleSetBinding is referencing missing PropertyTypeIds.
 */
export interface RuleSetBindingReferencingMissingPropertyTypeIds {
}
/**
 * The count of rule sets exceeds the allowed limit.
 */
export interface RuleSetCountExceeded {
}
/**
 * The description of a rule set exceeds the maximum length.
 */
export interface RuleSetDescriptionTooLong {
}
/**
 * The name of a named type within a rule set exceeds the maximum length.
 */
export interface RuleSetNamedTypeNameTooLong {
}
/**
 * The name of a rule set exceeds the maximum length.
 */
export interface RuleSetNameTooLong {
}
export interface SafeArg {
  name: string;
  value: SafeArgValue;
}
export interface SafeArgList {
  values: Array<SafeArgString>;
}
export interface SafeArgOptional {
  value?: SafeArgString | null | undefined;
}
export type SafeArgString = string;
export interface SafeArgValue_string {
  type: "string";
  string: SafeArgString;
}

export interface SafeArgValue_list {
  type: "list";
  list: SafeArgList;
}

export interface SafeArgValue_optional {
  type: "optional";
  optional: SafeArgOptional;
}
export type SafeArgValue =
  | SafeArgValue_string
  | SafeArgValue_list
  | SafeArgValue_optional;

/**
 * The provided sensorLinkTypeId is self-referential (connects the ObjectType to itself). This is not allowed.
 */
export interface SensorLinkTypeCannotBeSelfReferential {
}
/**
 * The provided sensorLinkTypeId does not point to an ObjectType with a sensor trait.
 */
export interface SensorLinkTypeLinkedSensorObjectTypeDoesNotHaveSensorTrait {
}
/**
 * The provided sensorLinkTypeId is not attached to the enclosing ObjectType.
 */
export interface SensorLinkTypeNotAttachedToObjectType {
}
/**
 * The sensor link types were not found.
 */
export interface SensorLinkTypesNotFound {
}
/**
 * The alias of a shared property type exceeds the maximum length.
 */
export interface SharedPropertyTypeAliasTooLong {
}
/**
 * Attachment properties should not be marked as indexed for search.
 */
export interface SharedPropertyTypeAttachmentPropertyShouldNotBeSearchable {
}
/**
 * Attachment properties should not have any render hints defined.
 */
export interface SharedPropertyTypeAttachmentPropertyShouldNotHaveRenderHints {
}
/**
 * Two or more properties with an Object are being backed by the same Shared Property Type. The same Shared Property Type can only be applied to one property of an Object at a time.
 */
export interface SharedPropertyTypeBacksMultipleProperties {
}
/**
 * Cbac marking properties must be set as non empty properties.
 */
export interface SharedPropertyTypeCbacMarkingMustBeNonEmpty {
}
/**
 * The count of shared property types exceeds the allowed limit.
 */
export interface SharedPropertyTypeCountExceeded {
}
/**
 * The description of a shared property type exceeds the maximum length.
 */
export interface SharedPropertyTypeDescriptionTooLong {
}
/**
 * The display name of a shared property type exceeds the maximum length.
 */
export interface SharedPropertyTypeDisplayNameTooLong {
}
export interface SharedPropertyTypeErrorCategory_definition {
  type: "definition";
  definition: InvalidSharedPropertyTypeDefinition;
}

export interface SharedPropertyTypeErrorCategory_reference {
  type: "reference";
  reference: InvalidSharedPropertyTypeReference;
}

export interface SharedPropertyTypeErrorCategory_indeterminate {
  type: "indeterminate";
  indeterminate: IndeterminateErrorCategory;
}
export type SharedPropertyTypeErrorCategory =
  | SharedPropertyTypeErrorCategory_definition
  | SharedPropertyTypeErrorCategory_reference
  | SharedPropertyTypeErrorCategory_indeterminate;

/**
 * Shared property types cannot contain formatters that reference other property types.
 */
export interface SharedPropertyTypeFormatterCannotReferenceOtherPropertyType {
}
/**
 * Geotime series reference properties should not have any render hints defined.
 */
export interface SharedPropertyTypeGeotimeSeriesReferencePropertyShouldNotHaveRenderHints {
}
/**
 * A SharedPropertyType cannot be created with a GothamMapping URI that has been used already. This means that a Gotham property is being attempted to be imported more than once, which is not allowed.
 */
export interface SharedPropertyTypeGothamMappingAlreadyInUse {
}
/**
 * Only privileged user can modify SPT gotham uris.
 */
export interface SharedPropertyTypeHasModifiedGothamUris {
}
/**
 * The specified API name for the shared property type is invalid.
 */
export interface SharedPropertyTypeInvalidApiName {
}
/**
 * The entities' API name prefixes do not match the API Namespace ID stored in Compass and therefore are invalid.
 */
export interface SharedPropertyTypeInvalidApiNamePrefixes {
}
/**
 * The provided MarkingType wasn't an allowed value.
 */
export interface SharedPropertyTypeInvalidMarking {
}
/**
 * The supplied value for shared property type Visibility was invalid.
 */
export interface SharedPropertyTypeInvalidVisibility {
}
/**
 * Media reference properties should not have any render hints defined.
 */
export interface SharedPropertyTypeMediaReferencePropertyShouldNotHaveRenderHints {
}
/**
 * The shared property type modification references a value type that could not be retrieved.
 */
export interface SharedPropertyTypeReferencesMissingValueType {
}
/**
 * All marking properties must be set as non-nullable properties.
 */
export interface SharedPropertyTypesMarkingMustBeNonNullable {
}
/**
 * Cannot modify shared property types that are imported from/to another ontology.
 */
export interface SharedPropertyTypesToModifyAreImported {
}
/**
 * Cannot change a property to or from a struct property type if the property type was imported from Gotham and is mapped as a composite.
 */
export interface SharedPropertyTypeStructPropertyCannotChangeBaseTypes {
}
/**
 * Shared property types cannot be deleted if they are referenced by object types or interface types.
 */
export interface SharedPropertyTypeToDeleteIsReferencedByExistingTypes {
}
/**
 * The number of aliases for a shared property type exceeds the allowed limit.
 */
export interface SharedPropertyTypeTooManyAliases {
}
/**
 * The number of type classes for a shared property type exceeds the allowed limit.
 */
export interface SharedPropertyTypeTooManyTypeClasses {
}
/**
 * The type class kind of a shared property type exceeds the maximum length.
 */
export interface SharedPropertyTypeTypeClassKindTooLong {
}
/**
 * The type class value of a shared property type exceeds the maximum length.
 */
export interface SharedPropertyTypeTypeClassValueTooLong {
}
/**
 * The base type of the value type and the type of the property type do not match.
 */
export interface SharedPropertyTypeValueTypeUsageMismatch {
}
/**
 * The value type and property type are both decimal, but there is a precision or scale mismatch between them.
 */
export interface SharedPropertyTypeValueTypeUsageMismatchScaleOrPrecision {
}
/**
 * The type of the value type and the type of the struct field do not match.
 */
export interface SharedPropertyTypeValueTypeUsageMismatchStructField {
}
/**
 * The property type is missing one or more struct fields from the value type. The property type should have a superset of the fields on the value type. A struct field's API name must match the value type's field name.
 */
export interface SharedPropertyTypeValueTypeUsageMissingStructField {
}
/**
 * The count of type groups exceeds the allowed limit.
 */
export interface TypeGroupCountExceeded {
}
/**
 * The description of a type group exceeds the maximum length.
 */
export interface TypeGroupDescriptionTooLong {
}
/**
 * The display name of a type group exceeds the maximum length.
 */
export interface TypeGroupDisplayNameTooLong {
}
/**
 * The archetype ID of a workflow exceeds the maximum length.
 */
export interface WorkflowArchetypeIdTooLong {
}
/**
 * The archetype version of a workflow exceeds the maximum length.
 */
export interface WorkflowArchetypeVersionTooLong {
}
/**
 * The count of workflows exceeds the allowed limit.
 */
export interface WorkflowCountExceeded {
}
/**
 * The description of a workflow exceeds the maximum length.
 */
export interface WorkflowDescriptionTooLong {
}
/**
 * The display name of a workflow exceeds the maximum length.
 */
export interface WorkflowDisplayNameTooLong {
}
/**
 * There is a mismatch between the trait and property type of the workflow's object type.
 */
export interface WorkflowObjectTypeTraitPropertyTypeMismatch {
}
/**
 * Some properties associated with the workflow are missing.
 */
export interface WorkflowPropertiesAssociatedMissing {
}
/**
 * A link type referenced in the workflow has been deleted.
 */
export interface WorkflowReferencedLinkTypeDeleted {
}
/**
 * A link type referenced in the workflow could not be found.
 */
export interface WorkflowReferencedLinkTypeNotFound {
}
/**
 * An object type referenced in the workflow has been deleted.
 */
export interface WorkflowReferencedObjectTypeDeleted {
}
/**
 * Some object types referenced in the workflow could not be found.
 */
export interface WorkflowReferencedObjectTypesNotFound {
}
