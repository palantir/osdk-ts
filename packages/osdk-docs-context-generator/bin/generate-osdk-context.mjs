#!/usr/bin/env node
/*
 * Copyright 2023 Palantir Technologies, Inc. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

import {
  TYPESCRIPT_OSDK_CONTEXT,
  TYPESCRIPT_OSDK_EXAMPLES,
} from "@osdk/typescript-sdk-docs-examples";
import { mkdirSync, writeFileSync } from "fs";
import { join, resolve } from "path";

// Parse command line arguments
const args = process.argv.slice(2);
let outputDir = null;

for (let i = 0; i < args.length; i++) {
  if (args[i] === "--output-dir" && i + 1 < args.length) {
    outputDir = resolve(args[i + 1]);
    break;
  }
}

if (!outputDir) {
  // eslint-disable-next-line no-console
  console.error("Error: --output-dir argument is required");
  // eslint-disable-next-line no-console
  console.error("Usage: generate-osdk-context --output-dir <path>");
  process.exit(1);
}

const generatedDir = join(outputDir, "src", "generated");
const outputFile = join(generatedDir, "inlinedExamples.ts");

// Ensure the output directory exists
mkdirSync(generatedDir, { recursive: true });

// Generate the TypeScript file with the inlined constants
const content = `/*
 * Copyright 2023 Palantir Technologies, Inc. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

// This file is auto-generated by @osdk/osdk-docs-context-generator
// Do not edit manually

// Types from the original typescript-sdk-docs-examples package
export interface NestedExampleMetadata {
  code: string;
}

export type NestedExampleEntry = NestedExampleMetadata | {
  [variationKey: string]: NestedExampleMetadata | NestedExampleEntry;
};

export interface NestedVersionExamples {
  [exampleName: string]: NestedExampleEntry;
}

export interface NestedExamplesHierarchy {
  kind: "examples";
  versions: {
    [version: string]: NestedVersionExamples;
  };
}

// Types for the flat TYPESCRIPT_OSDK_EXAMPLES structure
interface FlatExamplesHierarchy {
  kind: "examples";
  versions: {
    [version: string]: {
      examples: {
        [exampleName: string]: { code: string };
      };
    };
  };
}

export const TYPESCRIPT_OSDK_CONTEXT: NestedExamplesHierarchy = ${
  JSON.stringify(TYPESCRIPT_OSDK_CONTEXT, null, 2)
};

export const TYPESCRIPT_OSDK_EXAMPLES: FlatExamplesHierarchy = ${
  JSON.stringify(TYPESCRIPT_OSDK_EXAMPLES, null, 2)
};
`;

writeFileSync(outputFile, content);
// eslint-disable-next-line no-console
console.log(`âœ… Generated ${outputFile}`);
