# {{project}}

This project was generated with [`@osdk/create-widget`](https://www.npmjs.com/package/@osdk/create-widget) and demonstrates developing custom widgets to be embedded within Foundry UIs such as Workshop. It uses the Ontology SDK package `{{osdkPackage}}` with React on top of Vite. Check out the [Vite](https://vitejs.dev/guide/) docs for further configuration. The Vite plugin [`@osdk/widget.vite-plugin.unstable`](https://www.npmjs.com/package/@osdk/widget.vite-plugin.unstable) automatically generates a `widgets.config.json` manifest file containing metadata about widgets inside this project during the build command.

## Developing

Run the following command or equivalent with your preferred package manager to start a local development server and follow the instructions printed to set up developer mode in Foundry:

```sh
npm run dev
```


## Deploying

A `foundry.config.json` file is included in the root of this project containing the deployment configuration to Foundry.

Run the following command or equivalent with your preferred package manager to create a production build of your widgets:

```sh
npm run build
```

A `.palantir/widgets.config.json` manifest file containing metadata about your widgets is created during the build.

Run the following command or equivalent with your preferred package manager to deploy the production build of your widgets:

```sh
npx @osdk/cli@beta unstable widgetset deploy
```

By default the `package-json` strategy is used for determining the version for your widgets from the `version` field in this project's `package.json` file. Remember to update this field and rerun the build command to update the manifest file when deploying a new version.

If you prefer to infer the version from a git tag, you can use the `git-describe` strategy by setting the `autoVersion` field in the `foundry.config.json` file to:

```json
{
  "type": "git-describe",
  "tagPrefix": ""
}
```
